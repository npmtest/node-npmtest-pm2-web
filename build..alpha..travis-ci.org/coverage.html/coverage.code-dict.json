{"/home/travis/build/npmtest/node-npmtest-pm2-web/test.js":"/* istanbul instrument in package npmtest_pm2_web */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-pm2-web/lib.npmtest_pm2_web.js":"/* istanbul instrument in package npmtest_pm2_web */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_pm2_web = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_pm2_web = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-pm2-web/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-pm2-web && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_pm2_web */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_pm2_web\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_pm2_web.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_pm2_web.rollup.js'] =\n            local.assetsDict['/assets.npmtest_pm2_web.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_pm2_web.__dirname + '/lib.npmtest_pm2_web.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-pm2-web/node_modules/pm2-web/pm2-web.js":"\nvar PM2Web = require(__dirname + \"/server/app\");\n\nvar pm2web = new PM2Web({});\npm2web.start();\n","/home/travis/build/npmtest/node-npmtest-pm2-web/node_modules/pm2-web/server/app.js":"var winston = require(\"winston\"),\n\tContainer = require(\"wantsit\").Container\n\tExpress = require(\"express\"),\n\thttp = require(\"http\"),\n\thttps = require(\"https\"),\n\tpath = require(\"path\"),\n\tWebSocketServer = require(\"ws\").Server,\n\tEventEmitter = require(\"wildemitter\"),\n\tutil = require(\"util\"),\n\tfs = require(\"fs\"),\n\tmethodOverride = require('method-override');\n\nvar REQUIRED_PM2_VERSION = \"0.11.0\";\n\nPM2Web = function(options) {\n\tEventEmitter.call(this);\n\n\t// create container\n\tthis._container = new Container();\n\n\t// set up logging\n\tthis._container.createAndRegister(\"logger\", winston.Logger, {\n\t\ttransports: [\n\t\t\tnew (winston.transports.Console)({\n\t\t\t\ttimestamp: true,\n\t\t\t\tcolorize: true\n\t\t\t})\n\t\t]\n\t});\n\n\t// non-optional options\n\toptions = options || {};\n\toptions.requiredPm2Version = REQUIRED_PM2_VERSION;\n\n\t// parse configuration\n\tthis._container.createAndRegister(\"config\", require(__dirname + \"/components/Configuration\"), options);\n\n\t// web controllers\n\tthis._container.createAndRegister(\"homeController\", require(__dirname + \"/routes/Home\"));\n\n\t// listens for events\n\tthis._container.register(\"pm2InterfaceFactory\", require(\"pm2-interface\"));\n\tthis._container.createAndRegister(\"pm2Listener\", require(__dirname + \"/components/PM2Listener\"));\n\n\t// create express\n\tthis._express = this._createExpress();\n\n\t// http(s) server\n\tthis._server = this._createServer(this._express);\n\n\t// web sockets\n\tthis._container.createAndRegister(\"webSocketResponder\", require(__dirname + \"/components/WebSocketResponder\"));\n \tthis._container.createAndRegister(\"webSocketServer\", WebSocketServer, {\n\t\tserver: this._server,\n\t\tpath: \"/ws\"\n\t});\n\n\t// holds host data\n\tthis._container.createAndRegister(\"hostList\", require(__dirname + \"/components/ServerHostList\"));\n\n\t// make errors a little more descriptive\n\tprocess.on(\"uncaughtException\", function (exception) {\n\t\tthis._container.find(\"logger\").error(\"PM2\", \"Uncaught exception\", exception && exception.stack ? exception.stack : \"No stack trace available\");\n\n\t\tthrow exception;\n\t}.bind(this));\n\n\t// make sure we shut down cleanly\n\tprocess.on(\"SIGINT\", this.stop.bind(this));\n\n\t// make sure we shut down cleanly\n\tprocess.on(\"message\", function(message) {\n\t\tif (message == \"shutdown\") {\n\t\t\tthis.stop();\n\t\t}\n\t});\n\n\t// make sure we shut down cleanly\n\tprocess.on(\"exit\", this.stop.bind(this));\n};\nutil.inherits(PM2Web, EventEmitter);\n\nPM2Web.prototype._route = function(express, controller, url, method) {\n\tvar component = this._container.find(controller);\n\n\texpress[method](url, component[method].bind(component));\n};\n\nPM2Web.prototype._createServer = function(express) {\n\tvar config = this._container.find(\"config\");\n\n\tif(config.get(\"www:ssl:enabled\")) {\n\t\tif(config.get(\"www:ssl:upgrade\")) {\n\t\t\t// create an app that will redirect all requests to the https version\n\t\t\tvar httpsUrl = \"https://\" + config.get(\"www:host\");\n\n\t\t\tif(config.get(\"www:ssl:port\") != 443) {\n\t\t\t\thttpsUrl += \":\" + config.get(\"www:ssl:port\");\n\t\t\t}\n\n\t\t\tvar redirectApp = Express();\n\t\t\tredirectApp.get(\"*\",function(request, response){\n\t\t\t\tresponse.redirect(httpsUrl + request.url);\n\t\t\t});\n\t\t\tprocess.nextTick(function() {\n\t\t\t\tthis._redirectServer = http.createServer(redirectApp);\n\t\t\t\tthis._redirectServer.listen(config.get(\"www:port\"), function() {\n\t\t\t\t\tthis._container.find(\"logger\").info(\"PM2Web\", \"HTTP to HTTPS upgrade server listening on port \" + this._redirectServer.address().port);\n\t\t\t\t}.bind(this));\n\t\t\t}.bind(this));\n\t\t}\n\n\t\treturn https.createServer({\n\t\t\tpassphrase: config.get(\"www:ssl:passphrase\"),\n\t\t\tkey: fs.readFileSync(config.get(\"www:ssl:key\")),\n\t\t\tcert: fs.readFileSync(config.get(\"www:ssl:certificate\"))\n\t\t}, this._express);\n\t}\n\n\treturn http.createServer(express);\n}\n\nPM2Web.prototype._createExpress = function() {\n\tvar config = this._container.find(\"config\");\n\tvar port = config.get(\"www:port\");\n\n\tif(config.get(\"www:ssl:enabled\")) {\n\t\tport = config.get(\"www:ssl:port\");\n\t}\n\n\tvar express = Express();\n\texpress.set(\"port\", port);\n\texpress.set(\"view engine\", \"jade\");\n\texpress.set(\"views\", __dirname + \"/views\");\n\n\t// create routes\n\tthis._route(express, \"homeController\", \"/\", \"get\");\n\tthis._route(express, \"homeController\", \"/hosts/:host\", \"get\");\n\n\tif(config.get(\"www:authentication:enabled\")) {\n\t\texpress.use(Express.basicAuth(config.get(\"www:authentication:username\"), config.get(\"www:authentication:password\")));\n\t}\n\n\texpress.use(Express.logger(\"dev\"));\n\texpress.use(Express.urlencoded())\n\texpress.use(Express.json())\n\texpress.use(methodOverride('X-HTTP-Method'));          // Microsoft\n\texpress.use(methodOverride('X-HTTP-Method-Override')); // Google/GData, default option\n\texpress.use(methodOverride('X-Method-Override'));      // IBM\n\texpress.use(express.router);\n\texpress.use(Express.static(__dirname + \"/public\"));\n\n\t// development only\n\texpress.use(Express.errorHandler());\n\n\treturn express;\n}\n\nPM2Web.prototype.setAddress = function(address) {\n\tthis._address = address;\n};\n\nPM2Web.prototype.getAddress = function() {\n\treturn this._address;\n};\n\nPM2Web.prototype.start = function() {\n\tvar config = this._container.find(\"config\");\n\n\tprocess.nextTick(function() {\n\t\tthis._server.listen(this._express.get(\"port\"), config.get(\"www:address\"), function() {\n\t\t\tthis._container.find(\"logger\").info(\"Express server listening on \" + this._server.address().address + \":\" + this._server.address().port);\n\n\t\t\tthis.setAddress(\"http\" + (config.get(\"www:ssl:enabled\") ? \"s\": \"\") + \"://\" + config.get(\"www:host\") + \":\" + this._server.address().port);\n\n\t\t\tthis.emit(\"start\");\n\t\t}.bind(this));\n\n\t\tif(config.get(\"mdns:enabled\")) {\n\t\t\ttry {\n\t\t\t\tvar mdns = require(\"mdns2\");\n\n\t\t\t\tthis._container.find(\"logger\").info(\"Starting MDNS adverisment with name\", this._container.find(\"config\").get(\"mdns:name\"));\n\n\t\t\t\t// publish via Bonjour\n\t\t\t\tthis._advert = mdns.createAdvertisement(mdns.tcp(\"http\"), this._express.get(\"port\"), {\n\t\t\t\t\tname: config.get(\"mdns:name\")\n\t\t\t\t});\n\t\t\t\tthis._advert.start();\n\t\t\t} catch(e) {\n\t\t\t\tthis._container.find(\"logger\").warn(\"Could not start mdns argument - did mdns2 install correctly?\", e.message);\n\t\t\t}\n\t\t}\n\t}.bind(this));\n};\n\nPM2Web.prototype.stop = function() {\n\tvar logger = this._container.find(\"logger\");\n\tlogger = console;\n\n\tlogger.info(\"PM2Web\", \"Shutting down Express\");\n\tthis._server.close(function() {\n\t\tlogger.info(\"PM2Web\", \"Express shut down.\");\n\t});\n\n\tlogger.info(\"PM2Web\", \"Shutting WebSocket\");\n\tthis._container.find(\"webSocketServer\").close();\n\n\tlogger.info(\"PM2Web\", \"Disconnecting from pm2-interface\");\n\tthis._container.find(\"pm2Listener\").close();\n\n\tif(this._advert) {\n\t\tlogger.info(\"PM2Web\", \"Shutting down MDNS Advert\");\n\t\tthis._advert.stop();\n\t}\n\n\tif(this._redirectServer) {\n\t\tlogger.info(\"PM2Web\", \"Shutting down HTTP to HTTPS upgrade server\");\n\t\tthis._redirectServer.close(function() {\n\t\t\tlogger.info(\"PM2Web\", \"HTTP to HTTPS upgrade server shut down.\");\n\t\t});\n\t}\n};\n\nmodule.exports = PM2Web;\n","/home/travis/build/npmtest/node-npmtest-pm2-web/node_modules/pm2-web/server/components/Configuration.js":"var Autowire = require(\"wantsit\").Autowire,\n\tcjson = require(\"cjson\"),\n\tfs = require(\"fs\"),\n  argv = require(\"minimist\")(process.argv.slice(2)),\n\tpwuid = require('pwuid');\n\nvar DEFAULT_CONFIG_FILE = __dirname + \"/../../config.json\";\nvar GLOBAL_CONFIG_FILE = \"/etc/pm2-web/config.json\";\nvar USER_CONFIG_FILE = process.env[\"HOME\"] + \"/.config/pm2-web/config.json\";\n\nvar Configuration = function(options) {\n\tthis._logger = Autowire;\n\n\t// load defaults from bundled config file\n\tthis._config = cjson.load(DEFAULT_CONFIG_FILE);\n\n\t// override defaults with config file\n\tthis._override(this._loadConfigFile(), this._config);\n\n\t// remove extra bits from command line arguments\n\tif(argv) {\n\t\tdelete argv._;\n\t\tdelete argv.$0;\n\n\t\t// respect arguments passed on the command line\n\t\tvar commandLine = {};\n\n\t\tObject.keys(argv).forEach(function(key) {\n\t\t\tthis._apply(key, argv[key], commandLine);\n\t\t}.bind(this));\n\n\t\t// override config file with command line\n\t\tthis._override(commandLine, this._config);\n\t}\n\n\t// override everything with passed arguments\n\tthis._override(options || {}, this._config);\n\n\tthis._normaliseHosts();\n}\n\nConfiguration.prototype.afterPropertiesSet = function() {\n\t// need to rethink this\n\tif(argv[\"config\"]) {\n\t\tthis._logger.info(\"Configuration\", \"Loading config file from\", argv[\"config\"]);\n\t} else if (fs.existsSync(USER_CONFIG_FILE)) {\n\t\tthis._logger.info(\"Configuration\", \"Loading config file from\", USER_CONFIG_FILE);\n\t} else if (fs.existsSync(GLOBAL_CONFIG_FILE)) {\n\t\tthis._logger.info(\"Configuration\", \"Loading config file from\", GLOBAL_CONFIG_FILE);\n\t}\n\n\t// do not print passwords in the logs...\n\tvar config = JSON.parse(JSON.stringify(this._config));\n\tconfig.www.authentication.password = \"**** LA LA LA, NOTHING TO SEE HERE ****\";\n\tconfig.www.ssl.passphrase = \"**** LA LA LA, NOTHING TO SEE HERE ****\";\n\n\tthis._logger.info(\"Configuration\", \"Loaded default configuration from\", DEFAULT_CONFIG_FILE);\n\tthis._logger.info(\"Configuration\", \"Final configuration:\", JSON.stringify(config, null, 2));\n}\n\nConfiguration.prototype._loadConfigFile = function() {\n\t// try to find a config file\n\tif(argv[\"config\"]) {\n\t\t// if a config file has been specified make it override all settings\n\t\t//this._logger.info(\"Loading config file from\", this.get(\"config\"));\n\t\treturn cjson.load(argv[\"config\"]);\n\t} else if (fs.existsSync(USER_CONFIG_FILE)) {\n\t\t// otherwise if a user specific config file is present, make that override all settings\n\t\t//this._logger.info(\"Loading config file from\", USER_CONFIG_FILE);\n\t\treturn cjson.load(USER_CONFIG_FILE);\n\t} else if (fs.existsSync(GLOBAL_CONFIG_FILE)) {\n\t\t// otherwise if a global config file is present, make that override all settings\n\t\t//this._logger.info(\"Loading config file from\", GLOBAL_CONFIG_FILE);\n\t\treturn cjson.load(GLOBAL_CONFIG_FILE);\n\t}\n\n\treturn {};\n}\n\nConfiguration.prototype._normaliseHosts = function() {\n\tvar args = this.get(\"pm2\");\n\n\tif(!args) {\n\t\targs = [];\n\t}\n\n\t// command line arguments arrive like:\n\t// --pm2:host=foo --pm2:rpc=6666 --pm2:host=bar\n\t// {host: [\"foo\", \"bar\"], rpc: 6666}\n\tif(Array.isArray(args.host)) {\n\t\tvar hosts = [];\n\n\t\targs.rpc = this._arrayify(args.rpc);\n\t\targs.events = this._arrayify(args.events);\n\t\targs.inspector = this._arrayify(args.inspector);\n\n\t\targs.host.forEach(function(host, index) {\n\t\t\thosts.push(this._defaults({\n\t\t\t\t\"host\": host,\n\t\t\t\t\"rpc\": args.rpc[index] ? args.rpc[index] : undefined,\n\t\t\t\t\"events\": args.events[index] ? args.events[index] : undefined,\n\t\t\t\t\"inspector\": args.inspector[index] ? args.inspector[index] : undefined\n\t\t\t}, {\n\t\t\t\t\"host\": \"localhost\",\n\t\t\t\t\"rpc\": \"~/.pm2/rpc.sock\",\n\t\t\t\t\"events\": \"~/.pm2/pub.sock\"\n\t\t\t}));\n\t\t}.bind(this));\n\n\t\targs = hosts;\n\t}\n\n\tif(!Array.isArray(args) && typeof args == \"object\") {\n\t\targs = [args];\n\t}\n\n\tvar userDetails = pwuid()\n\n\t// ensure data is correct for each host\n\targs.forEach(function(host) {\n\t\thost.host = host.host || \"localhost\";\n\t\thost.rpc = host.rpc || \"~/.pm2/rpc.sock\";\n\t\thost.events = host.events || \"~/.pm2/pub.sock\";\n\n\t\tif(host.rpc.substring(0, 1) == \"~\") {\n\t\t\thost.rpc = userDetails.dir + host.rpc.substring(1)\n\t\t}\n\n\t\tif(host.events.substring(0, 1) == \"~\") {\n\t\t\thost.events = userDetails.dir + host.events.substring(1)\n\t\t}\n\n\t\tif(host.inspector === undefined) {\n\t\t\tdelete host.inspector;\n\t\t}\n\t});\n\n\tthis.set(\"pm2\", args);\n}\n\nConfiguration.prototype._arrayify = function(arg) {\n\tif(!arg) {\n\t\treturn [];\n\t}\n\n\tif(Array.isArray(arg)) {\n\t\treturn arg;\n\t}\n\n\treturn [arg];\n}\n\nConfiguration.prototype.get = function(key) {\n\tif(!this._config || !key) {\n\t\treturn null;\n\t}\n\n\tvar value = this._config;\n\n\tkey.split(\":\").forEach(function(property) {\n\t\tif(value && typeof(value[property]) != \"undefined\") {\n\t\t\tvalue = value[property];\n\t\t} else {\n\t\t\tvalue = null;\n\t\t}\n\t});\n\n\treturn value;\n}\n\nConfiguration.prototype.set = function(key, value) {\n\tif(!this._config || !key) {\n\t\treturn;\n\t}\n\n\tthis._apply(key, value, this._config);\n}\n\nConfiguration.prototype._apply = function(key, value, target) {\n\tvar parts;\n\n\tif(key.indexOf(\":\") != -1) {\n\t\tparts = key.split(\":\");\n\t} else {\n\t\tparts = key.split(\".\");\n\t}\n\n\tparts.forEach(function(property, index) {\n\t\tif((parts.length - 1) == index) {\n\t\t\ttarget[property] = value;\n\t\t} else {\n\t\t\tif(!target[property]) {\n\t\t\t\ttarget[property] = {};\n\t\t\t}\n\n\t\t\ttarget = target[property];\n\t\t}\n\t});\n}\n\nConfiguration.prototype._defaults = function(object, defaults) {\n\tif(typeof object == \"undefined\" || object == null) {\n\t\treturn defaults;\n\t}\n\n\tif(typeof defaults == \"string\" || defaults instanceof String) {\n\t\treturn object ? object : defaults;\n\t}\n\n\tif(typeof defaults == \"boolean\") {\n\t\treturn object ? true : false;\n\t}\n\n\tif(!isNaN(parseFloat(defaults)) && isFinite(defaults)) {\n\t\treturn typeof object == \"undefined\" ? defaults : object;\n\t}\n\n\tif(Array.isArray(defaults)) {\n\t\tvar output = [];\n\n\t\tobject.forEach(function(entry, index) {\n\t\t\toutput.push(this._defaults(entry, defaults[index] ? defaults[index] : defaults[0]));\n\t\t}.bind(this));\n\n\t\treturn output;\n\t}\n\n\tif(typeof defaults == \"object\") {\n\t\tvar output = {};\n\n\t\tObject.keys(defaults).forEach(function(key) {\n\t\t\toutput[key] = this._defaults(object[key], defaults[key]);\n\t\t}.bind(this));\n\n\t\treturn output;\n\t}\n\n\tthis._logger.error(\"Configuration\", \"Don't know what to do with\", object, \"expected\", defaults);\n}\n\nConfiguration.prototype._override = function(source, target) {\n\tObject.keys(source).forEach(function(key) {\n\t\tif(typeof source[key] == \"string\" || source[key] instanceof String ||\n\t\t\ttypeof source[key] == \"boolean\" ||\n\t\t\t(!isNaN(parseFloat(source[key])) && isFinite(source[key]))) {\n\t\t\ttarget[key] = source[key];\n\t\t}\n\n\t\tif(Array.isArray(source[key])) {\n\t\t\ttarget[key] = source[key];\n\t\t} else if(Array.isArray(target[key])) {\n\t\t\ttarget[key] = [source[key]];\n\t\t}\n\n\t\tif(typeof source[key] == \"object\") {\n\t\t\tthis._override(source[key], target[key]);\n\t\t}\n\t}.bind(this));\n}\n\nmodule.exports = Configuration;\n","/home/travis/build/npmtest/node-npmtest-pm2-web/node_modules/pm2-web/server/routes/Home.js":"var Autowire = require(\"wantsit\").Autowire;\n\tpkg = require(__dirname + \"/../../package.json\");\n\nvar HomeController = function() {\n\tthis._config = Autowire;\n};\n\nHomeController.prototype.get = function(request, response){\n\tresponse.render(\"index\", {\n\t\tversion: pkg.version\n\t});\n};\n\nmodule.exports = HomeController;\n","/home/travis/build/npmtest/node-npmtest-pm2-web/node_modules/pm2-web/server/components/PM2Listener.js":"var Autowire = require(\"wantsit\").Autowire,\n\tEventEmitter = require(\"wildemitter\"),\n\tutil = require(\"util\"),\n\tsemver = require(\"semver\"),\n\tpkg = require(__dirname + \"/../../package.json\");\n\nvar DEFAULT_DEBUG_PORT = 5858;\n\nvar PM2Listener = function() {\n\tEventEmitter.call(this);\n\n\tthis._config = Autowire;\n\tthis._logger = Autowire;\n\tthis._pm2InterfaceFactory = Autowire;\n\n\tthis._pm2List = {};\n}\nutil.inherits(PM2Listener, EventEmitter);\n\nPM2Listener.prototype.afterPropertiesSet = function() {\n\tthis._config.get(\"pm2\").forEach(function(pm2Details) {\n\t\tthis._connect(pm2Details);\n\t}.bind(this));\n}\n\nPM2Listener.prototype.close = function() {\n\tObject.keys(this._pm2List).forEach(function(key) {\n\t\tthis._pm2List[key].disconnect();\n\t}.bind(this));\n}\n\nPM2Listener.prototype._connect = function(pm2Details) {\n\tthis._logger.debug(\"PM2Listener\", \"Connecting to\", pm2Details.host, \"RPC port\", pm2Details.rpc, \"Event port\", pm2Details.events);\n\n\tvar remote = this._pm2InterfaceFactory({\n\t\tsub_port: pm2Details.events,\n\t\trpc_port: pm2Details.rpc,\n\t\tbind_host: pm2Details.host\n\t});\n\n\tremote.on(\"ready\", this._pm2RPCSocketReady.bind(this, remote, pm2Details));\n\tremote.on(\"closed\", this._pm2RPCSocketClosed.bind(this, remote));\n\tremote.on(\"close\", this._pm2EventSocketClosed.bind(this, remote));\n\tremote.on(\"reconnecting\", this._pm2EventSocketReconnecting.bind(this, remote));\n}\n\nPM2Listener.prototype._pm2RPCSocketReady = function(pm2Interface, pm2Details) {\n\tif(this._pm2List[pm2Interface.bind_host]) {\n\t\treturn;\n\t}\n\n\tthis._logger.info(\"PM2Listener\", pm2Interface.bind_host, \"RPC socket ready\");\n\n\tif(!pm2Interface.rpc.getVersion) {\n\t\tpm2Interface.pm2 = {\n\t\t\tversion: \"OBSOLETE\",\n\t\t\tcompatible: false\n\t\t};\n\n\t\treturn this._addIncompatiblePm2(pm2Interface, pm2Interface.pm2.version, pm2Details);\n\t}\n\n\tthis._logger.info(\"PM2Listener\", \"Querying version number from\", pm2Interface.bind_host);\n\n\tpm2Interface.rpc.getVersion({}, function(err, version) {\n\t\tpm2Interface.pm2 = {\n\t\t\tversion: version,\n      compatible: true\n\t\t};\n\n\t\tif(!semver.gte(version, this._config.get(\"requiredPm2Version\"))) {\n\t\t\tpm2Interface.pm2.compatible = false;\n\n\t\t\treturn this._addIncompatiblePm2(pm2Interface);\n\t\t}\n\n\t\tthis._addCompatiblePm2(pm2Interface, version, pm2Details);\n\t}.bind(this));\n}\n\nPM2Listener.prototype._addIncompatiblePm2 = function(pm2Interface, version) {\n\tif(version) {\n\t\tthis._logger.error(\"PM2Listener\", pm2Interface.bind_host, \"is running pm2\", version, \"which is incompatible with pm2-web\", pkg.version, \"- please upgrade pm2 to\", this._config.get(\"requiredPm2Version\"), \"or higher.\");\n\t} else {\n\t\tthis._logger.error(\"PM2Listener\", \"The version of pm2 running on\", pm2Interface.bind_host, \"is incompatible with pm2-web\", pkg.version, \"- please upgrade pm2 to\", this._config.get(\"requiredPm2Version\"), \"or higher.\");\n\t}\n\n\tthis._pm2List[pm2Interface.bind_host] = pm2Interface;\n\n  this.emit(\"systemData\", {\n    name: pm2Interface.bind_host,\n    pm2: pm2Interface.pm2,\n    system: {\n      hostname: pm2Interface.bind_host,\n      load: [],\n      memory: {\n        free: 0,\n        total: 0\n      }\n    },\n    pm2: pm2Interface.pm2,\n    processes: []\n  });\n}\n\nPM2Listener.prototype._addCompatiblePm2 = function(pm2Interface, version, pm2Details) {\n\tthis._logger.info(\"PM2Listener\", pm2Interface.bind_host, \"is running pm2\", version);\n\n\t// listen for all events\n\tpm2Interface.bus.on(\"*\", function(event, data) {\n\t\tdata.name = pm2Interface.bind_host;\n\t\tthis.emit(event, data);\n\t}.bind(this));\n\n\tvar getSystemData = function() {\n\t\tpm2Interface.rpc.getSystemData({}, function(error, data) {\n\t\t\tif(error) {\n\t\t\t\tthis._logger.warn(\"PM2Listener\", \"Error retrieving system data\", error.message);\n\t\t\t} else {\n\t\t\t\t// only expose fields we are interested in\n\t\t\t\tvar systemData = this._mapSystemData(pm2Interface, data, pm2Details);\n\n\t\t\t\tthis.emit(\"systemData\", systemData);\n\t\t\t}\n\n\t\t\tsetTimeout(getSystemData, this._config.get(\"updateFrequency\"));\n\t\t}.bind(this));\n\t}.bind(this);\n\tgetSystemData();\n\n\tthis._pm2List[pm2Interface.bind_host] = pm2Interface;\n}\n\nPM2Listener.prototype._mapSystemData = function(pm2Interface, data, pm2Details) {\n\t// support for pm2 < 0.7.2\n\tif(!data.system.time) {\n\t\tdata.system.time = Date.now();\n\t}\n\n\tvar systemData = {\n\t\tname: pm2Interface.bind_host,\n\t\tinspector: pm2Details.inspector,\n\t\tsystem: {\n\t\t\thostname: data.system.hostname,\n\t\t\tcpu_count: data.system.cpus.length,\n\t\t\tload: [\n\t\t\t\tdata.system.load[0],\n\t\t\t\tdata.system.load[1],\n\t\t\t\tdata.system.load[2]\n\t\t\t],\n\t\t\tuptime: data.system.uptime,\n\t\t\tmemory: {\n\t\t\t\tfree: data.system.memory.free,\n\t\t\t\ttotal: data.system.memory.total\n\t\t\t},\n\t\t\ttime: data.system.time\n\t\t},\n\t\tpm2: pm2Interface.pm2,\n\t\tprocesses: []\n\t};\n\n\tvar reloading = [];\n\n\tdata.processes.forEach(function(process) {\n\t\tif((typeof process.pm_id == \"string\" || process.pm_id instanceof String) && process.pm_id.substring(0, 8) == \"todelete\") {\n\t\t\t// process has been reloaded - this is the old process that will be killed\n\t\t\t// so record that it's reloading but do not create a duplicate process for it.\n\t\t\treloading.push(parseInt(process.pm_id.substring(8), 10));\n\n\t\t\treturn;\n\t\t}\n\n\t\tif(process.pm2_env.status != \"online\" && process.pm2_env.status != \"stopped\" && process.pm2_env.status != \"errored\" && process.pm2_env.status != \"launching\" && process.pm2_env.status != \"stopping\") {\n\t\t\tthis._logger.warn(\"Unknown status!\", process.pm2_env.status);\n\t\t}\n\n\t\tsystemData.processes.push({\n\t\t\tid: process.pm_id,\n\t\t\tpid: process.pid,\n\t\t\tname: process.pm2_env.name,\n\t\t\tscript: process.pm2_env.pm_exec_path,\n\t\t\tuptime: (data.system.time - process.pm2_env.pm_uptime) / 1000,\n\t\t\trestarts: process.pm2_env.restart_time,\n\t\t\tstatus: process.pm2_env.status,\n\t\t\tmemory: process.monit.memory,\n\t\t\tcpu: process.monit.cpu,\n      mode: process.pm2_env.exec_mode.substring(0, process.pm2_env.exec_mode.indexOf(\"_\")),\n\t\t\tdebugPort: this._findDebugPort(process.pm2_env.nodeArgs)\n\t\t});\n\t}.bind(this));\n\n\t// mark processes that are reloading as such\n\tsystemData.processes.forEach(function(process) {\n\t\tprocess.reloading = reloading.indexOf(process.id) != -1;\n\t});\n\n\treturn systemData;\n}\n\nPM2Listener.prototype._pm2RPCSocketClosed = function(pm2Interface) {\n\tthis._logger.info(\"PM2Listener\", pm2Interface.bind_host, \"RPC socket closed\");\n\n\tdelete this._pm2List[pm2Interface.bind_host];\n}\n\nPM2Listener.prototype._pm2EventSocketClosed = function(pm2Interface) {\n\tthis._logger.info(\"PM2Listener\", pm2Interface.bind_host, \"event socket close\");\n}\n\nPM2Listener.prototype._pm2EventSocketReconnecting = function(pm2Interface) {\n\tthis._logger.info(\"PM2Listener\", pm2Interface.bind_host, \"event socket reconnecting\");\n}\n\nPM2Listener.prototype.stopProcess = function(host, pm_id) {\n\tthis._doByProcessId(host, pm_id, \"stopProcessId\");\n}\n\nPM2Listener.prototype.startProcess = function(host, pm_id) {\n\tthis._doByProcessId(host, pm_id, \"startProcessId\");\n}\n\nPM2Listener.prototype.restartProcess = function(host, pm_id) {\n\tthis._doByProcessId(host, pm_id, \"restartProcessId\");\n}\n\nPM2Listener.prototype.reloadProcess = function(host, pm_id) {\n\tif(this._config.get(\"forceHardReload\")) {\n\t\tthis._doByProcessId(host, pm_id, \"reloadProcessId\");\n\t} else {\n\t\tthis._doByProcessId(host, pm_id, \"softReloadProcessId\");\n\t}\n}\n\nPM2Listener.prototype.debugProcess = function(host, pm_id) {\n\t// put the remot process into debug mode\n\tthis._pm2List[host].rpc.sendSignalToProcessId({\n\t\tprocess_id: pm_id,\n\t\tsignal: \"SIGUSR1\"\n\t}, function(error) {\n\n\t});\n};\n\nPM2Listener.prototype._doByProcessId = function(host, pm_id, action) {\n\tif(!this._pm2List[host]) {\n\t\treturn this._logger.info(\"PM2Listener\", \"Invalid host\", host, \"not in\", Object.keys(this._pm2List));\n\t}\n\n\tthis._logger.info(\"PM2Listener\", host, pm_id, action);\n\tthis._pm2List[host].rpc[action](pm_id, function(error) {\n\n\t});\n}\n\nPM2Listener.prototype._findDebugPort = function(execArgv) {\n\tvar port = DEFAULT_DEBUG_PORT;\n\n\tif(Array.isArray(execArgv)) {\n\t\texecArgv.forEach(function(argument) {\n\t\t\t[/--debug\\s*=?\\s*([0-9]+)/, /--debug-brk\\s*=?\\s*([0-9]+)/].forEach(function(regex) {\n\t\t\t\tvar matches = argument.match(regex);\n\n\t\t\t\tif(matches && matches.length > 1) {\n\t\t\t\t\tport = parseInt(matches[1], 10);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\treturn port;\n}\n\nmodule.exports = PM2Listener;\n","/home/travis/build/npmtest/node-npmtest-pm2-web/node_modules/pm2-web/server/components/WebSocketResponder.js":"var Autowire = require(\"wantsit\").Autowire,\n\t_s = require(\"underscore.string\");\n\nvar WebSocketResponder = function() {\n\tthis._config = Autowire;\n\n\tthis._logger = Autowire;\n\tthis._pm2Listener = Autowire;\n\tthis._webSocketServer = Autowire;\n\tthis._hostList = Autowire;\n\tthis._events = [];\n}\n\nWebSocketResponder.prototype.afterPropertiesSet = function() {\n\tvar logger = this._logger;\n\n\tthis._webSocketServer.broadcast = function(data) {\n\t\tvar message = JSON.stringify(data);\n\n\t\tthis.clients.forEach(function(client) {\n\t\t\ttry {\n\t\t\t\tclient.send(message);\n\t\t\t} catch(e) {\n\t\t\t\tlogger.warn(\"WebSocketResponder\", \"Error broadcasing to client\", e.message);\n\t\t\t}\n\t\t}.bind(this));\n\t};\n\tthis._webSocketServer.on(\"connection\", function(client) {\n\t\tclient.on(\"message\", function(message) {\n\t\t\tvar request = JSON.parse(message);\n\n\t\t\tif(request.method && request.args && this[request.method]) {\n\t\t\t\trequest.args.unshift(client);\n\n\t\t\t\tthis[request.method].apply(this, request.args);\n\t\t\t}\n\t\t}.bind(this));\n\n\t\t// send config and all host data\n\t\tclient.send(JSON.stringify([{\n\t\t\t\tmethod: \"onConfig\",\n\t\t\t\targs: [{\n\t\t\t\t\tgraph: this._config.get(\"graph\"),\n\t\t\t\t\tlogs: this._config.get(\"logs\"),\n\t\t\t\t\tupdateFrequency: this._config.get(\"updateFrequency\"),\n\t\t\t\t\trequiredPm2Version: this._config.get(\"requiredPm2Version\")\n\t\t\t\t}]\n\t\t\t}, {\n\t\t\t\tmethod: \"onHosts\",\n\t\t\t\targs: [\n\t\t\t\t\tthis._hostList.getHosts()\n\t\t\t\t]\n\t\t\t}\n\t\t]));\n\t}.bind(this));\n\n\t// broadcast error logging\n\tthis._pm2Listener.on(\"log:err\", this._broadcastLog.bind(this, \"error\"));\n\n\t// broadcast info logging\n\tthis._pm2Listener.on(\"log:out\", this._broadcastLog.bind(this, \"info\"));\n\n\t// broadcast exceptions\n\tthis._pm2Listener.on(\"process:exception\", function(event) {\n\t\tvar data = event.data ? event.data : event.err\n\t\tvar host, id, message, stack;\n\n\t\thost = event.name\n\n\t\tif(event.process) {\n\t\t\tid = event.process.pm_id;\n\t\t}\n\n\t\tmessage = data.message;\n\t\tstack = data.stack;\n\n\t\tif(!id) {\n\t\t\treturn\n\t\t}\n\n\t\tthis._hostList.addLog(host, id, \"error\", stack);\n\n\t\tthis._events.push({\n\t\t\tmethod: \"onProcessException\",\n\t\t\targs: [\n\t\t\t\thost, id, message, stack\n\t\t\t]\n\t\t});\n\t}.bind(this));\n\n\t// broadcast system data updates\n\tthis._pm2Listener.on(\"systemData\", function(data) {\n\t\tthis._events.push({\n\t\t\tmethod: \"onSystemData\",\n\t\t\targs: [\n\t\t\t\tdata\n\t\t\t]\n\t\t});\n\t}.bind(this));\n\n\tsetInterval(this._processEvents.bind(this), this._config.get(\"ws:frequency\"));\n};\n\nWebSocketResponder.prototype._processEvents = function() {\n\tif(this._events.length == 0) {\n\t\treturn;\n\t}\n\n\tthis._webSocketServer.broadcast(this._events);\n\n\tthis._events.length = 0;\n}\n\nWebSocketResponder.prototype._broadcastLog = function(type, event) {\n\tvar id = event.process.pm_id;\n\tvar log;\n\n\t// ugh\n\tif(event.data) {\n\t\tif(event.data.str) {\n\t\t\tlog = event.data.str\n\t\t} else if(Array.isArray(event.data)) {\n\t\t\tlog = new Buffer(event.data).toString('utf8');\n\t\t} else {\n\t\t\tlog = event.data.toString()\n\t\t}\n\t} else if(event.str) {\n\t\tlog = event.str;\n\t}\n\n\tif(!log) {\n\t\treturn;\n\t}\n\n\tif(log.trim) {\n\t\tlog = log.trim()\n\t}\n\n\tthis._hostList.addLog(event.name, id, type, log);\n\n\tthis._events.push({\n\t\tmethod: \"on\" + _s.capitalize(type) + \"Log\",\n\t\targs: [\n\t\t\tevent.name, id, log\n\t\t]\n\t});\n};\n\nWebSocketResponder.prototype.startProcess = function(client, host, pm_id) {\n\tthis._pm2Listener.startProcess(host, pm_id);\n};\n\nWebSocketResponder.prototype.stopProcess = function(client, host, pm_id) {\n\tthis._pm2Listener.stopProcess(host, pm_id);\n};\n\nWebSocketResponder.prototype.restartProcess = function(client, host, pm_id) {\n\tthis._pm2Listener.restartProcess(host, pm_id);\n};\n\nWebSocketResponder.prototype.reloadProcess = function(client, host, pm_id) {\n\tthis._pm2Listener.reloadProcess(host, pm_id);\n};\n\nWebSocketResponder.prototype.debugProcess = function(client, host, pm_id) {\n\tthis._pm2Listener.debugProcess(host, pm_id);\n};\n\nmodule.exports = WebSocketResponder;\n","/home/travis/build/npmtest/node-npmtest-pm2-web/node_modules/pm2-web/server/components/ServerHostList.js":"var HostData = require(__dirname + \"/../../common/HostData\"),\n\tAutowire = require(\"wantsit\").Autowire;\n\nvar ServerHostList = function() {\n\tthis._pm2Listener = Autowire;\n\tthis._config = Autowire;\n\tthis._logger = Autowire;\n\n\tthis._hostData = {};\n}\n\nServerHostList.prototype.afterPropertiesSet = function() {\n\tthis._pm2Listener.on(\"systemData\", this._onSystemData.bind(this));\n\tthis._pm2Listener.on(\"pm2:kill\", function(data) {\n\t\tthis._logger.info(\"HostList\", data.name, \"was killed\");\n\t\tdelete this._hostData[data.name];\n\t}.bind(this));\n\n\tsetInterval(this._hostPurge.bind(this), this._config.get(\"hostPurge:frequency\"));\n};\n\nServerHostList.prototype._onSystemData = function(data) {\n\tif(!this._hostData[data.name]) {\n\t\tthis._hostData[data.name] = new HostData(data, this._config);\n\t}\n\n\tthis._hostData[data.name].update(data);\n};\n\nServerHostList.prototype._hostPurge = function() {\n\tvar now = Date.now();\n\n\tObject.keys(this._hostData).forEach(function(key) {\n\t\tif(now - this._hostData[key].lastUpdated > this._config.get(\"hostPurge:cutoff\")) {\n\t\t\tthis._logger.info(\"HostList\", key, \"has gone away\");\n\t\t\tdelete this._hostData[key];\n\t\t}\n\t}.bind(this));\n};\n\nServerHostList.prototype.getHosts = function() {\n\tvar output = [];\n\n\tObject.keys(this._hostData).forEach(function(key) {\n\t\toutput.push(this._hostData[key]);\n\t}.bind(this));\n\n\treturn output;\n};\n\nServerHostList.prototype.addLog = function(host, pm2_id, type, data) {\n\tvar host = this._hostData[host];\n\n\tif(!host) {\n\t\treturn;\n\t}\n\n\tvar process = host.findProcessById(pm2_id);\n\n\tif(!process) {\n\t\treturn;\n\t}\n\n\tprocess.log(type, data);\n}\n\nmodule.exports = ServerHostList;\n","/home/travis/build/npmtest/node-npmtest-pm2-web/node_modules/pm2-web/common/HostData.js":"var ProcessData = require(\"./ProcessData\");\n\nvar HostData = function(data, config) {\n\tObject.defineProperty(this, \"_config\", {\n\t\tenumerable: false,\n\t\tvalue: config\n\t});\n\n\tthis.name = data.name;\n\tthis.inspector = data.inspector;\n\tthis.pm2 = data.pm2,\n\tthis.system = {};\n\tthis.processes = [];\n};\n\nHostData.prototype.update = function(data) {\n\tthis.lastUpdated = Date.now();\n\n\t[\"hostname\", \"cpu_count\", \"uptime\", \"time\"].forEach(function(key) {\n\t\tthis.system[key] = data.system[key]\n\t}.bind(this));\n\n\tthis.system.load = [\n\t\tdata.system.load[0],\n\t\tdata.system.load[1],\n\t\tdata.system.load[2]\n\t];\n\tthis.system.memory = {\n\t\tfree: data.system.memory.free,\n\t\ttotal: data.system.memory.total,\n\t\tused: data.system.memory.total - data.system.memory.free\n\t};\n\n\tthis._removeMissingProcesses(data.processes);\n\n\tdata.processes.forEach(function(reportedProcess) {\n\t\tvar existingProcess = this.findProcessById(reportedProcess.id);\n\n\t\tif(!existingProcess) {\n\t\t\texistingProcess = new ProcessData(this._config, reportedProcess);\n\t\t\tthis.processes.push(existingProcess);\n\t\t}\n\n\t\texistingProcess.update(reportedProcess, data.system);\n\t}.bind(this));\n};\n\nHostData.prototype._removeMissingProcesses = function(reportedProcesses) {\n\tthis.processes = this.processes.filter(function(existingProcess) {\n\t\tfor(var i = 0; i < reportedProcesses.length; i++) {\n\t\t\tif(reportedProcesses[i].name == existingProcess.name) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t});\n};\n\nHostData.prototype.findProcessById = function(id) {\n\tfor(var i = 0; i < this.processes.length; i++) {\n\t\tif(this.processes[i].id == id) {\n\t\t\treturn this.processes[i];\n\t\t}\n\t}\n\n\treturn null;\n}\n\nmodule.exports = HostData;","/home/travis/build/npmtest/node-npmtest-pm2-web/node_modules/pm2-web/common/ProcessData.js":"var Moment = require(\"moment\");\n\nvar MILLISECONDS_IN_A_DAY = 86400000;\n\nvar ProcessData = function(config, data) {\n\tObject.defineProperty(this, \"_config\", {\n\t\tenumerable: false,\n\t\tvalue: config\n\t});\n\n\tthis.usage = {\n\t\tcpu: data.usage ? data.usage.cpu : [],\n\t\tmemory: data.usage ? data.usage.memory : []\n\t};\n\n\tthis.logs = [];\n\n\tif(Array.isArray(data.logs)) {\n\t\tdata.logs.forEach(function(log) {\n\t\t\tthis.log(log.type, log.data);\n\t\t}.bind(this));\n\t}\n\n\tthis._map(data);\n}\n\nProcessData.prototype.update = function(data, system) {\n\tthis._map(data);\n\n\tthis._append((data.memory / system.memory.total) * 100, data.cpu, system.time);\n}\n\nProcessData.prototype.log = function(type, data) {\n\tif(!type || !data) {\n\t\treturn;\n\t}\n\n\tthis.logs.push({\n\t\ttype: type,\n\t\tdata: data\n\t});\n\n\t// rotate logs if necessary\n\tif(this.logs.length > this._config.get(\"logs:max\")) {\n\t\tthis.logs.splice(0, this.logs.length - this._config.get(\"logs:max\"));\n\t}\n}\n\nProcessData.prototype._map = function(data) {\n\t[\"id\", \"pid\", \"name\", \"script\", \"uptime\", \"restarts\", \"status\", \"memory\", \"cpu\", \"reloading\", \"debugPort\", \"mode\"].forEach(function(key) {\n\t\tthis[key] = data[key];\n\t}.bind(this));\n}\n\nProcessData.prototype._append = function(memory, cpu, time) {\n\tthis.usage.memory = this._compressResourceUsage(this.usage.memory, time);\n\tthis.usage.cpu = this._compressResourceUsage(this.usage.cpu, time);\n\n\tthis._appendIfDifferent(this.usage.memory, memory, time);\n\tthis._appendIfDifferent(this.usage.cpu, cpu, time);\n}\n\nProcessData.prototype._appendIfDifferent = function(array, value, time) {\n\tvar rounded = ~~value;\n\n\t// if the last two datapoints have the same value as the one we're about to add,\n\t// don't add a third, just change the date of the last one to be now\n\t// x-----x becomes x-----------x instead of x-----x-----x\n\tif(array.length > 1 && array[array.length - 1].y == rounded && array[array.length - 2].y == rounded) {\n\t\tarray[array.length - 1].x = time;\n\n\t\treturn;\n\t}\n\n\tarray.push({\n\t\tx: time,\n\t\ty: rounded\n\t});\n}\n\nProcessData.prototype._compressResourceUsage = function(data, time) {\n\tvar datapoints = this._config.get(\"graph:datapoints\");\n\tdatapoints -= 1;\n\n\tvar distribution = this._config.get(\"graph:distribution\");\n\tvar maxAgeInDays = distribution.length * MILLISECONDS_IN_A_DAY;\n\n\tif(data.length < datapoints) {\n\t\treturn data;\n\t}\n\n\tvar now = time;\n\tvar cutoff = now - maxAgeInDays;\n\tvar usage = [];\n\n\tvar days = [];\n\tvar day = [];\n\n\t// group all data by day\n\tdata.forEach(function(datum) {\n\t\tif(datum.x < cutoff) {\n\t\t\t// ignore anything older than graph:maxAgeInDays\n\t\t\treturn;\n\t\t}\n\n\t\t// record date so we can easily compare days\n\t\tdatum.date = new Date(datum.x);\n\n\t\tif(day[day.length - 1] && day[day.length - 1].date.getDate() != datum.date.getDate()) {\n\t\t\tdays.push(day);\n\t\t\tday = [];\n\t\t} else {\n\t\t\tday.push(datum);\n\t\t}\n\t});\n\n\t// all datapoints were in one day..\n\tif(days.length == 0) {\n\t\tdays.push(day);\n\t}\n\n\t// compress each days worth of data\n\tdays.forEach(function(day) {\n\t\tvar compressed = this._compressDay(day, now, datapoints, distribution);\n\n\t\tusage = usage.concat(compressed);\n\t}.bind(this));\n\n\treturn usage;\n}\n\nProcessData.prototype._compressDay = function(day, now, datapoints, distribution) {\n\tif(day.length == 0) {\n\t\treturn day;\n\t}\n\n\tvar dayDifference = Math.floor((now - day[day.length - 1].x) / MILLISECONDS_IN_A_DAY);\n\n\tif(dayDifference > distribution.length) {\n\t\treturn [];\n\t}\n\n\tvar percent = distribution[dayDifference];\n\n\treturn this._compress(day, (datapoints/100) * percent);\n}\n\nProcessData.prototype._compress = function(dataSet, maxSamples) {\n\tvar sampleSize = Math.ceil(dataSet.length/maxSamples);\n\n\tvar output = [];\n\tvar offset = 0;\n\tvar data = 0;\n\tvar date = 0;\n\n\twhile(offset < dataSet.length) {\n\t\tvar processed = 0;\n\n\t\tfor(var i = 0; i < sampleSize; i++) {\n\t\t\tif(offset + i == dataSet.length) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// might at some point overflow MAX_INT here. won't that be fun.\n\t\t\tdate += dataSet[offset + i].x;\n\n\t\t\tdata += dataSet[offset + i].y;\n\n\t\t\tprocessed++;\n\t\t}\n\n\t\toffset += processed;\n\n\t\toutput.push({\n\t\t\tx: date / processed,\n\t\t\ty: data / processed\n\t\t});\n\n\t\tdata = 0;\n\t\tdate = 0;\n\t}\n\n\treturn output;\n}\n\nmodule.exports = ProcessData;","/home/travis/build/npmtest/node-npmtest-pm2-web/node_modules/pm2-web/GruntFile.js":"module.exports = function(grunt) {\n\tgrunt.initConfig({\n\n\t\tbrowserify: {\n\t\t\tdist: {\n\t\t\t\tsrc: \"ui/index.js\",\n\t\t\t\tdest: \"./server/public/js/monitor.js\"\n\t\t\t}\n\t\t},\n\n\t\tless: {\n\t\t\tdevelopment: {\n\t\t\t\tfiles: {\n\t\t\t\t\t\"./server/public/css/style.css\": \"./server/public/css/style.less\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\twatch: {\n\t\t\tscripts: {\n\t\t\t\tfiles: [\n\t\t\t\t\t\"./ui/**/*.js\",\n\t\t\t\t\t\"./common/**/*.js\",\n\t\t\t\t\t\"./server/public/css/*.less\"\n\t\t\t\t],\n\t\t\t\ttasks: [\"browserify\", \"less\"],\n\t\t\t\toptions: {\n\t\t\t\t\tspawn: false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tgrunt.loadNpmTasks(\"grunt-browserify\");\n\tgrunt.loadNpmTasks(\"grunt-contrib-watch\");\n\tgrunt.loadNpmTasks('grunt-contrib-less');\n\n\n\t// default task\n\tgrunt.registerTask(\"default\", [\"browserify\", \"less\", \"watch\"]);\n};","/home/travis/build/npmtest/node-npmtest-pm2-web/node_modules/pm2-web/ui/index.js":"\"use strict\";\n\nvar WebSocketResponder = require(\"./components/WebSocketResponder\"),\n\tHostList = require(\"./components/UIHostList\"),\n\tConfig = require(\"./components/Config\");\n\nvar pm2Web = angular.module(\"pm2-web\", [\n\t\"ngRoute\",\n\t\"ngSanitize\",\n\t\"ui.bootstrap\",\n\t\"highcharts-ng\"\n]);\n\npm2Web.config(require(\"./routes\"));\npm2Web.factory(\"hostList\", [\"config\", \"webSocketResponder\", function(config, webSocketResponder) {\n\treturn new HostList(config, webSocketResponder);\n}]);\npm2Web.factory(\"webSocketResponder\", [\"$window\", \"$rootScope\", function($window, $rootScope) {\n\treturn new WebSocketResponder($window.location, $rootScope);\n}]);\npm2Web.factory(\"config\", [\"webSocketResponder\", function(webSocketResponder) {\n\treturn new Config(webSocketResponder);\n}]);\n\n// directives\npm2Web.directive(\"resourceusage\", require(\"./directives/resourceUsage\"));\npm2Web.directive(\"scrollglue\", require(\"./directives/scrollGlue\"));\n\n// filters\npm2Web.filter(\"decimalPlaces\", require(\"./filters/decimalPlaces\"));\npm2Web.filter(\"humanise\", require(\"./filters/humanise\"));\npm2Web.filter(\"memory\", require(\"./filters/memory\"));\npm2Web.filter(\"ansiToHtml\", require(\"./filters/ansiToHtml\"));\n\n// controllers\npm2Web.controller(\"ConnectionController\", require(\"./controllers/connection\"));\npm2Web.controller(\"SystemController\", require(\"./controllers/system\"));\npm2Web.controller(\"ProcessListController\", require(\"./controllers/processList\"));\npm2Web.controller(\"HostListController\", require(\"./controllers/hostList\"));\npm2Web.controller(\"FooterController\", require(\"./controllers/footer\"));\n","/home/travis/build/npmtest/node-npmtest-pm2-web/node_modules/pm2-web/ui/components/WebSocketResponder.js":"var EventEmitter = require(\"wildemitter\"),\n\tutil = require(\"util\");\n\nvar READYSTATE = {\n\tCONNECTING: 0,\n\tOPEN: 1,\n\tCLOSING: 2,\n\tCLOSED: 3\n};\n\nWebSocketResponder = function(location, $rootScope) {\n\tEventEmitter.apply(this);\n\n\tthis.url = this._detectLocation(location);\n\n\tconsole.info(\"WebSocketResponder\", \"Connecting to\", this.url);\n\n\tthis._ws = new ReconnectingWebSocket(this.url);\n\tthis._ws.onconnecting = function() {\n\t\tthis.emit(\"connecting\");\n\t}.bind(this);\n\tthis._ws.onopen = function() {\n\t\tthis.emit(\"open\");\n\t}.bind(this);\n\tthis._ws.onmessage = function(message) {\n\t\tvar events = JSON.parse(message.data);\n\n\t\tif(!Array.isArray(events)) {\n\t\t\treturn;\n\t\t}\n\n\t\t$rootScope.$apply(function() {\n\t\t\tevents.forEach(function(event) {\n\t\t\t\tif(event && event.method && this[event.method]) {\n\t\t\t\t\tthis[event.method].apply(this, event.args);\n\t\t\t\t}\n\t\t\t}.bind(this));\n\t\t}.bind(this));\n\t}.bind(this);\n\tthis._ws.onclose = function() {\n\t\tthis.emit(\"closed\");\n\t}.bind(this);\n\tthis._ws.onerror = function(event) {\n\t\tthis.emit(\"error\", event);\n\t}.bind(this);\n};\nutil.inherits(WebSocketResponder, EventEmitter);\n\nWebSocketResponder.prototype._detectLocation = function(location) {\n\tvar protocol = \"ws\";\n\n\tif(location.protocol.indexOf(\"https\") != -1) {\n\t\tprotocol += \"s\";\n\t}\n\n\treturn protocol + \"://\" + location.hostname + \":\" + location.port + \"/ws\";\n}\n\nWebSocketResponder.prototype.isClosed = function() {\n\treturn this._ws.readyState == READYSTATE.CLOSED;\n};\n\nWebSocketResponder.prototype.isConnecting = function() {\n\treturn this._ws.readyState == READYSTATE.CONNECTING;\n};\n\nWebSocketResponder.prototype.isOpen = function() {\n\treturn this._ws.readyState == READYSTATE.OPEN;\n};\n\nWebSocketResponder.prototype.onSystemData = function(data) {\n\tthis.emit(\"systemData\", data);\n};\n\nWebSocketResponder.prototype.onHosts = function(hosts) {\n\tthis.emit(\"hosts\", hosts);\n}\n\nWebSocketResponder.prototype.onConfig = function(config) {\n\tthis.emit(\"config\", config);\n};\n\nWebSocketResponder.prototype.onInfoLog = function(host, pm_id, log) {\n\tthis.emit(\"log:info\", host, pm_id, log);\n};\n\nWebSocketResponder.prototype.onErrorLog = function(host, pm_id, log) {\n\tthis.emit(\"log:error\", host, pm_id, log);\n};\n\nWebSocketResponder.prototype.onProcessException = function(host, pm_id, message, stack) {\n\tthis.emit(\"log:error\", host, pm_id, stack);\n\tthis.emit(\"process:exception\", host, pm_id, message, stack);\n};\n\nWebSocketResponder.prototype._send = function(message) {\n\tthis._ws.send(JSON.stringify(message));\n};\n\nWebSocketResponder.prototype.startProcess = function(host, pm_id) {\n\tthis._send({\n\t\tmethod: \"startProcess\",\n\t\targs: [host, pm_id]\n\t});\n};\n\nWebSocketResponder.prototype.stopProcess = function(host, pm_id) {\n\tthis._send({\n\t\tmethod: \"stopProcess\",\n\t\targs: [host, pm_id]\n\t});\n};\n\nWebSocketResponder.prototype.restartProcess = function(host, pm_id) {\n\tthis._send({\n\t\tmethod: \"restartProcess\",\n\t\targs: [host, pm_id]\n\t});\n};\n\nWebSocketResponder.prototype.reloadProcess = function(host, pm_id) {\n\tthis._send({\n\t\tmethod: \"reloadProcess\",\n\t\targs: [host, pm_id]\n\t});\n};\n\nWebSocketResponder.prototype.debugProcess = function(host, pm_id) {\n\tthis._send({\n\t\tmethod: \"debugProcess\",\n\t\targs: [host, pm_id]\n\t});\n};\n\nWebSocketResponder.READYSTATE = READYSTATE;\n\nmodule.exports = WebSocketResponder;","/home/travis/build/npmtest/node-npmtest-pm2-web/node_modules/pm2-web/ui/components/UIHostList.js":"var EventEmitter = require(\"wildemitter\"),\n\tutil = require(\"util\"),\n\tHostData = require(\"./../../common/HostData\");\n\nUIHostList = function(config, webSocketResponder) {\n\tEventEmitter.call(this);\n\n\t// populate host data when it's available\n\twebSocketResponder.once(\"hosts\", function(list) {\n\t\tlist.forEach(function(data) {\n\t\t\tthis.add(data);\n\t\t}.bind(this));\n\t}.bind(this));\n\n\t// update host data occasionally\n\twebSocketResponder.on(\"systemData\", function(data) {\n\t\tthis.update(data);\n\t}.bind(this));\n\n\t// update host data occasionally\n\twebSocketResponder.on(\"log:info\", function(host, pm_id, data) {\n\t\tvar process = this._findByHostAndProcessId(host, pm_id);\n\n\t\tif(!process) {\n\t\t\treturn;\n\t\t}\n\n\t\tprocess.log(\"info\", data);\n\t}.bind(this));\n\n\twebSocketResponder.on(\"log:error\", function(host, pm_id, data) {\n\t\tvar process = this._findByHostAndProcessId(host, pm_id);\n\n\t\tif(!process) {\n\t\t\treturn;\n\t\t}\n\n\t\tprocess.log(\"error\", data);\n\t}.bind(this));\n\n\twebSocketResponder.on(\"process:exception\", function(host, pm_id, message, stack) {\n\t\tvar process = this._findByHostAndProcessId(host, pm_id);\n\n\t\tif(!process) {\n\t\t\treturn;\n\t\t}\n\n\t\tprocess.throwing = true;\n\n\t\tsetTimeout(function() {\n\t\t\tdelete process.throwing;\n\t\t}, 1000);\n\t}.bind(this));\n\n\tthis._config = config;\n\tthis._hosts = {};\n};\nutil.inherits(UIHostList, EventEmitter);\n\nUIHostList.prototype.empty = function() {\n\tthis._hosts = {};\n};\n\nUIHostList.prototype.add = function(data) {\n\tthis._hosts[data.name] = new HostData(data, this._config);\n\n\tthis.update(data);\n\n\tthis.emit(\"newHost\", data.name);\n};\n\nUIHostList.prototype.update = function(data) {\n\tif(!this._hosts[data.name]) {\n\t\treturn this.add(data);\n\t}\n\n\tthis._hosts[data.name].update(data);\n\n\tthis.emit(\"update\", data.name);\n};\n\nUIHostList.prototype.find = function(host) {\n\tvar result = this._hosts[host];\n\n\treturn result ? result : null;\n};\n\nUIHostList.prototype.hosts = function() {\n\tvar result = Object.keys(this._hosts);\n\n\treturn result ? result : null;\n};\n\nUIHostList.prototype._findByHostAndProcessId = function(host, pm_id) {\n\tvar host = this.find(host);\n\n\tif(!host) {\n\t\treturn;\n\t}\n\n\treturn host.findProcessById(pm_id);\n};\n\nmodule.exports = UIHostList;\n","/home/travis/build/npmtest/node-npmtest-pm2-web/node_modules/pm2-web/ui/components/Config.js":"\nvar Config = function(webSocketResponder) {\n\twebSocketResponder.once(\"config\", function(data) {\n\t\tthis._config = data\n\t}.bind(this));\n};\n\nConfig.prototype.get = function(key) {\n\tif(!this._config || !key) {\n\t\treturn null;\n\t}\n\n\tvar value = this._config;\n\n\tkey.split(\":\").forEach(function(property) {\n\t\tif(typeof(value[property]) != \"undefined\") {\n\t\t\tvalue = value[property];\n\t\t} else {\n\t\t\tvalue = null;\n\t\t}\n\t});\n\n\treturn value;\n}\n\nmodule.exports = Config;\n","/home/travis/build/npmtest/node-npmtest-pm2-web/node_modules/pm2-web/ui/routes.js":"\nmodule.exports = [\"$routeProvider\",\n\tfunction($routeProvider) {\n\t\t$routeProvider.\n\t\t\twhen(\"/hosts/:host\", {\n\t\t\t\ttemplateUrl: \"/js/partials/host.html\"\n\t\t\t}).\n\t\t\totherwise({\n\t\t\t\ttemplateUrl: \"/js/partials/connecting.html\",\n\t\t\t\tcontroller: \"ConnectionController\"\n\t\t\t});\n\t}\n];\n","/home/travis/build/npmtest/node-npmtest-pm2-web/node_modules/pm2-web/ui/controllers/connection.js":"\nmodule.exports = [\"$window\", \"$scope\", \"$location\", \"webSocketResponder\", \"hostList\", function($window, $scope, $location, webSocketResponder, hostList) {\n\tif(!$window[\"WebSocket\"]) {\n\t\t$scope.alerts = [{\n\t\t\ttype: \"error\",\n\t\t\tmessage: \"Your browser does not support web sockets, please consider upgrading.\"\n\t\t}];\n\n\t\treturn;\n\t}\n\n\twebSocketResponder.on(\"connecting\", function() {\n\t\t$scope.$apply(function() {\n\t\t\t$scope.alerts = [{\n\t\t\t\ttype: \"info\",\n\t\t\t\tmessage: \"Connecting to \" + webSocketResponder.url\n\t\t\t}];\n\t\t});\n\t});\n\twebSocketResponder.on(\"open\", function() {\n\t\t$scope.$apply(function() {\n\t\t\t$scope.alerts = [{\n\t\t\t\ttype: \"success\",\n\t\t\t\tmessage: \"Waiting for hosts...\"\n\t\t\t}];\n\t\t});\n\t});\n\twebSocketResponder.on(\"closed\", function() {\n\t\thostList.empty();\n\n\t\t$scope.$apply(function() {\n\t\t\t/*$scope.alerts = [{\n\t\t\t type: \"error\",\n\t\t\t message: \"Socket dropped connection\"\n\t\t\t }];*/\n\n\t\t\t$location.path(\"/\");\n\t\t});\n\t});\n\twebSocketResponder.on(\"error\", function(event) {\n\t\tvar message = \"\";\n\n\t\tif(0 == event.target.readyState) {\n\t\t\tmessage = \" - socket closed, attempting to reconnect\";\n\t\t} else if(2 == event.target.readyState) {\n\t\t\tmessage = \" - socket closing\";\n\t\t} else if(3 == event.target.readyState) {\n\t\t\tmessage = \" - socket closed\";\n\t\t}\n\n\t\t$scope.$apply(function() {\n\t\t\t$scope.alerts = [{\n\t\t\t\ttype: \"error\",\n\t\t\t\tmessage: \"Socket error\" + message\n\t\t\t}];\n\t\t});\n\t});\n\n\thostList.once(\"update\", function(host) {\n\t\t$location.path(\"/hosts/\" + host);\n\t});\n}];\n","/home/travis/build/npmtest/node-npmtest-pm2-web/node_modules/pm2-web/ui/controllers/footer.js":"\nmodule.exports = [\"$window\", \"$scope\", function($window, $scope) {\n\t$scope.version = $window.settings.version;\n}];\n","/home/travis/build/npmtest/node-npmtest-pm2-web/node_modules/pm2-web/ui/controllers/hostList.js":"\nmodule.exports = [\"$scope\", \"$routeParams\", \"$location\", \"hostList\", function($scope, $routeParams, $location, hostList) {\n\t$scope.tabs = [];\n\n\tvar updateScope = function() {\n\t\t$scope.tabs.length = 0;\n\n\t\thostList.hosts().forEach(function(hostName) {\n\t\t\t$scope.tabs.push({\n\t\t\t\ttitle: hostName,\n\t\t\t\tselected: $routeParams.host == hostName\n\t\t\t})\n\t\t});\n\n\t\t$scope.changeHost = function(hostName) {\n\t\t\tif(hostName == $routeParams.host) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$scope.tabs.forEach(function(tab) {\n\t\t\t\ttab.selected = $routeParams.host == tab.hostName;\n\t\t\t});\n\n\t\t\t$location.path(\"/hosts/\" + hostName);\n\t\t}\n\t};\n\tupdateScope();\n\n\t// redraw tabs when new host is found\n\thostList.on(\"newHost\", function() {\n\t\tupdateScope();\n\t});\n}];\n","/home/travis/build/npmtest/node-npmtest-pm2-web/node_modules/pm2-web/ui/controllers/processList.js":"\nmodule.exports = [\"$scope\", \"$routeParams\", \"$location\", \"$window\", \"hostList\", \"webSocketResponder\", function($scope, $routeParams, $location, $window, hostList, webSocketResponder) {\n\t$scope.showDetails = {};\n\n\tvar updateScope = function() {\n\t\tvar hostData = hostList.find($routeParams.host);\n\n\t\tif(!hostData) {\n\t\t\tconsole.warn(\"Could not load host data for\", $routeParams.host);\n\n\t\t\treturn $location.path(\"/\");\n\t\t}\n\n\t\t$scope.hostData = hostData;\n\t\t$scope.processes = hostData.processes;\n\t\t$scope.debugEnabled = hostData.inspector ? true : false;\n\n\t\t$scope.toggleDetails = function(pm_id) {\n\t\t\t$scope.showDetails[pm_id] = !$scope.showDetails[pm_id];\n\t\t};\n\n\t\t$scope.start = function(pm_id, $event) {\n\t\t\t$event.stopPropagation();\n\n\t\t\twebSocketResponder.startProcess(hostData.name, pm_id);\n\t\t};\n\t\t$scope.stop = function(pm_id, $event) {\n\t\t\t$event.stopPropagation();\n\n\t\t\twebSocketResponder.stopProcess(hostData.name, pm_id);\n\t\t};\n\t\t$scope.restart = function(pm_id, $event) {\n\t\t\t$event.stopPropagation();\n\n\t\t\twebSocketResponder.restartProcess(hostData.name, pm_id);\n\t\t};\n\t\t$scope.reload = function(process, $event) {\n\t\t\t$event.stopPropagation();\n\n\t\t\tprocess.reloading = true;\n\n\t\t\twebSocketResponder.reloadProcess(hostData.name, process.id);\n\t\t};\n\t\t$scope.debug = function(process, $event) {\n\t\t\t$event.stopPropagation();\n\n\t\t\twebSocketResponder.debugProcess(hostData.name, process.id);\n\n\t\t\t$window.open(\"http://\" + hostData.name + \":\" + hostData.inspector + \"/debug?port=\" + process.debugPort, hostData.name + \"-\" + process.id, \"location=no,menubar=no,status=no,toolbar=no\");\n\t\t};\n\t\t$scope.clearLogs = function(process) {\n\t\t\tprocess.logs.length = 0;\n\t\t}\n\t};\n\tupdateScope();\n\n\thostList.on(\"update\", function(hostName) {\n\t\t// only update scope if the update was for our host\n\t\tif(hostName == $routeParams.host) {\n\t\t\tupdateScope();\n\t\t}\n\t});\n}];\n","/home/travis/build/npmtest/node-npmtest-pm2-web/node_modules/pm2-web/ui/controllers/system.js":"\nmodule.exports = [\"$scope\", \"$routeParams\", \"$location\", \"$window\", \"config\", \"hostList\", function($scope, $routeParams, $location, $window, config, hostList) {\n\tvar updateScope = function() {\n\t\tvar hostData = hostList.find($routeParams.host);\n\n\t\tif(!hostData) {\n\t\t\treturn $location.path(\"/\");\n\t\t}\n\n\t\t$scope.hostData = hostData;\n\t};\n\tupdateScope();\n\n\thostList.on(\"update\", function(hostName) {\n\t\t// only update scope if the update was for our host\n\t\tif(hostName == $routeParams.host) {\n\t\t\tupdateScope();\n\t\t}\n\t});\n\n\t$scope.pm2WebVersion = $window.settings.version;\n\t$scope.pm2VersionRequired = config.get(\"requiredPm2Version\");\n}];\n","/home/travis/build/npmtest/node-npmtest-pm2-web/node_modules/pm2-web/ui/directives/resourceUsage.js":"\nmodule.exports = [\"config\", function(config) {\n\treturn {\n\t\trestrict: \"A\",\n\t\tscope: {\n\t\t\tdata: \"=\"\n\t\t},\n\t\tlink: function($scope, $element, $attributes) {\n\t\t\tvar data = {\n\t\t\t\t\"xScale\": \"time\",\n\t\t\t\t\"yScale\": \"linear\",\n\t\t\t\t\"type\": \"line\",\n\t\t\t\t\"main\": [{\n\t\t\t\t\t\t\"className\": \".cpu\",\n\t\t\t\t\t\t\"data\": $scope.data.cpu\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"className\": \".memory\",\n\t\t\t\t\t\t\"data\": $scope.data.memory\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tvar chart = new Highcharts.Chart({\n\t\t\t\tchart: {\n\t\t\t\t\ttype: \"areaspline\",\n\t\t\t\t\trenderTo: $element[0]\n\t\t\t\t},\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: null\n\t\t\t\t},\n\t\t\t\tlegend: {\n\t\t\t\t\tenabled: false\n\t\t\t\t},\n\t\t\t\tcredits: {\n\t\t\t\t\tenabled: false\n\t\t\t\t},\n\t\t\t\texporting: {\n\t\t\t\t\tenabled: false\n\t\t\t\t},\n\t\t\t\txAxis: {\n\t\t\t\t\ttype: \"datetime\",\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\toverflow: \"justify\",\n\t\t\t\t\t\ty: 25\n\t\t\t\t\t},\n\t\t\t\t\tgridLineColor: \"#EEEEEE\",\n\t\t\t\t\tgridLineWidth: 1\n\t\t\t\t},\n\t\t\t\tyAxis: {\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\ttext: null\n\t\t\t\t\t},\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tformat: \"{value}%\"\n\t\t\t\t\t},\n\t\t\t\t\tmin: 0,\n\t\t\t\t\tmax: 100,\n\t\t\t\t\tgridLineColor: \"#EEEEEE\"\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\tvalueSuffix: \" %\",\n\t\t\t\t\t// disabled until data interpolation is added\n\t\t\t\t\tenabled: false\n\t\t\t\t},\n\t\t\t\tplotOptions: {\n\t\t\t\t\tareaspline: {\n\t\t\t\t\t\tlineWidth: 4,\n\t\t\t\t\t\tstates: {\n\t\t\t\t\t\t\thover: {\n\t\t\t\t\t\t\t\tlineWidth: 5\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t// disabled markers until data interpolation is supported\n\t\t\t\t\t\tmarker: {\n\t\t\t\t\t\t\tenabled: false,\n\t\t\t\t\t\t\tstates: {\n\t\t\t\t\t\t\t\thover: {\n\t\t\t\t\t\t\t\t\tenabled: false\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfillOpacity: 0.1\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tseries: [{\n\t\t\t\t\tname: \"CPU\",\n\t\t\t\t\tcolor: \"#347FAC\",\n\t\t\t\t\tdata: $scope.data.cpu\n\t\t\t\t}, {\n\t\t\t\t\tname: \"Memory\",\n\t\t\t\t\tcolor: \"#49AA3C\",\n\t\t\t\t\tdata: $scope.data.memory\n\t\t\t\t}]\n\t\t\t});\n\n\t\t\t// much simpler than $scope.$watchCollection\n\t\t\tsetInterval(function() {\n\t\t\t\tchart.series[1].setData($scope.data.memory, true);\n\t\t\t\tchart.series[0].setData($scope.data.cpu, true);\n\t\t\t}, config.get(\"updateFrequency\"));\n\t\t}\n\t};\n}];\n","/home/travis/build/npmtest/node-npmtest-pm2-web/node_modules/pm2-web/ui/directives/scrollGlue.js":"function fakeNgModel(initValue){\n\treturn {\n\t\t$setViewValue: function(value){\n\t\t\tthis.$viewValue = value;\n\t\t},\n\t\t$viewValue: initValue\n\t};\n};\n\nmodule.exports = [function() {\n\treturn {\n\t\tpriority: 1,\n\t\trequire: ['?ngModel'],\n\t\trestrict: 'A',\n\t\tlink: function(scope, $el, attrs, ctrls){\n\t\t\tvar el = $el[0],\n\t\t\t\tngModel = ctrls[0] || fakeNgModel(true);\n\n\t\t\tfunction scrollToBottom(){\n\t\t\t\tel.scrollTop = el.scrollHeight;\n\t\t\t}\n\n\t\t\tfunction shouldActivateAutoScroll(){\n\t\t\t\t// + 1 catches off by one errors in chrome\n\t\t\t\treturn el.scrollTop + el.clientHeight + 1 >= el.scrollHeight;\n\t\t\t}\n\n\t\t\tscope.$watch(function(){\n\t\t\t\tif(ngModel.$viewValue){\n\t\t\t\t\tscrollToBottom();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$el.bind('scroll', function(){\n\t\t\t\tscope.$apply(ngModel.$setViewValue.bind(ngModel, shouldActivateAutoScroll()));\n\t\t\t});\n\t\t}\n\t};\n}];\n","/home/travis/build/npmtest/node-npmtest-pm2-web/node_modules/pm2-web/ui/filters/ansiToHtml.js":"var ansiHTML = require(\"ansi-html\"),\n\tEntities = require(\"html-entities\").XmlEntities;\n\nvar entities = new Entities();\n\nmodule.exports = [\"$sce\", function($sce) {\n\n\t// don't force background color\n\tansiHTML.tags.open[0] = ansiHTML.tags.open[0].replace(\"color:#000;\", \"\");\n\n\treturn function(text) {\n\t\tvar encoded = entities.encode(text);\n\n\t\treturn $sce.trustAsHtml(ansiHTML(encoded));\n\t}\n}];\n","/home/travis/build/npmtest/node-npmtest-pm2-web/node_modules/pm2-web/ui/filters/decimalPlaces.js":"\nmodule.exports = function() {\n\treturn function(number, decimalPlaces) {\n\t\tif(!number && number !== 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn number.toFixed(decimalPlaces);\n\t}\n};\n","/home/travis/build/npmtest/node-npmtest-pm2-web/node_modules/pm2-web/ui/filters/humanise.js":"var Moment = require(\"moment\");\n\nmodule.exports = function() {\n\treturn function(date) {\n\t\treturn Moment.duration(date, \"seconds\").humanize();\n\t}\n};\n","/home/travis/build/npmtest/node-npmtest-pm2-web/node_modules/pm2-web/ui/filters/memory.js":"\nmodule.exports = function() {\n\tvar sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\"];\n\n\treturn function(bytes) {\n\t\tif(!bytes && bytes !== 0) {\n\t\t\treturn \"0 B\";\n\t\t}\n\n\t\tfor(var i = sizes.length; i > 0; i--) {\n\t\t\tvar step = Math.pow(1024, i);\n\n\t\t\tif (bytes >= step) {\n\t\t\t\treturn (bytes / step).toFixed(2) + \" \" + sizes[i];\n\t\t\t}\n\t\t}\n\n\t\treturn bytes + \" B\";\n\t}\n};\n","/home/travis/build/npmtest/node-npmtest-pm2-web/node_modules/pm2-web/server/public/js/monitor.js":"(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar ProcessData = require(\"./ProcessData\");\n\nvar HostData = function(data, config) {\n\tObject.defineProperty(this, \"_config\", {\n\t\tenumerable: false,\n\t\tvalue: config\n\t});\n\n\tthis.name = data.name;\n\tthis.inspector = data.inspector;\n\tthis.pm2 = data.pm2,\n\tthis.system = {};\n\tthis.processes = [];\n};\n\nHostData.prototype.update = function(data) {\n\tthis.lastUpdated = Date.now();\n\n\t[\"hostname\", \"cpu_count\", \"uptime\", \"time\"].forEach(function(key) {\n\t\tthis.system[key] = data.system[key]\n\t}.bind(this));\n\n\tthis.system.load = [\n\t\tdata.system.load[0],\n\t\tdata.system.load[1],\n\t\tdata.system.load[2]\n\t];\n\tthis.system.memory = {\n\t\tfree: data.system.memory.free,\n\t\ttotal: data.system.memory.total,\n\t\tused: data.system.memory.total - data.system.memory.free\n\t};\n\n\tthis._removeMissingProcesses(data.processes);\n\n\tdata.processes.forEach(function(reportedProcess) {\n\t\tvar existingProcess = this.findProcessById(reportedProcess.id);\n\n\t\tif(!existingProcess) {\n\t\t\texistingProcess = new ProcessData(this._config, reportedProcess);\n\t\t\tthis.processes.push(existingProcess);\n\t\t}\n\n\t\texistingProcess.update(reportedProcess, data.system);\n\t}.bind(this));\n};\n\nHostData.prototype._removeMissingProcesses = function(reportedProcesses) {\n\tthis.processes = this.processes.filter(function(existingProcess) {\n\t\tfor(var i = 0; i < reportedProcesses.length; i++) {\n\t\t\tif(reportedProcesses[i].name == existingProcess.name) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t});\n};\n\nHostData.prototype.findProcessById = function(id) {\n\tfor(var i = 0; i < this.processes.length; i++) {\n\t\tif(this.processes[i].id == id) {\n\t\t\treturn this.processes[i];\n\t\t}\n\t}\n\n\treturn null;\n}\n\nmodule.exports = HostData;\n},{\"./ProcessData\":2}],2:[function(require,module,exports){\nvar Moment = require(\"moment\");\n\nvar MILLISECONDS_IN_A_DAY = 86400000;\n\nvar ProcessData = function(config, data) {\n\tObject.defineProperty(this, \"_config\", {\n\t\tenumerable: false,\n\t\tvalue: config\n\t});\n\n\tthis.usage = {\n\t\tcpu: data.usage ? data.usage.cpu : [],\n\t\tmemory: data.usage ? data.usage.memory : []\n\t};\n\n\tthis.logs = [];\n\n\tif(Array.isArray(data.logs)) {\n\t\tdata.logs.forEach(function(log) {\n\t\t\tthis.log(log.type, log.data);\n\t\t}.bind(this));\n\t}\n\n\tthis._map(data);\n}\n\nProcessData.prototype.update = function(data, system) {\n\tthis._map(data);\n\n\tthis._append((data.memory / system.memory.total) * 100, data.cpu, system.time);\n}\n\nProcessData.prototype.log = function(type, data) {\n\tthis.logs.push({\n\t\ttype: type,\n\t\tdata: data\n\t});\n\n\t// rotate logs if necessary\n\tif(this.logs.length > this._config.get(\"logs:max\")) {\n\t\tthis.logs.splice(0, this.logs.length - this._config.get(\"logs:max\"));\n\t}\n}\n\nProcessData.prototype._map = function(data) {\n\t[\"id\", \"pid\", \"name\", \"script\", \"uptime\", \"restarts\", \"status\", \"memory\", \"cpu\", \"reloading\", \"debugPort\", \"mode\"].forEach(function(key) {\n\t\tthis[key] = data[key];\n\t}.bind(this));\n}\n\nProcessData.prototype._append = function(memory, cpu, time) {\n\tthis.usage.memory = this._compressResourceUsage(this.usage.memory, time);\n\tthis.usage.cpu = this._compressResourceUsage(this.usage.cpu, time);\n\n\tthis._appendIfDifferent(this.usage.memory, memory, time);\n\tthis._appendIfDifferent(this.usage.cpu, cpu, time);\n}\n\nProcessData.prototype._appendIfDifferent = function(array, value, time) {\n\tvar rounded = ~~value;\n\n\t// if the last two datapoints have the same value as the one we're about to add,\n\t// don't add a third, just change the date of the last one to be now\n\t// x-----x becomes x-----------x instead of x-----x-----x\n\tif(array.length > 1 && array[array.length - 1].y == rounded && array[array.length - 2].y == rounded) {\n\t\tarray[array.length - 1].x = time;\n\n\t\treturn;\n\t}\n\n\tarray.push({\n\t\tx: time,\n\t\ty: rounded\n\t});\n}\n\nProcessData.prototype._compressResourceUsage = function(data, time) {\n\tvar datapoints = this._config.get(\"graph:datapoints\");\n\tdatapoints -= 1;\n\n\tvar distribution = this._config.get(\"graph:distribution\");\n\tvar maxAgeInDays = distribution.length * MILLISECONDS_IN_A_DAY;\n\n\tif(data.length < datapoints) {\n\t\treturn data;\n\t}\n\n\tvar now = time;\n\tvar cutoff = now - maxAgeInDays;\n\tvar usage = [];\n\n\tvar days = [];\n\tvar day = [];\n\n\t// group all data by day\n\tdata.forEach(function(datum) {\n\t\tif(datum.x < cutoff) {\n\t\t\t// ignore anything older than graph:maxAgeInDays\n\t\t\treturn;\n\t\t}\n\n\t\t// record date so we can easily compare days\n\t\tdatum.date = new Date(datum.x);\n\n\t\tif(day[day.length - 1] && day[day.length - 1].date.getDate() != datum.date.getDate()) {\n\t\t\tdays.push(day);\n\t\t\tday = [];\n\t\t} else {\n\t\t\tday.push(datum);\n\t\t}\n\t});\n\n\t// all datapoints were in one day..\n\tif(days.length == 0) {\n\t\tdays.push(day);\n\t}\n\n\t// compress each days worth of data\n\tdays.forEach(function(day) {\n\t\tvar compressed = this._compressDay(day, now, datapoints, distribution);\n\n\t\tusage = usage.concat(compressed);\n\t}.bind(this));\n\n\treturn usage;\n}\n\nProcessData.prototype._compressDay = function(day, now, datapoints, distribution) {\n\tif(day.length == 0) {\n\t\treturn day;\n\t}\n\n\tvar dayDifference = Math.floor((now - day[day.length - 1].x) / MILLISECONDS_IN_A_DAY);\n\n\tif(dayDifference > distribution.length) {\n\t\treturn [];\n\t}\n\n\tvar percent = distribution[dayDifference];\n\n\treturn this._compress(day, (datapoints/100) * percent);\n}\n\nProcessData.prototype._compress = function(dataSet, maxSamples) {\n\tvar sampleSize = Math.ceil(dataSet.length/maxSamples);\n\n\tvar output = [];\n\tvar offset = 0;\n\tvar data = 0;\n\tvar date = 0;\n\n\twhile(offset < dataSet.length) {\n\t\tvar processed = 0;\n\n\t\tfor(var i = 0; i < sampleSize; i++) {\n\t\t\tif(offset + i == dataSet.length) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// might at some point overflow MAX_INT here. won't that be fun.\n\t\t\tdate += dataSet[offset + i].x;\n\n\t\t\tdata += dataSet[offset + i].y;\n\n\t\t\tprocessed++;\n\t\t}\n\n\t\toffset += processed;\n\n\t\toutput.push({\n\t\t\tx: date / processed,\n\t\t\ty: data / processed\n\t\t});\n\n\t\tdata = 0;\n\t\tdate = 0;\n\t}\n\n\treturn output;\n}\n\nmodule.exports = ProcessData;\n},{\"moment\":20}],3:[function(require,module,exports){\n(function() {\n  var Filter, STYLES, defaults, entities, extend, toHexString, _i, _results,\n    __slice = [].slice;\n\n  entities = require(\"entities\");\n\n  STYLES = {\n    'ef0': 'color:#000',\n    'ef1': 'color:#A00',\n    'ef2': 'color:#0A0',\n    'ef3': 'color:#A50',\n    'ef4': 'color:#00A',\n    'ef5': 'color:#A0A',\n    'ef6': 'color:#0AA',\n    'ef7': 'color:#AAA',\n    'ef8': 'color:#555',\n    'ef9': 'color:#F55',\n    'ef10': 'color:#5F5',\n    'ef11': 'color:#FF5',\n    'ef12': 'color:#55F',\n    'ef13': 'color:#F5F',\n    'ef14': 'color:#5FF',\n    'ef15': 'color:#FFF',\n    'eb0': 'background-color:#000',\n    'eb1': 'background-color:#A00',\n    'eb2': 'background-color:#0A0',\n    'eb3': 'background-color:#A50',\n    'eb4': 'background-color:#00A',\n    'eb5': 'background-color:#A0A',\n    'eb6': 'background-color:#0AA',\n    'eb7': 'background-color:#AAA',\n    'eb8': 'background-color:#555',\n    'eb9': 'background-color:#F55',\n    'eb10': 'background-color:#5F5',\n    'eb11': 'background-color:#FF5',\n    'eb12': 'background-color:#55F',\n    'eb13': 'background-color:#F5F',\n    'eb14': 'background-color:#5FF',\n    'eb15': 'background-color:#FFF'\n  };\n\n  toHexString = function(num) {\n    num = num.toString(16);\n    while (num.length < 2) {\n      num = \"0\" + num;\n    }\n    return num;\n  };\n\n  [0, 1, 2, 3, 4, 5].forEach(function(red) {\n    return [0, 1, 2, 3, 4, 5].forEach(function(green) {\n      return [0, 1, 2, 3, 4, 5].forEach(function(blue) {\n        var b, c, g, n, r, rgb;\n        c = 16 + (red * 36) + (green * 6) + blue;\n        r = red > 0 ? red * 40 + 55 : 0;\n        g = green > 0 ? green * 40 + 55 : 0;\n        b = blue > 0 ? blue * 40 + 55 : 0;\n        rgb = ((function() {\n          var _i, _len, _ref, _results;\n          _ref = [r, g, b];\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            n = _ref[_i];\n            _results.push(toHexString(n));\n          }\n          return _results;\n        })()).join('');\n        STYLES[\"ef\" + c] = \"color:#\" + rgb;\n        return STYLES[\"eb\" + c] = \"background-color:#\" + rgb;\n      });\n    });\n  });\n\n  (function() {\n    _results = [];\n    for (_i = 0; _i <= 23; _i++){ _results.push(_i); }\n    return _results;\n  }).apply(this).forEach(function(gray) {\n    var c, l;\n    c = gray + 232;\n    l = toHexString(gray * 10 + 8);\n    STYLES[\"ef\" + c] = \"color:#\" + l + l + l;\n    return STYLES[\"eb\" + c] = \"background-color:#\" + l + l + l;\n  });\n\n  extend = function() {\n    var dest, k, obj, objs, v, _j, _len;\n    dest = arguments[0], objs = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    for (_j = 0, _len = objs.length; _j < _len; _j++) {\n      obj = objs[_j];\n      for (k in obj) {\n        v = obj[k];\n        dest[k] = v;\n      }\n    }\n    return dest;\n  };\n\n  defaults = {\n    fg: '#FFF',\n    bg: '#000',\n    escapeXML: false\n  };\n\n  Filter = (function() {\n    function Filter(options) {\n      if (options == null) {\n        options = {};\n      }\n      this.opts = extend({}, defaults, options);\n      this.input = [];\n      this.stack = [];\n    }\n\n    Filter.prototype.toHtml = function(input) {\n      var buf;\n      this.input = typeof input === 'string' ? [input] : input;\n      buf = [];\n      this.forEach(function(chunk) {\n        return buf.push(chunk);\n      });\n      this.input = [];\n      return buf.join('');\n    };\n\n    Filter.prototype.forEach = function(callback) {\n      var buf, handleDisplay;\n      buf = '';\n      handleDisplay = (function(_this) {\n        return function(code) {\n          code = parseInt(code, 10);\n          if (code === -1) {\n            callback('<br/>');\n          }\n          if (code === 0) {\n            if (_this.stack.length) {\n              callback(_this.resetStyles());\n            }\n          }\n          if (code === 1) {\n            callback(_this.pushTag('b'));\n          }\n          if (code === 2) {\n\n          }\n          if ((2 < code && code < 5)) {\n            callback(_this.pushTag('u'));\n          }\n          if ((4 < code && code < 7)) {\n            callback(_this.pushTag('blink'));\n          }\n          if (code === 7) {\n\n          }\n          if (code === 8) {\n            callback(_this.pushStyle('display:none'));\n          }\n          if (code === 9) {\n            callback(_this.pushTag('strike'));\n          }\n          if (code === 24) {\n            callback(_this.closeTag('u'));\n          }\n          if ((29 < code && code < 38)) {\n            callback(_this.pushStyle(\"ef\" + (code - 30)));\n          }\n          if (code === 39) {\n            callback(_this.pushStyle(\"color:\" + _this.opts.fg));\n          }\n          if ((39 < code && code < 48)) {\n            callback(_this.pushStyle(\"eb\" + (code - 40)));\n          }\n          if (code === 49) {\n            callback(_this.pushStyle(\"background-color:\" + _this.opts.bg));\n          }\n          if ((89 < code && code < 98)) {\n            callback(_this.pushStyle(\"ef\" + (8 + (code - 90))));\n          }\n          if ((99 < code && code < 108)) {\n            return callback(_this.pushStyle(\"eb\" + (8 + (code - 100))));\n          }\n        };\n      })(this);\n      this.input.forEach((function(_this) {\n        return function(chunk) {\n          buf += chunk;\n          return _this.tokenize(buf, function(tok, data) {\n            switch (tok) {\n              case 'text':\n                return callback(_this.pushText(data));\n              case 'display':\n                return handleDisplay(data);\n              case 'xterm256':\n                return callback(_this.pushStyle(\"ef\" + data));\n            }\n          });\n        };\n      })(this));\n      if (this.stack.length) {\n        return callback(this.resetStyles());\n      }\n    };\n\n    Filter.prototype.pushTag = function(tag, style) {\n      if (style == null) {\n        style = '';\n      }\n      if (style.length && style.indexOf(':') === -1) {\n        style = STYLES[style];\n      }\n      this.stack.push(tag);\n      return [\"<\" + tag, (style ? \" style=\\\"\" + style + \"\\\"\" : void 0), \">\"].join('');\n    };\n\n    Filter.prototype.pushText = function(text) {\n      if (this.opts.escapeXML) {\n        return entities.encodeXML(text);\n      } else {\n        return text;\n      }\n    };\n\n    Filter.prototype.pushStyle = function(style) {\n      return this.pushTag(\"span\", style);\n    };\n\n    Filter.prototype.closeTag = function(style) {\n      var last;\n      if (this.stack.slice(-1)[0] === style) {\n        last = this.stack.pop();\n      }\n      if (last != null) {\n        return \"</\" + style + \">\";\n      }\n    };\n\n    Filter.prototype.resetStyles = function() {\n      var stack, _ref;\n      _ref = [this.stack, []], stack = _ref[0], this.stack = _ref[1];\n      return stack.reverse().map(function(tag) {\n        return \"</\" + tag + \">\";\n      }).join('');\n    };\n\n    Filter.prototype.tokenize = function(text, callback) {\n      var ansiHandler, ansiMatch, ansiMess, handler, i, length, newline, process, realText, remove, removeXterm256, tokens, _j, _len, _results1;\n      ansiMatch = false;\n      ansiHandler = 3;\n      remove = function(m) {\n        return '';\n      };\n      removeXterm256 = function(m, g1) {\n        callback('xterm256', g1);\n        return '';\n      };\n      newline = (function(_this) {\n        return function(m) {\n          if (_this.opts.newline) {\n            callback('display', -1);\n          } else {\n            callback('text', m);\n          }\n          return '';\n        };\n      })(this);\n      ansiMess = function(m, g1) {\n        var code, _j, _len;\n        ansiMatch = true;\n        if (g1.trim().length === 0) {\n          g1 = '0';\n        }\n        g1 = g1.trimRight(';').split(';');\n        for (_j = 0, _len = g1.length; _j < _len; _j++) {\n          code = g1[_j];\n          callback('display', code);\n        }\n        return '';\n      };\n      realText = function(m) {\n        callback('text', m);\n        return '';\n      };\n      tokens = [\n        {\n          pattern: /^\\x08+/,\n          sub: remove\n        }, {\n          pattern: /^\\x1b\\[38;5;(\\d+)m/,\n          sub: removeXterm256\n        }, {\n          pattern: /^\\n+/,\n          sub: newline\n        }, {\n          pattern: /^\\x1b\\[((?:\\d{1,3};?)+|)m/,\n          sub: ansiMess\n        }, {\n          pattern: /^\\x1b\\[?[\\d;]{0,3}/,\n          sub: remove\n        }, {\n          pattern: /^([^\\x1b\\x08\\n]+)/,\n          sub: realText\n        }\n      ];\n      process = function(handler, i) {\n        var matches;\n        if (i > ansiHandler && ansiMatch) {\n          return;\n        } else {\n          ansiMatch = false;\n        }\n        matches = text.match(handler.pattern);\n        text = text.replace(handler.pattern, handler.sub);\n        if (matches == null) {\n\n        }\n      };\n      _results1 = [];\n      while ((length = text.length) > 0) {\n        for (i = _j = 0, _len = tokens.length; _j < _len; i = ++_j) {\n          handler = tokens[i];\n          process(handler, i);\n        }\n        if (text.length === length) {\n          break;\n        } else {\n          _results1.push(void 0);\n        }\n      }\n      return _results1;\n    };\n\n    return Filter;\n\n  })();\n\n  module.exports = Filter;\n\n}).call(this);\n\n},{\"entities\":4}],4:[function(require,module,exports){\nvar encode = require(\"./lib/encode.js\"),\n    decode = require(\"./lib/decode.js\");\n\nexports.decode = function(data, level){\n\treturn (!level || level <= 0 ? decode.XML : decode.HTML)(data);\n};\n\nexports.decodeStrict = function(data, level){\n\treturn (!level || level <= 0 ? decode.XML : decode.HTMLStrict)(data);\n};\n\nexports.encode = function(data, level){\n\treturn (!level || level <= 0 ? encode.XML : encode.HTML)(data);\n};\n\nexports.encodeXML = encode.XML;\n\nexports.encodeHTML4 =\nexports.encodeHTML5 =\nexports.encodeHTML  = encode.HTML;\n\nexports.decodeXML =\nexports.decodeXMLStrict = decode.XML;\n\nexports.decodeHTML4 =\nexports.decodeHTML5 =\nexports.decodeHTML = decode.HTML;\n\nexports.decodeHTML4Strict =\nexports.decodeHTML5Strict =\nexports.decodeHTMLStrict = decode.HTMLStrict;\n\nexports.escape = encode.escape;\n\n},{\"./lib/decode.js\":5,\"./lib/encode.js\":7}],5:[function(require,module,exports){\nvar entityMap = require(\"../maps/entities.json\"),\n    legacyMap = require(\"../maps/legacy.json\"),\n    xmlMap    = require(\"../maps/xml.json\"),\n    decodeCodePoint = require(\"./decode_codepoint.js\");\n\nvar decodeXMLStrict  = getStrictDecoder(xmlMap),\n    decodeHTMLStrict = getStrictDecoder(entityMap);\n\nfunction getStrictDecoder(map){\n\tvar keys = Object.keys(map).join(\"|\"),\n\t    replace = getReplacer(map);\n\n\tkeys += \"|#[xX][\\\\da-fA-F]+|#\\\\d+\";\n\n\tvar re = new RegExp(\"&(?:\" + keys + \");\", \"g\");\n\n\treturn function(str){\n\t\treturn String(str).replace(re, replace);\n\t};\n}\n\nvar decodeHTML = (function(){\n\tvar legacy = Object.keys(legacyMap)\n\t\t.sort(sorter);\n\n\tvar keys = Object.keys(entityMap)\n\t\t.sort(sorter);\n\n\tfor(var i = 0, j = 0; i < keys.length; i++){\n\t\tif(legacy[j] === keys[i]){\n\t\t\tkeys[i] += \";?\";\n\t\t\tj++;\n\t\t} else {\n\t\t\tkeys[i] += \";\";\n\t\t}\n\t}\n\n\tvar re = new RegExp(\"&(?:\" + keys.join(\"|\") + \"|#[xX][\\\\da-fA-F]+;?|#\\\\d+;?)\", \"g\"),\n\t    replace = getReplacer(entityMap);\n\n\tfunction replacer(str){\n\t\tif(str.substr(-1) !== \";\") str += \";\";\n\t\treturn replace(str);\n\t}\n\n\t//TODO consider creating a merged map\n\treturn function(str){\n\t\treturn String(str).replace(re, replacer);\n\t};\n}());\n\nfunction sorter(a, b){\n\treturn a < b ? 1 : -1;\n}\n\nfunction getReplacer(map){\n\treturn function replace(str){\n\t\tif(str.charAt(1) === \"#\"){\n\t\t\tif(str.charAt(2) === \"X\" || str.charAt(2) === \"x\"){\n\t\t\t\treturn decodeCodePoint(parseInt(str.substr(3), 16));\n\t\t\t}\n\t\t\treturn decodeCodePoint(parseInt(str.substr(2), 10));\n\t\t}\n\t\treturn map[str.slice(1, -1)];\n\t};\n}\n\nmodule.exports = {\n\tXML: decodeXMLStrict,\n\tHTML: decodeHTML,\n\tHTMLStrict: decodeHTMLStrict\n};\n},{\"../maps/entities.json\":9,\"../maps/legacy.json\":10,\"../maps/xml.json\":11,\"./decode_codepoint.js\":6}],6:[function(require,module,exports){\nvar decodeMap = require(\"../maps/decode.json\");\n\nmodule.exports = decodeCodePoint;\n\n// modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119\nfunction decodeCodePoint(codePoint){\n\n\tif((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF){\n\t\treturn \"\\uFFFD\";\n\t}\n\n\tif(codePoint in decodeMap){\n\t\tcodePoint = decodeMap[codePoint];\n\t}\n\n\tvar output = \"\";\n\n\tif(codePoint > 0xFFFF){\n\t\tcodePoint -= 0x10000;\n\t\toutput += String.fromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);\n\t\tcodePoint = 0xDC00 | codePoint & 0x3FF;\n\t}\n\n\toutput += String.fromCharCode(codePoint);\n\treturn output;\n}\n\n},{\"../maps/decode.json\":8}],7:[function(require,module,exports){\nvar inverseXML = getInverseObj(require(\"../maps/xml.json\")),\n    xmlReplacer = getInverseReplacer(inverseXML);\n\nexports.XML = getInverse(inverseXML, xmlReplacer);\n\nvar inverseHTML = getInverseObj(require(\"../maps/entities.json\")),\n    htmlReplacer = getInverseReplacer(inverseHTML);\n\nexports.HTML = getInverse(inverseHTML, htmlReplacer);\n\nfunction getInverseObj(obj){\n\treturn Object.keys(obj).sort().reduce(function(inverse, name){\n\t\tinverse[obj[name]] = \"&\" + name + \";\";\n\t\treturn inverse;\n\t}, {});\n}\n\nfunction getInverseReplacer(inverse){\n\tvar single = [],\n\t    multiple = [];\n\n\tObject.keys(inverse).forEach(function(k){\n\t\tif(k.length === 1){\n\t\t\tsingle.push(\"\\\\\" + k);\n\t\t} else {\n\t\t\tmultiple.push(k);\n\t\t}\n\t});\n\n\t//TODO add ranges\n\tmultiple.unshift(\"[\" + single.join(\"\") + \"]\");\n\n\treturn new RegExp(multiple.join(\"|\"), \"g\");\n}\n\nvar re_nonASCII = /[^\\0-\\x7F]/g,\n    re_astralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction singleCharReplacer(c){\n\treturn \"&#x\" + c.charCodeAt(0).toString(16).toUpperCase() + \";\";\n}\n\nfunction astralReplacer(c){\n\t// http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\tvar high = c.charCodeAt(0);\n\tvar low  = c.charCodeAt(1);\n\tvar codePoint = (high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;\n\treturn \"&#x\" + codePoint.toString(16).toUpperCase() + \";\";\n}\n\nfunction getInverse(inverse, re){\n\tfunction func(name){\n\t\treturn inverse[name];\n\t}\n\n\treturn function(data){\n\t\treturn data\n\t\t\t\t.replace(re, func)\n\t\t\t\t.replace(re_astralSymbols, astralReplacer)\n\t\t\t\t.replace(re_nonASCII, singleCharReplacer);\n\t};\n}\n\nvar re_xmlChars = getInverseReplacer(inverseXML);\n\nfunction escapeXML(data){\n\treturn data\n\t\t\t.replace(re_xmlChars, singleCharReplacer)\n\t\t\t.replace(re_astralSymbols, astralReplacer)\n\t\t\t.replace(re_nonASCII, singleCharReplacer);\n}\n\nexports.escape = escapeXML;\n\n},{\"../maps/entities.json\":9,\"../maps/xml.json\":11}],8:[function(require,module,exports){\nmodule.exports={\"0\":65533,\"128\":8364,\"130\":8218,\"131\":402,\"132\":8222,\"133\":8230,\"134\":8224,\"135\":8225,\"136\":710,\"137\":8240,\"138\":352,\"139\":8249,\"140\":338,\"142\":381,\"145\":8216,\"146\":8217,\"147\":8220,\"148\":8221,\"149\":8226,\"150\":8211,\"151\":8212,\"152\":732,\"153\":8482,\"154\":353,\"155\":8250,\"156\":339,\"158\":382,\"159\":376}\n},{}],9:[function(require,module,exports){\nmodule.exports={\"Aacute\":\"\\u00C1\",\"aacute\":\"\\u00E1\",\"Abreve\":\"\\u0102\",\"abreve\":\"\\u0103\",\"ac\":\"\\u223E\",\"acd\":\"\\u223F\",\"acE\":\"\\u223E\\u0333\",\"Acirc\":\"\\u00C2\",\"acirc\":\"\\u00E2\",\"acute\":\"\\u00B4\",\"Acy\":\"\\u0410\",\"acy\":\"\\u0430\",\"AElig\":\"\\u00C6\",\"aelig\":\"\\u00E6\",\"af\":\"\\u2061\",\"Afr\":\"\\uD835\\uDD04\",\"afr\":\"\\uD835\\uDD1E\",\"Agrave\":\"\\u00C0\",\"agrave\":\"\\u00E0\",\"alefsym\":\"\\u2135\",\"aleph\":\"\\u2135\",\"Alpha\":\"\\u0391\",\"alpha\":\"\\u03B1\",\"Amacr\":\"\\u0100\",\"amacr\":\"\\u0101\",\"amalg\":\"\\u2A3F\",\"amp\":\"&\",\"AMP\":\"&\",\"andand\":\"\\u2A55\",\"And\":\"\\u2A53\",\"and\":\"\\u2227\",\"andd\":\"\\u2A5C\",\"andslope\":\"\\u2A58\",\"andv\":\"\\u2A5A\",\"ang\":\"\\u2220\",\"ange\":\"\\u29A4\",\"angle\":\"\\u2220\",\"angmsdaa\":\"\\u29A8\",\"angmsdab\":\"\\u29A9\",\"angmsdac\":\"\\u29AA\",\"angmsdad\":\"\\u29AB\",\"angmsdae\":\"\\u29AC\",\"angmsdaf\":\"\\u29AD\",\"angmsdag\":\"\\u29AE\",\"angmsdah\":\"\\u29AF\",\"angmsd\":\"\\u2221\",\"angrt\":\"\\u221F\",\"angrtvb\":\"\\u22BE\",\"angrtvbd\":\"\\u299D\",\"angsph\":\"\\u2222\",\"angst\":\"\\u00C5\",\"angzarr\":\"\\u237C\",\"Aogon\":\"\\u0104\",\"aogon\":\"\\u0105\",\"Aopf\":\"\\uD835\\uDD38\",\"aopf\":\"\\uD835\\uDD52\",\"apacir\":\"\\u2A6F\",\"ap\":\"\\u2248\",\"apE\":\"\\u2A70\",\"ape\":\"\\u224A\",\"apid\":\"\\u224B\",\"apos\":\"'\",\"ApplyFunction\":\"\\u2061\",\"approx\":\"\\u2248\",\"approxeq\":\"\\u224A\",\"Aring\":\"\\u00C5\",\"aring\":\"\\u00E5\",\"Ascr\":\"\\uD835\\uDC9C\",\"ascr\":\"\\uD835\\uDCB6\",\"Assign\":\"\\u2254\",\"ast\":\"*\",\"asymp\":\"\\u2248\",\"asympeq\":\"\\u224D\",\"Atilde\":\"\\u00C3\",\"atilde\":\"\\u00E3\",\"Auml\":\"\\u00C4\",\"auml\":\"\\u00E4\",\"awconint\":\"\\u2233\",\"awint\":\"\\u2A11\",\"backcong\":\"\\u224C\",\"backepsilon\":\"\\u03F6\",\"backprime\":\"\\u2035\",\"backsim\":\"\\u223D\",\"backsimeq\":\"\\u22CD\",\"Backslash\":\"\\u2216\",\"Barv\":\"\\u2AE7\",\"barvee\":\"\\u22BD\",\"barwed\":\"\\u2305\",\"Barwed\":\"\\u2306\",\"barwedge\":\"\\u2305\",\"bbrk\":\"\\u23B5\",\"bbrktbrk\":\"\\u23B6\",\"bcong\":\"\\u224C\",\"Bcy\":\"\\u0411\",\"bcy\":\"\\u0431\",\"bdquo\":\"\\u201E\",\"becaus\":\"\\u2235\",\"because\":\"\\u2235\",\"Because\":\"\\u2235\",\"bemptyv\":\"\\u29B0\",\"bepsi\":\"\\u03F6\",\"bernou\":\"\\u212C\",\"Bernoullis\":\"\\u212C\",\"Beta\":\"\\u0392\",\"beta\":\"\\u03B2\",\"beth\":\"\\u2136\",\"between\":\"\\u226C\",\"Bfr\":\"\\uD835\\uDD05\",\"bfr\":\"\\uD835\\uDD1F\",\"bigcap\":\"\\u22C2\",\"bigcirc\":\"\\u25EF\",\"bigcup\":\"\\u22C3\",\"bigodot\":\"\\u2A00\",\"bigoplus\":\"\\u2A01\",\"bigotimes\":\"\\u2A02\",\"bigsqcup\":\"\\u2A06\",\"bigstar\":\"\\u2605\",\"bigtriangledown\":\"\\u25BD\",\"bigtriangleup\":\"\\u25B3\",\"biguplus\":\"\\u2A04\",\"bigvee\":\"\\u22C1\",\"bigwedge\":\"\\u22C0\",\"bkarow\":\"\\u290D\",\"blacklozenge\":\"\\u29EB\",\"blacksquare\":\"\\u25AA\",\"blacktriangle\":\"\\u25B4\",\"blacktriangledown\":\"\\u25BE\",\"blacktriangleleft\":\"\\u25C2\",\"blacktriangleright\":\"\\u25B8\",\"blank\":\"\\u2423\",\"blk12\":\"\\u2592\",\"blk14\":\"\\u2591\",\"blk34\":\"\\u2593\",\"block\":\"\\u2588\",\"bne\":\"=\\u20E5\",\"bnequiv\":\"\\u2261\\u20E5\",\"bNot\":\"\\u2AED\",\"bnot\":\"\\u2310\",\"Bopf\":\"\\uD835\\uDD39\",\"bopf\":\"\\uD835\\uDD53\",\"bot\":\"\\u22A5\",\"bottom\":\"\\u22A5\",\"bowtie\":\"\\u22C8\",\"boxbox\":\"\\u29C9\",\"boxdl\":\"\\u2510\",\"boxdL\":\"\\u2555\",\"boxDl\":\"\\u2556\",\"boxDL\":\"\\u2557\",\"boxdr\":\"\\u250C\",\"boxdR\":\"\\u2552\",\"boxDr\":\"\\u2553\",\"boxDR\":\"\\u2554\",\"boxh\":\"\\u2500\",\"boxH\":\"\\u2550\",\"boxhd\":\"\\u252C\",\"boxHd\":\"\\u2564\",\"boxhD\":\"\\u2565\",\"boxHD\":\"\\u2566\",\"boxhu\":\"\\u2534\",\"boxHu\":\"\\u2567\",\"boxhU\":\"\\u2568\",\"boxHU\":\"\\u2569\",\"boxminus\":\"\\u229F\",\"boxplus\":\"\\u229E\",\"boxtimes\":\"\\u22A0\",\"boxul\":\"\\u2518\",\"boxuL\":\"\\u255B\",\"boxUl\":\"\\u255C\",\"boxUL\":\"\\u255D\",\"boxur\":\"\\u2514\",\"boxuR\":\"\\u2558\",\"boxUr\":\"\\u2559\",\"boxUR\":\"\\u255A\",\"boxv\":\"\\u2502\",\"boxV\":\"\\u2551\",\"boxvh\":\"\\u253C\",\"boxvH\":\"\\u256A\",\"boxVh\":\"\\u256B\",\"boxVH\":\"\\u256C\",\"boxvl\":\"\\u2524\",\"boxvL\":\"\\u2561\",\"boxVl\":\"\\u2562\",\"boxVL\":\"\\u2563\",\"boxvr\":\"\\u251C\",\"boxvR\":\"\\u255E\",\"boxVr\":\"\\u255F\",\"boxVR\":\"\\u2560\",\"bprime\":\"\\u2035\",\"breve\":\"\\u02D8\",\"Breve\":\"\\u02D8\",\"brvbar\":\"\\u00A6\",\"bscr\":\"\\uD835\\uDCB7\",\"Bscr\":\"\\u212C\",\"bsemi\":\"\\u204F\",\"bsim\":\"\\u223D\",\"bsime\":\"\\u22CD\",\"bsolb\":\"\\u29C5\",\"bsol\":\"\\\\\",\"bsolhsub\":\"\\u27C8\",\"bull\":\"\\u2022\",\"bullet\":\"\\u2022\",\"bump\":\"\\u224E\",\"bumpE\":\"\\u2AAE\",\"bumpe\":\"\\u224F\",\"Bumpeq\":\"\\u224E\",\"bumpeq\":\"\\u224F\",\"Cacute\":\"\\u0106\",\"cacute\":\"\\u0107\",\"capand\":\"\\u2A44\",\"capbrcup\":\"\\u2A49\",\"capcap\":\"\\u2A4B\",\"cap\":\"\\u2229\",\"Cap\":\"\\u22D2\",\"capcup\":\"\\u2A47\",\"capdot\":\"\\u2A40\",\"CapitalDifferentialD\":\"\\u2145\",\"caps\":\"\\u2229\\uFE00\",\"caret\":\"\\u2041\",\"caron\":\"\\u02C7\",\"Cayleys\":\"\\u212D\",\"ccaps\":\"\\u2A4D\",\"Ccaron\":\"\\u010C\",\"ccaron\":\"\\u010D\",\"Ccedil\":\"\\u00C7\",\"ccedil\":\"\\u00E7\",\"Ccirc\":\"\\u0108\",\"ccirc\":\"\\u0109\",\"Cconint\":\"\\u2230\",\"ccups\":\"\\u2A4C\",\"ccupssm\":\"\\u2A50\",\"Cdot\":\"\\u010A\",\"cdot\":\"\\u010B\",\"cedil\":\"\\u00B8\",\"Cedilla\":\"\\u00B8\",\"cemptyv\":\"\\u29B2\",\"cent\":\"\\u00A2\",\"centerdot\":\"\\u00B7\",\"CenterDot\":\"\\u00B7\",\"cfr\":\"\\uD835\\uDD20\",\"Cfr\":\"\\u212D\",\"CHcy\":\"\\u0427\",\"chcy\":\"\\u0447\",\"check\":\"\\u2713\",\"checkmark\":\"\\u2713\",\"Chi\":\"\\u03A7\",\"chi\":\"\\u03C7\",\"circ\":\"\\u02C6\",\"circeq\":\"\\u2257\",\"circlearrowleft\":\"\\u21BA\",\"circlearrowright\":\"\\u21BB\",\"circledast\":\"\\u229B\",\"circledcirc\":\"\\u229A\",\"circleddash\":\"\\u229D\",\"CircleDot\":\"\\u2299\",\"circledR\":\"\\u00AE\",\"circledS\":\"\\u24C8\",\"CircleMinus\":\"\\u2296\",\"CirclePlus\":\"\\u2295\",\"CircleTimes\":\"\\u2297\",\"cir\":\"\\u25CB\",\"cirE\":\"\\u29C3\",\"cire\":\"\\u2257\",\"cirfnint\":\"\\u2A10\",\"cirmid\":\"\\u2AEF\",\"cirscir\":\"\\u29C2\",\"ClockwiseContourIntegral\":\"\\u2232\",\"CloseCurlyDoubleQuote\":\"\\u201D\",\"CloseCurlyQuote\":\"\\u2019\",\"clubs\":\"\\u2663\",\"clubsuit\":\"\\u2663\",\"colon\":\":\",\"Colon\":\"\\u2237\",\"Colone\":\"\\u2A74\",\"colone\":\"\\u2254\",\"coloneq\":\"\\u2254\",\"comma\":\",\",\"commat\":\"@\",\"comp\":\"\\u2201\",\"compfn\":\"\\u2218\",\"complement\":\"\\u2201\",\"complexes\":\"\\u2102\",\"cong\":\"\\u2245\",\"congdot\":\"\\u2A6D\",\"Congruent\":\"\\u2261\",\"conint\":\"\\u222E\",\"Conint\":\"\\u222F\",\"ContourIntegral\":\"\\u222E\",\"copf\":\"\\uD835\\uDD54\",\"Copf\":\"\\u2102\",\"coprod\":\"\\u2210\",\"Coproduct\":\"\\u2210\",\"copy\":\"\\u00A9\",\"COPY\":\"\\u00A9\",\"copysr\":\"\\u2117\",\"CounterClockwiseContourIntegral\":\"\\u2233\",\"crarr\":\"\\u21B5\",\"cross\":\"\\u2717\",\"Cross\":\"\\u2A2F\",\"Cscr\":\"\\uD835\\uDC9E\",\"cscr\":\"\\uD835\\uDCB8\",\"csub\":\"\\u2ACF\",\"csube\":\"\\u2AD1\",\"csup\":\"\\u2AD0\",\"csupe\":\"\\u2AD2\",\"ctdot\":\"\\u22EF\",\"cudarrl\":\"\\u2938\",\"cudarrr\":\"\\u2935\",\"cuepr\":\"\\u22DE\",\"cuesc\":\"\\u22DF\",\"cularr\":\"\\u21B6\",\"cularrp\":\"\\u293D\",\"cupbrcap\":\"\\u2A48\",\"cupcap\":\"\\u2A46\",\"CupCap\":\"\\u224D\",\"cup\":\"\\u222A\",\"Cup\":\"\\u22D3\",\"cupcup\":\"\\u2A4A\",\"cupdot\":\"\\u228D\",\"cupor\":\"\\u2A45\",\"cups\":\"\\u222A\\uFE00\",\"curarr\":\"\\u21B7\",\"curarrm\":\"\\u293C\",\"curlyeqprec\":\"\\u22DE\",\"curlyeqsucc\":\"\\u22DF\",\"curlyvee\":\"\\u22CE\",\"curlywedge\":\"\\u22CF\",\"curren\":\"\\u00A4\",\"curvearrowleft\":\"\\u21B6\",\"curvearrowright\":\"\\u21B7\",\"cuvee\":\"\\u22CE\",\"cuwed\":\"\\u22CF\",\"cwconint\":\"\\u2232\",\"cwint\":\"\\u2231\",\"cylcty\":\"\\u232D\",\"dagger\":\"\\u2020\",\"Dagger\":\"\\u2021\",\"daleth\":\"\\u2138\",\"darr\":\"\\u2193\",\"Darr\":\"\\u21A1\",\"dArr\":\"\\u21D3\",\"dash\":\"\\u2010\",\"Dashv\":\"\\u2AE4\",\"dashv\":\"\\u22A3\",\"dbkarow\":\"\\u290F\",\"dblac\":\"\\u02DD\",\"Dcaron\":\"\\u010E\",\"dcaron\":\"\\u010F\",\"Dcy\":\"\\u0414\",\"dcy\":\"\\u0434\",\"ddagger\":\"\\u2021\",\"ddarr\":\"\\u21CA\",\"DD\":\"\\u2145\",\"dd\":\"\\u2146\",\"DDotrahd\":\"\\u2911\",\"ddotseq\":\"\\u2A77\",\"deg\":\"\\u00B0\",\"Del\":\"\\u2207\",\"Delta\":\"\\u0394\",\"delta\":\"\\u03B4\",\"demptyv\":\"\\u29B1\",\"dfisht\":\"\\u297F\",\"Dfr\":\"\\uD835\\uDD07\",\"dfr\":\"\\uD835\\uDD21\",\"dHar\":\"\\u2965\",\"dharl\":\"\\u21C3\",\"dharr\":\"\\u21C2\",\"DiacriticalAcute\":\"\\u00B4\",\"DiacriticalDot\":\"\\u02D9\",\"DiacriticalDoubleAcute\":\"\\u02DD\",\"DiacriticalGrave\":\"`\",\"DiacriticalTilde\":\"\\u02DC\",\"diam\":\"\\u22C4\",\"diamond\":\"\\u22C4\",\"Diamond\":\"\\u22C4\",\"diamondsuit\":\"\\u2666\",\"diams\":\"\\u2666\",\"die\":\"\\u00A8\",\"DifferentialD\":\"\\u2146\",\"digamma\":\"\\u03DD\",\"disin\":\"\\u22F2\",\"div\":\"\\u00F7\",\"divide\":\"\\u00F7\",\"divideontimes\":\"\\u22C7\",\"divonx\":\"\\u22C7\",\"DJcy\":\"\\u0402\",\"djcy\":\"\\u0452\",\"dlcorn\":\"\\u231E\",\"dlcrop\":\"\\u230D\",\"dollar\":\"$\",\"Dopf\":\"\\uD835\\uDD3B\",\"dopf\":\"\\uD835\\uDD55\",\"Dot\":\"\\u00A8\",\"dot\":\"\\u02D9\",\"DotDot\":\"\\u20DC\",\"doteq\":\"\\u2250\",\"doteqdot\":\"\\u2251\",\"DotEqual\":\"\\u2250\",\"dotminus\":\"\\u2238\",\"dotplus\":\"\\u2214\",\"dotsquare\":\"\\u22A1\",\"doublebarwedge\":\"\\u2306\",\"DoubleContourIntegral\":\"\\u222F\",\"DoubleDot\":\"\\u00A8\",\"DoubleDownArrow\":\"\\u21D3\",\"DoubleLeftArrow\":\"\\u21D0\",\"DoubleLeftRightArrow\":\"\\u21D4\",\"DoubleLeftTee\":\"\\u2AE4\",\"DoubleLongLeftArrow\":\"\\u27F8\",\"DoubleLongLeftRightArrow\":\"\\u27FA\",\"DoubleLongRightArrow\":\"\\u27F9\",\"DoubleRightArrow\":\"\\u21D2\",\"DoubleRightTee\":\"\\u22A8\",\"DoubleUpArrow\":\"\\u21D1\",\"DoubleUpDownArrow\":\"\\u21D5\",\"DoubleVerticalBar\":\"\\u2225\",\"DownArrowBar\":\"\\u2913\",\"downarrow\":\"\\u2193\",\"DownArrow\":\"\\u2193\",\"Downarrow\":\"\\u21D3\",\"DownArrowUpArrow\":\"\\u21F5\",\"DownBreve\":\"\\u0311\",\"downdownarrows\":\"\\u21CA\",\"downharpoonleft\":\"\\u21C3\",\"downharpoonright\":\"\\u21C2\",\"DownLeftRightVector\":\"\\u2950\",\"DownLeftTeeVector\":\"\\u295E\",\"DownLeftVectorBar\":\"\\u2956\",\"DownLeftVector\":\"\\u21BD\",\"DownRightTeeVector\":\"\\u295F\",\"DownRightVectorBar\":\"\\u2957\",\"DownRightVector\":\"\\u21C1\",\"DownTeeArrow\":\"\\u21A7\",\"DownTee\":\"\\u22A4\",\"drbkarow\":\"\\u2910\",\"drcorn\":\"\\u231F\",\"drcrop\":\"\\u230C\",\"Dscr\":\"\\uD835\\uDC9F\",\"dscr\":\"\\uD835\\uDCB9\",\"DScy\":\"\\u0405\",\"dscy\":\"\\u0455\",\"dsol\":\"\\u29F6\",\"Dstrok\":\"\\u0110\",\"dstrok\":\"\\u0111\",\"dtdot\":\"\\u22F1\",\"dtri\":\"\\u25BF\",\"dtrif\":\"\\u25BE\",\"duarr\":\"\\u21F5\",\"duhar\":\"\\u296F\",\"dwangle\":\"\\u29A6\",\"DZcy\":\"\\u040F\",\"dzcy\":\"\\u045F\",\"dzigrarr\":\"\\u27FF\",\"Eacute\":\"\\u00C9\",\"eacute\":\"\\u00E9\",\"easter\":\"\\u2A6E\",\"Ecaron\":\"\\u011A\",\"ecaron\":\"\\u011B\",\"Ecirc\":\"\\u00CA\",\"ecirc\":\"\\u00EA\",\"ecir\":\"\\u2256\",\"ecolon\":\"\\u2255\",\"Ecy\":\"\\u042D\",\"ecy\":\"\\u044D\",\"eDDot\":\"\\u2A77\",\"Edot\":\"\\u0116\",\"edot\":\"\\u0117\",\"eDot\":\"\\u2251\",\"ee\":\"\\u2147\",\"efDot\":\"\\u2252\",\"Efr\":\"\\uD835\\uDD08\",\"efr\":\"\\uD835\\uDD22\",\"eg\":\"\\u2A9A\",\"Egrave\":\"\\u00C8\",\"egrave\":\"\\u00E8\",\"egs\":\"\\u2A96\",\"egsdot\":\"\\u2A98\",\"el\":\"\\u2A99\",\"Element\":\"\\u2208\",\"elinters\":\"\\u23E7\",\"ell\":\"\\u2113\",\"els\":\"\\u2A95\",\"elsdot\":\"\\u2A97\",\"Emacr\":\"\\u0112\",\"emacr\":\"\\u0113\",\"empty\":\"\\u2205\",\"emptyset\":\"\\u2205\",\"EmptySmallSquare\":\"\\u25FB\",\"emptyv\":\"\\u2205\",\"EmptyVerySmallSquare\":\"\\u25AB\",\"emsp13\":\"\\u2004\",\"emsp14\":\"\\u2005\",\"emsp\":\"\\u2003\",\"ENG\":\"\\u014A\",\"eng\":\"\\u014B\",\"ensp\":\"\\u2002\",\"Eogon\":\"\\u0118\",\"eogon\":\"\\u0119\",\"Eopf\":\"\\uD835\\uDD3C\",\"eopf\":\"\\uD835\\uDD56\",\"epar\":\"\\u22D5\",\"eparsl\":\"\\u29E3\",\"eplus\":\"\\u2A71\",\"epsi\":\"\\u03B5\",\"Epsilon\":\"\\u0395\",\"epsilon\":\"\\u03B5\",\"epsiv\":\"\\u03F5\",\"eqcirc\":\"\\u2256\",\"eqcolon\":\"\\u2255\",\"eqsim\":\"\\u2242\",\"eqslantgtr\":\"\\u2A96\",\"eqslantless\":\"\\u2A95\",\"Equal\":\"\\u2A75\",\"equals\":\"=\",\"EqualTilde\":\"\\u2242\",\"equest\":\"\\u225F\",\"Equilibrium\":\"\\u21CC\",\"equiv\":\"\\u2261\",\"equivDD\":\"\\u2A78\",\"eqvparsl\":\"\\u29E5\",\"erarr\":\"\\u2971\",\"erDot\":\"\\u2253\",\"escr\":\"\\u212F\",\"Escr\":\"\\u2130\",\"esdot\":\"\\u2250\",\"Esim\":\"\\u2A73\",\"esim\":\"\\u2242\",\"Eta\":\"\\u0397\",\"eta\":\"\\u03B7\",\"ETH\":\"\\u00D0\",\"eth\":\"\\u00F0\",\"Euml\":\"\\u00CB\",\"euml\":\"\\u00EB\",\"euro\":\"\\u20AC\",\"excl\":\"!\",\"exist\":\"\\u2203\",\"Exists\":\"\\u2203\",\"expectation\":\"\\u2130\",\"exponentiale\":\"\\u2147\",\"ExponentialE\":\"\\u2147\",\"fallingdotseq\":\"\\u2252\",\"Fcy\":\"\\u0424\",\"fcy\":\"\\u0444\",\"female\":\"\\u2640\",\"ffilig\":\"\\uFB03\",\"fflig\":\"\\uFB00\",\"ffllig\":\"\\uFB04\",\"Ffr\":\"\\uD835\\uDD09\",\"ffr\":\"\\uD835\\uDD23\",\"filig\":\"\\uFB01\",\"FilledSmallSquare\":\"\\u25FC\",\"FilledVerySmallSquare\":\"\\u25AA\",\"fjlig\":\"fj\",\"flat\":\"\\u266D\",\"fllig\":\"\\uFB02\",\"fltns\":\"\\u25B1\",\"fnof\":\"\\u0192\",\"Fopf\":\"\\uD835\\uDD3D\",\"fopf\":\"\\uD835\\uDD57\",\"forall\":\"\\u2200\",\"ForAll\":\"\\u2200\",\"fork\":\"\\u22D4\",\"forkv\":\"\\u2AD9\",\"Fouriertrf\":\"\\u2131\",\"fpartint\":\"\\u2A0D\",\"frac12\":\"\\u00BD\",\"frac13\":\"\\u2153\",\"frac14\":\"\\u00BC\",\"frac15\":\"\\u2155\",\"frac16\":\"\\u2159\",\"frac18\":\"\\u215B\",\"frac23\":\"\\u2154\",\"frac25\":\"\\u2156\",\"frac34\":\"\\u00BE\",\"frac35\":\"\\u2157\",\"frac38\":\"\\u215C\",\"frac45\":\"\\u2158\",\"frac56\":\"\\u215A\",\"frac58\":\"\\u215D\",\"frac78\":\"\\u215E\",\"frasl\":\"\\u2044\",\"frown\":\"\\u2322\",\"fscr\":\"\\uD835\\uDCBB\",\"Fscr\":\"\\u2131\",\"gacute\":\"\\u01F5\",\"Gamma\":\"\\u0393\",\"gamma\":\"\\u03B3\",\"Gammad\":\"\\u03DC\",\"gammad\":\"\\u03DD\",\"gap\":\"\\u2A86\",\"Gbreve\":\"\\u011E\",\"gbreve\":\"\\u011F\",\"Gcedil\":\"\\u0122\",\"Gcirc\":\"\\u011C\",\"gcirc\":\"\\u011D\",\"Gcy\":\"\\u0413\",\"gcy\":\"\\u0433\",\"Gdot\":\"\\u0120\",\"gdot\":\"\\u0121\",\"ge\":\"\\u2265\",\"gE\":\"\\u2267\",\"gEl\":\"\\u2A8C\",\"gel\":\"\\u22DB\",\"geq\":\"\\u2265\",\"geqq\":\"\\u2267\",\"geqslant\":\"\\u2A7E\",\"gescc\":\"\\u2AA9\",\"ges\":\"\\u2A7E\",\"gesdot\":\"\\u2A80\",\"gesdoto\":\"\\u2A82\",\"gesdotol\":\"\\u2A84\",\"gesl\":\"\\u22DB\\uFE00\",\"gesles\":\"\\u2A94\",\"Gfr\":\"\\uD835\\uDD0A\",\"gfr\":\"\\uD835\\uDD24\",\"gg\":\"\\u226B\",\"Gg\":\"\\u22D9\",\"ggg\":\"\\u22D9\",\"gimel\":\"\\u2137\",\"GJcy\":\"\\u0403\",\"gjcy\":\"\\u0453\",\"gla\":\"\\u2AA5\",\"gl\":\"\\u2277\",\"glE\":\"\\u2A92\",\"glj\":\"\\u2AA4\",\"gnap\":\"\\u2A8A\",\"gnapprox\":\"\\u2A8A\",\"gne\":\"\\u2A88\",\"gnE\":\"\\u2269\",\"gneq\":\"\\u2A88\",\"gneqq\":\"\\u2269\",\"gnsim\":\"\\u22E7\",\"Gopf\":\"\\uD835\\uDD3E\",\"gopf\":\"\\uD835\\uDD58\",\"grave\":\"`\",\"GreaterEqual\":\"\\u2265\",\"GreaterEqualLess\":\"\\u22DB\",\"GreaterFullEqual\":\"\\u2267\",\"GreaterGreater\":\"\\u2AA2\",\"GreaterLess\":\"\\u2277\",\"GreaterSlantEqual\":\"\\u2A7E\",\"GreaterTilde\":\"\\u2273\",\"Gscr\":\"\\uD835\\uDCA2\",\"gscr\":\"\\u210A\",\"gsim\":\"\\u2273\",\"gsime\":\"\\u2A8E\",\"gsiml\":\"\\u2A90\",\"gtcc\":\"\\u2AA7\",\"gtcir\":\"\\u2A7A\",\"gt\":\">\",\"GT\":\">\",\"Gt\":\"\\u226B\",\"gtdot\":\"\\u22D7\",\"gtlPar\":\"\\u2995\",\"gtquest\":\"\\u2A7C\",\"gtrapprox\":\"\\u2A86\",\"gtrarr\":\"\\u2978\",\"gtrdot\":\"\\u22D7\",\"gtreqless\":\"\\u22DB\",\"gtreqqless\":\"\\u2A8C\",\"gtrless\":\"\\u2277\",\"gtrsim\":\"\\u2273\",\"gvertneqq\":\"\\u2269\\uFE00\",\"gvnE\":\"\\u2269\\uFE00\",\"Hacek\":\"\\u02C7\",\"hairsp\":\"\\u200A\",\"half\":\"\\u00BD\",\"hamilt\":\"\\u210B\",\"HARDcy\":\"\\u042A\",\"hardcy\":\"\\u044A\",\"harrcir\":\"\\u2948\",\"harr\":\"\\u2194\",\"hArr\":\"\\u21D4\",\"harrw\":\"\\u21AD\",\"Hat\":\"^\",\"hbar\":\"\\u210F\",\"Hcirc\":\"\\u0124\",\"hcirc\":\"\\u0125\",\"hearts\":\"\\u2665\",\"heartsuit\":\"\\u2665\",\"hellip\":\"\\u2026\",\"hercon\":\"\\u22B9\",\"hfr\":\"\\uD835\\uDD25\",\"Hfr\":\"\\u210C\",\"HilbertSpace\":\"\\u210B\",\"hksearow\":\"\\u2925\",\"hkswarow\":\"\\u2926\",\"hoarr\":\"\\u21FF\",\"homtht\":\"\\u223B\",\"hookleftarrow\":\"\\u21A9\",\"hookrightarrow\":\"\\u21AA\",\"hopf\":\"\\uD835\\uDD59\",\"Hopf\":\"\\u210D\",\"horbar\":\"\\u2015\",\"HorizontalLine\":\"\\u2500\",\"hscr\":\"\\uD835\\uDCBD\",\"Hscr\":\"\\u210B\",\"hslash\":\"\\u210F\",\"Hstrok\":\"\\u0126\",\"hstrok\":\"\\u0127\",\"HumpDownHump\":\"\\u224E\",\"HumpEqual\":\"\\u224F\",\"hybull\":\"\\u2043\",\"hyphen\":\"\\u2010\",\"Iacute\":\"\\u00CD\",\"iacute\":\"\\u00ED\",\"ic\":\"\\u2063\",\"Icirc\":\"\\u00CE\",\"icirc\":\"\\u00EE\",\"Icy\":\"\\u0418\",\"icy\":\"\\u0438\",\"Idot\":\"\\u0130\",\"IEcy\":\"\\u0415\",\"iecy\":\"\\u0435\",\"iexcl\":\"\\u00A1\",\"iff\":\"\\u21D4\",\"ifr\":\"\\uD835\\uDD26\",\"Ifr\":\"\\u2111\",\"Igrave\":\"\\u00CC\",\"igrave\":\"\\u00EC\",\"ii\":\"\\u2148\",\"iiiint\":\"\\u2A0C\",\"iiint\":\"\\u222D\",\"iinfin\":\"\\u29DC\",\"iiota\":\"\\u2129\",\"IJlig\":\"\\u0132\",\"ijlig\":\"\\u0133\",\"Imacr\":\"\\u012A\",\"imacr\":\"\\u012B\",\"image\":\"\\u2111\",\"ImaginaryI\":\"\\u2148\",\"imagline\":\"\\u2110\",\"imagpart\":\"\\u2111\",\"imath\":\"\\u0131\",\"Im\":\"\\u2111\",\"imof\":\"\\u22B7\",\"imped\":\"\\u01B5\",\"Implies\":\"\\u21D2\",\"incare\":\"\\u2105\",\"in\":\"\\u2208\",\"infin\":\"\\u221E\",\"infintie\":\"\\u29DD\",\"inodot\":\"\\u0131\",\"intcal\":\"\\u22BA\",\"int\":\"\\u222B\",\"Int\":\"\\u222C\",\"integers\":\"\\u2124\",\"Integral\":\"\\u222B\",\"intercal\":\"\\u22BA\",\"Intersection\":\"\\u22C2\",\"intlarhk\":\"\\u2A17\",\"intprod\":\"\\u2A3C\",\"InvisibleComma\":\"\\u2063\",\"InvisibleTimes\":\"\\u2062\",\"IOcy\":\"\\u0401\",\"iocy\":\"\\u0451\",\"Iogon\":\"\\u012E\",\"iogon\":\"\\u012F\",\"Iopf\":\"\\uD835\\uDD40\",\"iopf\":\"\\uD835\\uDD5A\",\"Iota\":\"\\u0399\",\"iota\":\"\\u03B9\",\"iprod\":\"\\u2A3C\",\"iquest\":\"\\u00BF\",\"iscr\":\"\\uD835\\uDCBE\",\"Iscr\":\"\\u2110\",\"isin\":\"\\u2208\",\"isindot\":\"\\u22F5\",\"isinE\":\"\\u22F9\",\"isins\":\"\\u22F4\",\"isinsv\":\"\\u22F3\",\"isinv\":\"\\u2208\",\"it\":\"\\u2062\",\"Itilde\":\"\\u0128\",\"itilde\":\"\\u0129\",\"Iukcy\":\"\\u0406\",\"iukcy\":\"\\u0456\",\"Iuml\":\"\\u00CF\",\"iuml\":\"\\u00EF\",\"Jcirc\":\"\\u0134\",\"jcirc\":\"\\u0135\",\"Jcy\":\"\\u0419\",\"jcy\":\"\\u0439\",\"Jfr\":\"\\uD835\\uDD0D\",\"jfr\":\"\\uD835\\uDD27\",\"jmath\":\"\\u0237\",\"Jopf\":\"\\uD835\\uDD41\",\"jopf\":\"\\uD835\\uDD5B\",\"Jscr\":\"\\uD835\\uDCA5\",\"jscr\":\"\\uD835\\uDCBF\",\"Jsercy\":\"\\u0408\",\"jsercy\":\"\\u0458\",\"Jukcy\":\"\\u0404\",\"jukcy\":\"\\u0454\",\"Kappa\":\"\\u039A\",\"kappa\":\"\\u03BA\",\"kappav\":\"\\u03F0\",\"Kcedil\":\"\\u0136\",\"kcedil\":\"\\u0137\",\"Kcy\":\"\\u041A\",\"kcy\":\"\\u043A\",\"Kfr\":\"\\uD835\\uDD0E\",\"kfr\":\"\\uD835\\uDD28\",\"kgreen\":\"\\u0138\",\"KHcy\":\"\\u0425\",\"khcy\":\"\\u0445\",\"KJcy\":\"\\u040C\",\"kjcy\":\"\\u045C\",\"Kopf\":\"\\uD835\\uDD42\",\"kopf\":\"\\uD835\\uDD5C\",\"Kscr\":\"\\uD835\\uDCA6\",\"kscr\":\"\\uD835\\uDCC0\",\"lAarr\":\"\\u21DA\",\"Lacute\":\"\\u0139\",\"lacute\":\"\\u013A\",\"laemptyv\":\"\\u29B4\",\"lagran\":\"\\u2112\",\"Lambda\":\"\\u039B\",\"lambda\":\"\\u03BB\",\"lang\":\"\\u27E8\",\"Lang\":\"\\u27EA\",\"langd\":\"\\u2991\",\"langle\":\"\\u27E8\",\"lap\":\"\\u2A85\",\"Laplacetrf\":\"\\u2112\",\"laquo\":\"\\u00AB\",\"larrb\":\"\\u21E4\",\"larrbfs\":\"\\u291F\",\"larr\":\"\\u2190\",\"Larr\":\"\\u219E\",\"lArr\":\"\\u21D0\",\"larrfs\":\"\\u291D\",\"larrhk\":\"\\u21A9\",\"larrlp\":\"\\u21AB\",\"larrpl\":\"\\u2939\",\"larrsim\":\"\\u2973\",\"larrtl\":\"\\u21A2\",\"latail\":\"\\u2919\",\"lAtail\":\"\\u291B\",\"lat\":\"\\u2AAB\",\"late\":\"\\u2AAD\",\"lates\":\"\\u2AAD\\uFE00\",\"lbarr\":\"\\u290C\",\"lBarr\":\"\\u290E\",\"lbbrk\":\"\\u2772\",\"lbrace\":\"{\",\"lbrack\":\"[\",\"lbrke\":\"\\u298B\",\"lbrksld\":\"\\u298F\",\"lbrkslu\":\"\\u298D\",\"Lcaron\":\"\\u013D\",\"lcaron\":\"\\u013E\",\"Lcedil\":\"\\u013B\",\"lcedil\":\"\\u013C\",\"lceil\":\"\\u2308\",\"lcub\":\"{\",\"Lcy\":\"\\u041B\",\"lcy\":\"\\u043B\",\"ldca\":\"\\u2936\",\"ldquo\":\"\\u201C\",\"ldquor\":\"\\u201E\",\"ldrdhar\":\"\\u2967\",\"ldrushar\":\"\\u294B\",\"ldsh\":\"\\u21B2\",\"le\":\"\\u2264\",\"lE\":\"\\u2266\",\"LeftAngleBracket\":\"\\u27E8\",\"LeftArrowBar\":\"\\u21E4\",\"leftarrow\":\"\\u2190\",\"LeftArrow\":\"\\u2190\",\"Leftarrow\":\"\\u21D0\",\"LeftArrowRightArrow\":\"\\u21C6\",\"leftarrowtail\":\"\\u21A2\",\"LeftCeiling\":\"\\u2308\",\"LeftDoubleBracket\":\"\\u27E6\",\"LeftDownTeeVector\":\"\\u2961\",\"LeftDownVectorBar\":\"\\u2959\",\"LeftDownVector\":\"\\u21C3\",\"LeftFloor\":\"\\u230A\",\"leftharpoondown\":\"\\u21BD\",\"leftharpoonup\":\"\\u21BC\",\"leftleftarrows\":\"\\u21C7\",\"leftrightarrow\":\"\\u2194\",\"LeftRightArrow\":\"\\u2194\",\"Leftrightarrow\":\"\\u21D4\",\"leftrightarrows\":\"\\u21C6\",\"leftrightharpoons\":\"\\u21CB\",\"leftrightsquigarrow\":\"\\u21AD\",\"LeftRightVector\":\"\\u294E\",\"LeftTeeArrow\":\"\\u21A4\",\"LeftTee\":\"\\u22A3\",\"LeftTeeVector\":\"\\u295A\",\"leftthreetimes\":\"\\u22CB\",\"LeftTriangleBar\":\"\\u29CF\",\"LeftTriangle\":\"\\u22B2\",\"LeftTriangleEqual\":\"\\u22B4\",\"LeftUpDownVector\":\"\\u2951\",\"LeftUpTeeVector\":\"\\u2960\",\"LeftUpVectorBar\":\"\\u2958\",\"LeftUpVector\":\"\\u21BF\",\"LeftVectorBar\":\"\\u2952\",\"LeftVector\":\"\\u21BC\",\"lEg\":\"\\u2A8B\",\"leg\":\"\\u22DA\",\"leq\":\"\\u2264\",\"leqq\":\"\\u2266\",\"leqslant\":\"\\u2A7D\",\"lescc\":\"\\u2AA8\",\"les\":\"\\u2A7D\",\"lesdot\":\"\\u2A7F\",\"lesdoto\":\"\\u2A81\",\"lesdotor\":\"\\u2A83\",\"lesg\":\"\\u22DA\\uFE00\",\"lesges\":\"\\u2A93\",\"lessapprox\":\"\\u2A85\",\"lessdot\":\"\\u22D6\",\"lesseqgtr\":\"\\u22DA\",\"lesseqqgtr\":\"\\u2A8B\",\"LessEqualGreater\":\"\\u22DA\",\"LessFullEqual\":\"\\u2266\",\"LessGreater\":\"\\u2276\",\"lessgtr\":\"\\u2276\",\"LessLess\":\"\\u2AA1\",\"lesssim\":\"\\u2272\",\"LessSlantEqual\":\"\\u2A7D\",\"LessTilde\":\"\\u2272\",\"lfisht\":\"\\u297C\",\"lfloor\":\"\\u230A\",\"Lfr\":\"\\uD835\\uDD0F\",\"lfr\":\"\\uD835\\uDD29\",\"lg\":\"\\u2276\",\"lgE\":\"\\u2A91\",\"lHar\":\"\\u2962\",\"lhard\":\"\\u21BD\",\"lharu\":\"\\u21BC\",\"lharul\":\"\\u296A\",\"lhblk\":\"\\u2584\",\"LJcy\":\"\\u0409\",\"ljcy\":\"\\u0459\",\"llarr\":\"\\u21C7\",\"ll\":\"\\u226A\",\"Ll\":\"\\u22D8\",\"llcorner\":\"\\u231E\",\"Lleftarrow\":\"\\u21DA\",\"llhard\":\"\\u296B\",\"lltri\":\"\\u25FA\",\"Lmidot\":\"\\u013F\",\"lmidot\":\"\\u0140\",\"lmoustache\":\"\\u23B0\",\"lmoust\":\"\\u23B0\",\"lnap\":\"\\u2A89\",\"lnapprox\":\"\\u2A89\",\"lne\":\"\\u2A87\",\"lnE\":\"\\u2268\",\"lneq\":\"\\u2A87\",\"lneqq\":\"\\u2268\",\"lnsim\":\"\\u22E6\",\"loang\":\"\\u27EC\",\"loarr\":\"\\u21FD\",\"lobrk\":\"\\u27E6\",\"longleftarrow\":\"\\u27F5\",\"LongLeftArrow\":\"\\u27F5\",\"Longleftarrow\":\"\\u27F8\",\"longleftrightarrow\":\"\\u27F7\",\"LongLeftRightArrow\":\"\\u27F7\",\"Longleftrightarrow\":\"\\u27FA\",\"longmapsto\":\"\\u27FC\",\"longrightarrow\":\"\\u27F6\",\"LongRightArrow\":\"\\u27F6\",\"Longrightarrow\":\"\\u27F9\",\"looparrowleft\":\"\\u21AB\",\"looparrowright\":\"\\u21AC\",\"lopar\":\"\\u2985\",\"Lopf\":\"\\uD835\\uDD43\",\"lopf\":\"\\uD835\\uDD5D\",\"loplus\":\"\\u2A2D\",\"lotimes\":\"\\u2A34\",\"lowast\":\"\\u2217\",\"lowbar\":\"_\",\"LowerLeftArrow\":\"\\u2199\",\"LowerRightArrow\":\"\\u2198\",\"loz\":\"\\u25CA\",\"lozenge\":\"\\u25CA\",\"lozf\":\"\\u29EB\",\"lpar\":\"(\",\"lparlt\":\"\\u2993\",\"lrarr\":\"\\u21C6\",\"lrcorner\":\"\\u231F\",\"lrhar\":\"\\u21CB\",\"lrhard\":\"\\u296D\",\"lrm\":\"\\u200E\",\"lrtri\":\"\\u22BF\",\"lsaquo\":\"\\u2039\",\"lscr\":\"\\uD835\\uDCC1\",\"Lscr\":\"\\u2112\",\"lsh\":\"\\u21B0\",\"Lsh\":\"\\u21B0\",\"lsim\":\"\\u2272\",\"lsime\":\"\\u2A8D\",\"lsimg\":\"\\u2A8F\",\"lsqb\":\"[\",\"lsquo\":\"\\u2018\",\"lsquor\":\"\\u201A\",\"Lstrok\":\"\\u0141\",\"lstrok\":\"\\u0142\",\"ltcc\":\"\\u2AA6\",\"ltcir\":\"\\u2A79\",\"lt\":\"<\",\"LT\":\"<\",\"Lt\":\"\\u226A\",\"ltdot\":\"\\u22D6\",\"lthree\":\"\\u22CB\",\"ltimes\":\"\\u22C9\",\"ltlarr\":\"\\u2976\",\"ltquest\":\"\\u2A7B\",\"ltri\":\"\\u25C3\",\"ltrie\":\"\\u22B4\",\"ltrif\":\"\\u25C2\",\"ltrPar\":\"\\u2996\",\"lurdshar\":\"\\u294A\",\"luruhar\":\"\\u2966\",\"lvertneqq\":\"\\u2268\\uFE00\",\"lvnE\":\"\\u2268\\uFE00\",\"macr\":\"\\u00AF\",\"male\":\"\\u2642\",\"malt\":\"\\u2720\",\"maltese\":\"\\u2720\",\"Map\":\"\\u2905\",\"map\":\"\\u21A6\",\"mapsto\":\"\\u21A6\",\"mapstodown\":\"\\u21A7\",\"mapstoleft\":\"\\u21A4\",\"mapstoup\":\"\\u21A5\",\"marker\":\"\\u25AE\",\"mcomma\":\"\\u2A29\",\"Mcy\":\"\\u041C\",\"mcy\":\"\\u043C\",\"mdash\":\"\\u2014\",\"mDDot\":\"\\u223A\",\"measuredangle\":\"\\u2221\",\"MediumSpace\":\"\\u205F\",\"Mellintrf\":\"\\u2133\",\"Mfr\":\"\\uD835\\uDD10\",\"mfr\":\"\\uD835\\uDD2A\",\"mho\":\"\\u2127\",\"micro\":\"\\u00B5\",\"midast\":\"*\",\"midcir\":\"\\u2AF0\",\"mid\":\"\\u2223\",\"middot\":\"\\u00B7\",\"minusb\":\"\\u229F\",\"minus\":\"\\u2212\",\"minusd\":\"\\u2238\",\"minusdu\":\"\\u2A2A\",\"MinusPlus\":\"\\u2213\",\"mlcp\":\"\\u2ADB\",\"mldr\":\"\\u2026\",\"mnplus\":\"\\u2213\",\"models\":\"\\u22A7\",\"Mopf\":\"\\uD835\\uDD44\",\"mopf\":\"\\uD835\\uDD5E\",\"mp\":\"\\u2213\",\"mscr\":\"\\uD835\\uDCC2\",\"Mscr\":\"\\u2133\",\"mstpos\":\"\\u223E\",\"Mu\":\"\\u039C\",\"mu\":\"\\u03BC\",\"multimap\":\"\\u22B8\",\"mumap\":\"\\u22B8\",\"nabla\":\"\\u2207\",\"Nacute\":\"\\u0143\",\"nacute\":\"\\u0144\",\"nang\":\"\\u2220\\u20D2\",\"nap\":\"\\u2249\",\"napE\":\"\\u2A70\\u0338\",\"napid\":\"\\u224B\\u0338\",\"napos\":\"\\u0149\",\"napprox\":\"\\u2249\",\"natural\":\"\\u266E\",\"naturals\":\"\\u2115\",\"natur\":\"\\u266E\",\"nbsp\":\"\\u00A0\",\"nbump\":\"\\u224E\\u0338\",\"nbumpe\":\"\\u224F\\u0338\",\"ncap\":\"\\u2A43\",\"Ncaron\":\"\\u0147\",\"ncaron\":\"\\u0148\",\"Ncedil\":\"\\u0145\",\"ncedil\":\"\\u0146\",\"ncong\":\"\\u2247\",\"ncongdot\":\"\\u2A6D\\u0338\",\"ncup\":\"\\u2A42\",\"Ncy\":\"\\u041D\",\"ncy\":\"\\u043D\",\"ndash\":\"\\u2013\",\"nearhk\":\"\\u2924\",\"nearr\":\"\\u2197\",\"neArr\":\"\\u21D7\",\"nearrow\":\"\\u2197\",\"ne\":\"\\u2260\",\"nedot\":\"\\u2250\\u0338\",\"NegativeMediumSpace\":\"\\u200B\",\"NegativeThickSpace\":\"\\u200B\",\"NegativeThinSpace\":\"\\u200B\",\"NegativeVeryThinSpace\":\"\\u200B\",\"nequiv\":\"\\u2262\",\"nesear\":\"\\u2928\",\"nesim\":\"\\u2242\\u0338\",\"NestedGreaterGreater\":\"\\u226B\",\"NestedLessLess\":\"\\u226A\",\"NewLine\":\"\\n\",\"nexist\":\"\\u2204\",\"nexists\":\"\\u2204\",\"Nfr\":\"\\uD835\\uDD11\",\"nfr\":\"\\uD835\\uDD2B\",\"ngE\":\"\\u2267\\u0338\",\"nge\":\"\\u2271\",\"ngeq\":\"\\u2271\",\"ngeqq\":\"\\u2267\\u0338\",\"ngeqslant\":\"\\u2A7E\\u0338\",\"nges\":\"\\u2A7E\\u0338\",\"nGg\":\"\\u22D9\\u0338\",\"ngsim\":\"\\u2275\",\"nGt\":\"\\u226B\\u20D2\",\"ngt\":\"\\u226F\",\"ngtr\":\"\\u226F\",\"nGtv\":\"\\u226B\\u0338\",\"nharr\":\"\\u21AE\",\"nhArr\":\"\\u21CE\",\"nhpar\":\"\\u2AF2\",\"ni\":\"\\u220B\",\"nis\":\"\\u22FC\",\"nisd\":\"\\u22FA\",\"niv\":\"\\u220B\",\"NJcy\":\"\\u040A\",\"njcy\":\"\\u045A\",\"nlarr\":\"\\u219A\",\"nlArr\":\"\\u21CD\",\"nldr\":\"\\u2025\",\"nlE\":\"\\u2266\\u0338\",\"nle\":\"\\u2270\",\"nleftarrow\":\"\\u219A\",\"nLeftarrow\":\"\\u21CD\",\"nleftrightarrow\":\"\\u21AE\",\"nLeftrightarrow\":\"\\u21CE\",\"nleq\":\"\\u2270\",\"nleqq\":\"\\u2266\\u0338\",\"nleqslant\":\"\\u2A7D\\u0338\",\"nles\":\"\\u2A7D\\u0338\",\"nless\":\"\\u226E\",\"nLl\":\"\\u22D8\\u0338\",\"nlsim\":\"\\u2274\",\"nLt\":\"\\u226A\\u20D2\",\"nlt\":\"\\u226E\",\"nltri\":\"\\u22EA\",\"nltrie\":\"\\u22EC\",\"nLtv\":\"\\u226A\\u0338\",\"nmid\":\"\\u2224\",\"NoBreak\":\"\\u2060\",\"NonBreakingSpace\":\"\\u00A0\",\"nopf\":\"\\uD835\\uDD5F\",\"Nopf\":\"\\u2115\",\"Not\":\"\\u2AEC\",\"not\":\"\\u00AC\",\"NotCongruent\":\"\\u2262\",\"NotCupCap\":\"\\u226D\",\"NotDoubleVerticalBar\":\"\\u2226\",\"NotElement\":\"\\u2209\",\"NotEqual\":\"\\u2260\",\"NotEqualTilde\":\"\\u2242\\u0338\",\"NotExists\":\"\\u2204\",\"NotGreater\":\"\\u226F\",\"NotGreaterEqual\":\"\\u2271\",\"NotGreaterFullEqual\":\"\\u2267\\u0338\",\"NotGreaterGreater\":\"\\u226B\\u0338\",\"NotGreaterLess\":\"\\u2279\",\"NotGreaterSlantEqual\":\"\\u2A7E\\u0338\",\"NotGreaterTilde\":\"\\u2275\",\"NotHumpDownHump\":\"\\u224E\\u0338\",\"NotHumpEqual\":\"\\u224F\\u0338\",\"notin\":\"\\u2209\",\"notindot\":\"\\u22F5\\u0338\",\"notinE\":\"\\u22F9\\u0338\",\"notinva\":\"\\u2209\",\"notinvb\":\"\\u22F7\",\"notinvc\":\"\\u22F6\",\"NotLeftTriangleBar\":\"\\u29CF\\u0338\",\"NotLeftTriangle\":\"\\u22EA\",\"NotLeftTriangleEqual\":\"\\u22EC\",\"NotLess\":\"\\u226E\",\"NotLessEqual\":\"\\u2270\",\"NotLessGreater\":\"\\u2278\",\"NotLessLess\":\"\\u226A\\u0338\",\"NotLessSlantEqual\":\"\\u2A7D\\u0338\",\"NotLessTilde\":\"\\u2274\",\"NotNestedGreaterGreater\":\"\\u2AA2\\u0338\",\"NotNestedLessLess\":\"\\u2AA1\\u0338\",\"notni\":\"\\u220C\",\"notniva\":\"\\u220C\",\"notnivb\":\"\\u22FE\",\"notnivc\":\"\\u22FD\",\"NotPrecedes\":\"\\u2280\",\"NotPrecedesEqual\":\"\\u2AAF\\u0338\",\"NotPrecedesSlantEqual\":\"\\u22E0\",\"NotReverseElement\":\"\\u220C\",\"NotRightTriangleBar\":\"\\u29D0\\u0338\",\"NotRightTriangle\":\"\\u22EB\",\"NotRightTriangleEqual\":\"\\u22ED\",\"NotSquareSubset\":\"\\u228F\\u0338\",\"NotSquareSubsetEqual\":\"\\u22E2\",\"NotSquareSuperset\":\"\\u2290\\u0338\",\"NotSquareSupersetEqual\":\"\\u22E3\",\"NotSubset\":\"\\u2282\\u20D2\",\"NotSubsetEqual\":\"\\u2288\",\"NotSucceeds\":\"\\u2281\",\"NotSucceedsEqual\":\"\\u2AB0\\u0338\",\"NotSucceedsSlantEqual\":\"\\u22E1\",\"NotSucceedsTilde\":\"\\u227F\\u0338\",\"NotSuperset\":\"\\u2283\\u20D2\",\"NotSupersetEqual\":\"\\u2289\",\"NotTilde\":\"\\u2241\",\"NotTildeEqual\":\"\\u2244\",\"NotTildeFullEqual\":\"\\u2247\",\"NotTildeTilde\":\"\\u2249\",\"NotVerticalBar\":\"\\u2224\",\"nparallel\":\"\\u2226\",\"npar\":\"\\u2226\",\"nparsl\":\"\\u2AFD\\u20E5\",\"npart\":\"\\u2202\\u0338\",\"npolint\":\"\\u2A14\",\"npr\":\"\\u2280\",\"nprcue\":\"\\u22E0\",\"nprec\":\"\\u2280\",\"npreceq\":\"\\u2AAF\\u0338\",\"npre\":\"\\u2AAF\\u0338\",\"nrarrc\":\"\\u2933\\u0338\",\"nrarr\":\"\\u219B\",\"nrArr\":\"\\u21CF\",\"nrarrw\":\"\\u219D\\u0338\",\"nrightarrow\":\"\\u219B\",\"nRightarrow\":\"\\u21CF\",\"nrtri\":\"\\u22EB\",\"nrtrie\":\"\\u22ED\",\"nsc\":\"\\u2281\",\"nsccue\":\"\\u22E1\",\"nsce\":\"\\u2AB0\\u0338\",\"Nscr\":\"\\uD835\\uDCA9\",\"nscr\":\"\\uD835\\uDCC3\",\"nshortmid\":\"\\u2224\",\"nshortparallel\":\"\\u2226\",\"nsim\":\"\\u2241\",\"nsime\":\"\\u2244\",\"nsimeq\":\"\\u2244\",\"nsmid\":\"\\u2224\",\"nspar\":\"\\u2226\",\"nsqsube\":\"\\u22E2\",\"nsqsupe\":\"\\u22E3\",\"nsub\":\"\\u2284\",\"nsubE\":\"\\u2AC5\\u0338\",\"nsube\":\"\\u2288\",\"nsubset\":\"\\u2282\\u20D2\",\"nsubseteq\":\"\\u2288\",\"nsubseteqq\":\"\\u2AC5\\u0338\",\"nsucc\":\"\\u2281\",\"nsucceq\":\"\\u2AB0\\u0338\",\"nsup\":\"\\u2285\",\"nsupE\":\"\\u2AC6\\u0338\",\"nsupe\":\"\\u2289\",\"nsupset\":\"\\u2283\\u20D2\",\"nsupseteq\":\"\\u2289\",\"nsupseteqq\":\"\\u2AC6\\u0338\",\"ntgl\":\"\\u2279\",\"Ntilde\":\"\\u00D1\",\"ntilde\":\"\\u00F1\",\"ntlg\":\"\\u2278\",\"ntriangleleft\":\"\\u22EA\",\"ntrianglelefteq\":\"\\u22EC\",\"ntriangleright\":\"\\u22EB\",\"ntrianglerighteq\":\"\\u22ED\",\"Nu\":\"\\u039D\",\"nu\":\"\\u03BD\",\"num\":\"#\",\"numero\":\"\\u2116\",\"numsp\":\"\\u2007\",\"nvap\":\"\\u224D\\u20D2\",\"nvdash\":\"\\u22AC\",\"nvDash\":\"\\u22AD\",\"nVdash\":\"\\u22AE\",\"nVDash\":\"\\u22AF\",\"nvge\":\"\\u2265\\u20D2\",\"nvgt\":\">\\u20D2\",\"nvHarr\":\"\\u2904\",\"nvinfin\":\"\\u29DE\",\"nvlArr\":\"\\u2902\",\"nvle\":\"\\u2264\\u20D2\",\"nvlt\":\"<\\u20D2\",\"nvltrie\":\"\\u22B4\\u20D2\",\"nvrArr\":\"\\u2903\",\"nvrtrie\":\"\\u22B5\\u20D2\",\"nvsim\":\"\\u223C\\u20D2\",\"nwarhk\":\"\\u2923\",\"nwarr\":\"\\u2196\",\"nwArr\":\"\\u21D6\",\"nwarrow\":\"\\u2196\",\"nwnear\":\"\\u2927\",\"Oacute\":\"\\u00D3\",\"oacute\":\"\\u00F3\",\"oast\":\"\\u229B\",\"Ocirc\":\"\\u00D4\",\"ocirc\":\"\\u00F4\",\"ocir\":\"\\u229A\",\"Ocy\":\"\\u041E\",\"ocy\":\"\\u043E\",\"odash\":\"\\u229D\",\"Odblac\":\"\\u0150\",\"odblac\":\"\\u0151\",\"odiv\":\"\\u2A38\",\"odot\":\"\\u2299\",\"odsold\":\"\\u29BC\",\"OElig\":\"\\u0152\",\"oelig\":\"\\u0153\",\"ofcir\":\"\\u29BF\",\"Ofr\":\"\\uD835\\uDD12\",\"ofr\":\"\\uD835\\uDD2C\",\"ogon\":\"\\u02DB\",\"Ograve\":\"\\u00D2\",\"ograve\":\"\\u00F2\",\"ogt\":\"\\u29C1\",\"ohbar\":\"\\u29B5\",\"ohm\":\"\\u03A9\",\"oint\":\"\\u222E\",\"olarr\":\"\\u21BA\",\"olcir\":\"\\u29BE\",\"olcross\":\"\\u29BB\",\"oline\":\"\\u203E\",\"olt\":\"\\u29C0\",\"Omacr\":\"\\u014C\",\"omacr\":\"\\u014D\",\"Omega\":\"\\u03A9\",\"omega\":\"\\u03C9\",\"Omicron\":\"\\u039F\",\"omicron\":\"\\u03BF\",\"omid\":\"\\u29B6\",\"ominus\":\"\\u2296\",\"Oopf\":\"\\uD835\\uDD46\",\"oopf\":\"\\uD835\\uDD60\",\"opar\":\"\\u29B7\",\"OpenCurlyDoubleQuote\":\"\\u201C\",\"OpenCurlyQuote\":\"\\u2018\",\"operp\":\"\\u29B9\",\"oplus\":\"\\u2295\",\"orarr\":\"\\u21BB\",\"Or\":\"\\u2A54\",\"or\":\"\\u2228\",\"ord\":\"\\u2A5D\",\"order\":\"\\u2134\",\"orderof\":\"\\u2134\",\"ordf\":\"\\u00AA\",\"ordm\":\"\\u00BA\",\"origof\":\"\\u22B6\",\"oror\":\"\\u2A56\",\"orslope\":\"\\u2A57\",\"orv\":\"\\u2A5B\",\"oS\":\"\\u24C8\",\"Oscr\":\"\\uD835\\uDCAA\",\"oscr\":\"\\u2134\",\"Oslash\":\"\\u00D8\",\"oslash\":\"\\u00F8\",\"osol\":\"\\u2298\",\"Otilde\":\"\\u00D5\",\"otilde\":\"\\u00F5\",\"otimesas\":\"\\u2A36\",\"Otimes\":\"\\u2A37\",\"otimes\":\"\\u2297\",\"Ouml\":\"\\u00D6\",\"ouml\":\"\\u00F6\",\"ovbar\":\"\\u233D\",\"OverBar\":\"\\u203E\",\"OverBrace\":\"\\u23DE\",\"OverBracket\":\"\\u23B4\",\"OverParenthesis\":\"\\u23DC\",\"para\":\"\\u00B6\",\"parallel\":\"\\u2225\",\"par\":\"\\u2225\",\"parsim\":\"\\u2AF3\",\"parsl\":\"\\u2AFD\",\"part\":\"\\u2202\",\"PartialD\":\"\\u2202\",\"Pcy\":\"\\u041F\",\"pcy\":\"\\u043F\",\"percnt\":\"%\",\"period\":\".\",\"permil\":\"\\u2030\",\"perp\":\"\\u22A5\",\"pertenk\":\"\\u2031\",\"Pfr\":\"\\uD835\\uDD13\",\"pfr\":\"\\uD835\\uDD2D\",\"Phi\":\"\\u03A6\",\"phi\":\"\\u03C6\",\"phiv\":\"\\u03D5\",\"phmmat\":\"\\u2133\",\"phone\":\"\\u260E\",\"Pi\":\"\\u03A0\",\"pi\":\"\\u03C0\",\"pitchfork\":\"\\u22D4\",\"piv\":\"\\u03D6\",\"planck\":\"\\u210F\",\"planckh\":\"\\u210E\",\"plankv\":\"\\u210F\",\"plusacir\":\"\\u2A23\",\"plusb\":\"\\u229E\",\"pluscir\":\"\\u2A22\",\"plus\":\"+\",\"plusdo\":\"\\u2214\",\"plusdu\":\"\\u2A25\",\"pluse\":\"\\u2A72\",\"PlusMinus\":\"\\u00B1\",\"plusmn\":\"\\u00B1\",\"plussim\":\"\\u2A26\",\"plustwo\":\"\\u2A27\",\"pm\":\"\\u00B1\",\"Poincareplane\":\"\\u210C\",\"pointint\":\"\\u2A15\",\"popf\":\"\\uD835\\uDD61\",\"Popf\":\"\\u2119\",\"pound\":\"\\u00A3\",\"prap\":\"\\u2AB7\",\"Pr\":\"\\u2ABB\",\"pr\":\"\\u227A\",\"prcue\":\"\\u227C\",\"precapprox\":\"\\u2AB7\",\"prec\":\"\\u227A\",\"preccurlyeq\":\"\\u227C\",\"Precedes\":\"\\u227A\",\"PrecedesEqual\":\"\\u2AAF\",\"PrecedesSlantEqual\":\"\\u227C\",\"PrecedesTilde\":\"\\u227E\",\"preceq\":\"\\u2AAF\",\"precnapprox\":\"\\u2AB9\",\"precneqq\":\"\\u2AB5\",\"precnsim\":\"\\u22E8\",\"pre\":\"\\u2AAF\",\"prE\":\"\\u2AB3\",\"precsim\":\"\\u227E\",\"prime\":\"\\u2032\",\"Prime\":\"\\u2033\",\"primes\":\"\\u2119\",\"prnap\":\"\\u2AB9\",\"prnE\":\"\\u2AB5\",\"prnsim\":\"\\u22E8\",\"prod\":\"\\u220F\",\"Product\":\"\\u220F\",\"profalar\":\"\\u232E\",\"profline\":\"\\u2312\",\"profsurf\":\"\\u2313\",\"prop\":\"\\u221D\",\"Proportional\":\"\\u221D\",\"Proportion\":\"\\u2237\",\"propto\":\"\\u221D\",\"prsim\":\"\\u227E\",\"prurel\":\"\\u22B0\",\"Pscr\":\"\\uD835\\uDCAB\",\"pscr\":\"\\uD835\\uDCC5\",\"Psi\":\"\\u03A8\",\"psi\":\"\\u03C8\",\"puncsp\":\"\\u2008\",\"Qfr\":\"\\uD835\\uDD14\",\"qfr\":\"\\uD835\\uDD2E\",\"qint\":\"\\u2A0C\",\"qopf\":\"\\uD835\\uDD62\",\"Qopf\":\"\\u211A\",\"qprime\":\"\\u2057\",\"Qscr\":\"\\uD835\\uDCAC\",\"qscr\":\"\\uD835\\uDCC6\",\"quaternions\":\"\\u210D\",\"quatint\":\"\\u2A16\",\"quest\":\"?\",\"questeq\":\"\\u225F\",\"quot\":\"\\\"\",\"QUOT\":\"\\\"\",\"rAarr\":\"\\u21DB\",\"race\":\"\\u223D\\u0331\",\"Racute\":\"\\u0154\",\"racute\":\"\\u0155\",\"radic\":\"\\u221A\",\"raemptyv\":\"\\u29B3\",\"rang\":\"\\u27E9\",\"Rang\":\"\\u27EB\",\"rangd\":\"\\u2992\",\"range\":\"\\u29A5\",\"rangle\":\"\\u27E9\",\"raquo\":\"\\u00BB\",\"rarrap\":\"\\u2975\",\"rarrb\":\"\\u21E5\",\"rarrbfs\":\"\\u2920\",\"rarrc\":\"\\u2933\",\"rarr\":\"\\u2192\",\"Rarr\":\"\\u21A0\",\"rArr\":\"\\u21D2\",\"rarrfs\":\"\\u291E\",\"rarrhk\":\"\\u21AA\",\"rarrlp\":\"\\u21AC\",\"rarrpl\":\"\\u2945\",\"rarrsim\":\"\\u2974\",\"Rarrtl\":\"\\u2916\",\"rarrtl\":\"\\u21A3\",\"rarrw\":\"\\u219D\",\"ratail\":\"\\u291A\",\"rAtail\":\"\\u291C\",\"ratio\":\"\\u2236\",\"rationals\":\"\\u211A\",\"rbarr\":\"\\u290D\",\"rBarr\":\"\\u290F\",\"RBarr\":\"\\u2910\",\"rbbrk\":\"\\u2773\",\"rbrace\":\"}\",\"rbrack\":\"]\",\"rbrke\":\"\\u298C\",\"rbrksld\":\"\\u298E\",\"rbrkslu\":\"\\u2990\",\"Rcaron\":\"\\u0158\",\"rcaron\":\"\\u0159\",\"Rcedil\":\"\\u0156\",\"rcedil\":\"\\u0157\",\"rceil\":\"\\u2309\",\"rcub\":\"}\",\"Rcy\":\"\\u0420\",\"rcy\":\"\\u0440\",\"rdca\":\"\\u2937\",\"rdldhar\":\"\\u2969\",\"rdquo\":\"\\u201D\",\"rdquor\":\"\\u201D\",\"rdsh\":\"\\u21B3\",\"real\":\"\\u211C\",\"realine\":\"\\u211B\",\"realpart\":\"\\u211C\",\"reals\":\"\\u211D\",\"Re\":\"\\u211C\",\"rect\":\"\\u25AD\",\"reg\":\"\\u00AE\",\"REG\":\"\\u00AE\",\"ReverseElement\":\"\\u220B\",\"ReverseEquilibrium\":\"\\u21CB\",\"ReverseUpEquilibrium\":\"\\u296F\",\"rfisht\":\"\\u297D\",\"rfloor\":\"\\u230B\",\"rfr\":\"\\uD835\\uDD2F\",\"Rfr\":\"\\u211C\",\"rHar\":\"\\u2964\",\"rhard\":\"\\u21C1\",\"rharu\":\"\\u21C0\",\"rharul\":\"\\u296C\",\"Rho\":\"\\u03A1\",\"rho\":\"\\u03C1\",\"rhov\":\"\\u03F1\",\"RightAngleBracket\":\"\\u27E9\",\"RightArrowBar\":\"\\u21E5\",\"rightarrow\":\"\\u2192\",\"RightArrow\":\"\\u2192\",\"Rightarrow\":\"\\u21D2\",\"RightArrowLeftArrow\":\"\\u21C4\",\"rightarrowtail\":\"\\u21A3\",\"RightCeiling\":\"\\u2309\",\"RightDoubleBracket\":\"\\u27E7\",\"RightDownTeeVector\":\"\\u295D\",\"RightDownVectorBar\":\"\\u2955\",\"RightDownVector\":\"\\u21C2\",\"RightFloor\":\"\\u230B\",\"rightharpoondown\":\"\\u21C1\",\"rightharpoonup\":\"\\u21C0\",\"rightleftarrows\":\"\\u21C4\",\"rightleftharpoons\":\"\\u21CC\",\"rightrightarrows\":\"\\u21C9\",\"rightsquigarrow\":\"\\u219D\",\"RightTeeArrow\":\"\\u21A6\",\"RightTee\":\"\\u22A2\",\"RightTeeVector\":\"\\u295B\",\"rightthreetimes\":\"\\u22CC\",\"RightTriangleBar\":\"\\u29D0\",\"RightTriangle\":\"\\u22B3\",\"RightTriangleEqual\":\"\\u22B5\",\"RightUpDownVector\":\"\\u294F\",\"RightUpTeeVector\":\"\\u295C\",\"RightUpVectorBar\":\"\\u2954\",\"RightUpVector\":\"\\u21BE\",\"RightVectorBar\":\"\\u2953\",\"RightVector\":\"\\u21C0\",\"ring\":\"\\u02DA\",\"risingdotseq\":\"\\u2253\",\"rlarr\":\"\\u21C4\",\"rlhar\":\"\\u21CC\",\"rlm\":\"\\u200F\",\"rmoustache\":\"\\u23B1\",\"rmoust\":\"\\u23B1\",\"rnmid\":\"\\u2AEE\",\"roang\":\"\\u27ED\",\"roarr\":\"\\u21FE\",\"robrk\":\"\\u27E7\",\"ropar\":\"\\u2986\",\"ropf\":\"\\uD835\\uDD63\",\"Ropf\":\"\\u211D\",\"roplus\":\"\\u2A2E\",\"rotimes\":\"\\u2A35\",\"RoundImplies\":\"\\u2970\",\"rpar\":\")\",\"rpargt\":\"\\u2994\",\"rppolint\":\"\\u2A12\",\"rrarr\":\"\\u21C9\",\"Rrightarrow\":\"\\u21DB\",\"rsaquo\":\"\\u203A\",\"rscr\":\"\\uD835\\uDCC7\",\"Rscr\":\"\\u211B\",\"rsh\":\"\\u21B1\",\"Rsh\":\"\\u21B1\",\"rsqb\":\"]\",\"rsquo\":\"\\u2019\",\"rsquor\":\"\\u2019\",\"rthree\":\"\\u22CC\",\"rtimes\":\"\\u22CA\",\"rtri\":\"\\u25B9\",\"rtrie\":\"\\u22B5\",\"rtrif\":\"\\u25B8\",\"rtriltri\":\"\\u29CE\",\"RuleDelayed\":\"\\u29F4\",\"ruluhar\":\"\\u2968\",\"rx\":\"\\u211E\",\"Sacute\":\"\\u015A\",\"sacute\":\"\\u015B\",\"sbquo\":\"\\u201A\",\"scap\":\"\\u2AB8\",\"Scaron\":\"\\u0160\",\"scaron\":\"\\u0161\",\"Sc\":\"\\u2ABC\",\"sc\":\"\\u227B\",\"sccue\":\"\\u227D\",\"sce\":\"\\u2AB0\",\"scE\":\"\\u2AB4\",\"Scedil\":\"\\u015E\",\"scedil\":\"\\u015F\",\"Scirc\":\"\\u015C\",\"scirc\":\"\\u015D\",\"scnap\":\"\\u2ABA\",\"scnE\":\"\\u2AB6\",\"scnsim\":\"\\u22E9\",\"scpolint\":\"\\u2A13\",\"scsim\":\"\\u227F\",\"Scy\":\"\\u0421\",\"scy\":\"\\u0441\",\"sdotb\":\"\\u22A1\",\"sdot\":\"\\u22C5\",\"sdote\":\"\\u2A66\",\"searhk\":\"\\u2925\",\"searr\":\"\\u2198\",\"seArr\":\"\\u21D8\",\"searrow\":\"\\u2198\",\"sect\":\"\\u00A7\",\"semi\":\";\",\"seswar\":\"\\u2929\",\"setminus\":\"\\u2216\",\"setmn\":\"\\u2216\",\"sext\":\"\\u2736\",\"Sfr\":\"\\uD835\\uDD16\",\"sfr\":\"\\uD835\\uDD30\",\"sfrown\":\"\\u2322\",\"sharp\":\"\\u266F\",\"SHCHcy\":\"\\u0429\",\"shchcy\":\"\\u0449\",\"SHcy\":\"\\u0428\",\"shcy\":\"\\u0448\",\"ShortDownArrow\":\"\\u2193\",\"ShortLeftArrow\":\"\\u2190\",\"shortmid\":\"\\u2223\",\"shortparallel\":\"\\u2225\",\"ShortRightArrow\":\"\\u2192\",\"ShortUpArrow\":\"\\u2191\",\"shy\":\"\\u00AD\",\"Sigma\":\"\\u03A3\",\"sigma\":\"\\u03C3\",\"sigmaf\":\"\\u03C2\",\"sigmav\":\"\\u03C2\",\"sim\":\"\\u223C\",\"simdot\":\"\\u2A6A\",\"sime\":\"\\u2243\",\"simeq\":\"\\u2243\",\"simg\":\"\\u2A9E\",\"simgE\":\"\\u2AA0\",\"siml\":\"\\u2A9D\",\"simlE\":\"\\u2A9F\",\"simne\":\"\\u2246\",\"simplus\":\"\\u2A24\",\"simrarr\":\"\\u2972\",\"slarr\":\"\\u2190\",\"SmallCircle\":\"\\u2218\",\"smallsetminus\":\"\\u2216\",\"smashp\":\"\\u2A33\",\"smeparsl\":\"\\u29E4\",\"smid\":\"\\u2223\",\"smile\":\"\\u2323\",\"smt\":\"\\u2AAA\",\"smte\":\"\\u2AAC\",\"smtes\":\"\\u2AAC\\uFE00\",\"SOFTcy\":\"\\u042C\",\"softcy\":\"\\u044C\",\"solbar\":\"\\u233F\",\"solb\":\"\\u29C4\",\"sol\":\"/\",\"Sopf\":\"\\uD835\\uDD4A\",\"sopf\":\"\\uD835\\uDD64\",\"spades\":\"\\u2660\",\"spadesuit\":\"\\u2660\",\"spar\":\"\\u2225\",\"sqcap\":\"\\u2293\",\"sqcaps\":\"\\u2293\\uFE00\",\"sqcup\":\"\\u2294\",\"sqcups\":\"\\u2294\\uFE00\",\"Sqrt\":\"\\u221A\",\"sqsub\":\"\\u228F\",\"sqsube\":\"\\u2291\",\"sqsubset\":\"\\u228F\",\"sqsubseteq\":\"\\u2291\",\"sqsup\":\"\\u2290\",\"sqsupe\":\"\\u2292\",\"sqsupset\":\"\\u2290\",\"sqsupseteq\":\"\\u2292\",\"square\":\"\\u25A1\",\"Square\":\"\\u25A1\",\"SquareIntersection\":\"\\u2293\",\"SquareSubset\":\"\\u228F\",\"SquareSubsetEqual\":\"\\u2291\",\"SquareSuperset\":\"\\u2290\",\"SquareSupersetEqual\":\"\\u2292\",\"SquareUnion\":\"\\u2294\",\"squarf\":\"\\u25AA\",\"squ\":\"\\u25A1\",\"squf\":\"\\u25AA\",\"srarr\":\"\\u2192\",\"Sscr\":\"\\uD835\\uDCAE\",\"sscr\":\"\\uD835\\uDCC8\",\"ssetmn\":\"\\u2216\",\"ssmile\":\"\\u2323\",\"sstarf\":\"\\u22C6\",\"Star\":\"\\u22C6\",\"star\":\"\\u2606\",\"starf\":\"\\u2605\",\"straightepsilon\":\"\\u03F5\",\"straightphi\":\"\\u03D5\",\"strns\":\"\\u00AF\",\"sub\":\"\\u2282\",\"Sub\":\"\\u22D0\",\"subdot\":\"\\u2ABD\",\"subE\":\"\\u2AC5\",\"sube\":\"\\u2286\",\"subedot\":\"\\u2AC3\",\"submult\":\"\\u2AC1\",\"subnE\":\"\\u2ACB\",\"subne\":\"\\u228A\",\"subplus\":\"\\u2ABF\",\"subrarr\":\"\\u2979\",\"subset\":\"\\u2282\",\"Subset\":\"\\u22D0\",\"subseteq\":\"\\u2286\",\"subseteqq\":\"\\u2AC5\",\"SubsetEqual\":\"\\u2286\",\"subsetneq\":\"\\u228A\",\"subsetneqq\":\"\\u2ACB\",\"subsim\":\"\\u2AC7\",\"subsub\":\"\\u2AD5\",\"subsup\":\"\\u2AD3\",\"succapprox\":\"\\u2AB8\",\"succ\":\"\\u227B\",\"succcurlyeq\":\"\\u227D\",\"Succeeds\":\"\\u227B\",\"SucceedsEqual\":\"\\u2AB0\",\"SucceedsSlantEqual\":\"\\u227D\",\"SucceedsTilde\":\"\\u227F\",\"succeq\":\"\\u2AB0\",\"succnapprox\":\"\\u2ABA\",\"succneqq\":\"\\u2AB6\",\"succnsim\":\"\\u22E9\",\"succsim\":\"\\u227F\",\"SuchThat\":\"\\u220B\",\"sum\":\"\\u2211\",\"Sum\":\"\\u2211\",\"sung\":\"\\u266A\",\"sup1\":\"\\u00B9\",\"sup2\":\"\\u00B2\",\"sup3\":\"\\u00B3\",\"sup\":\"\\u2283\",\"Sup\":\"\\u22D1\",\"supdot\":\"\\u2ABE\",\"supdsub\":\"\\u2AD8\",\"supE\":\"\\u2AC6\",\"supe\":\"\\u2287\",\"supedot\":\"\\u2AC4\",\"Superset\":\"\\u2283\",\"SupersetEqual\":\"\\u2287\",\"suphsol\":\"\\u27C9\",\"suphsub\":\"\\u2AD7\",\"suplarr\":\"\\u297B\",\"supmult\":\"\\u2AC2\",\"supnE\":\"\\u2ACC\",\"supne\":\"\\u228B\",\"supplus\":\"\\u2AC0\",\"supset\":\"\\u2283\",\"Supset\":\"\\u22D1\",\"supseteq\":\"\\u2287\",\"supseteqq\":\"\\u2AC6\",\"supsetneq\":\"\\u228B\",\"supsetneqq\":\"\\u2ACC\",\"supsim\":\"\\u2AC8\",\"supsub\":\"\\u2AD4\",\"supsup\":\"\\u2AD6\",\"swarhk\":\"\\u2926\",\"swarr\":\"\\u2199\",\"swArr\":\"\\u21D9\",\"swarrow\":\"\\u2199\",\"swnwar\":\"\\u292A\",\"szlig\":\"\\u00DF\",\"Tab\":\"\\t\",\"target\":\"\\u2316\",\"Tau\":\"\\u03A4\",\"tau\":\"\\u03C4\",\"tbrk\":\"\\u23B4\",\"Tcaron\":\"\\u0164\",\"tcaron\":\"\\u0165\",\"Tcedil\":\"\\u0162\",\"tcedil\":\"\\u0163\",\"Tcy\":\"\\u0422\",\"tcy\":\"\\u0442\",\"tdot\":\"\\u20DB\",\"telrec\":\"\\u2315\",\"Tfr\":\"\\uD835\\uDD17\",\"tfr\":\"\\uD835\\uDD31\",\"there4\":\"\\u2234\",\"therefore\":\"\\u2234\",\"Therefore\":\"\\u2234\",\"Theta\":\"\\u0398\",\"theta\":\"\\u03B8\",\"thetasym\":\"\\u03D1\",\"thetav\":\"\\u03D1\",\"thickapprox\":\"\\u2248\",\"thicksim\":\"\\u223C\",\"ThickSpace\":\"\\u205F\\u200A\",\"ThinSpace\":\"\\u2009\",\"thinsp\":\"\\u2009\",\"thkap\":\"\\u2248\",\"thksim\":\"\\u223C\",\"THORN\":\"\\u00DE\",\"thorn\":\"\\u00FE\",\"tilde\":\"\\u02DC\",\"Tilde\":\"\\u223C\",\"TildeEqual\":\"\\u2243\",\"TildeFullEqual\":\"\\u2245\",\"TildeTilde\":\"\\u2248\",\"timesbar\":\"\\u2A31\",\"timesb\":\"\\u22A0\",\"times\":\"\\u00D7\",\"timesd\":\"\\u2A30\",\"tint\":\"\\u222D\",\"toea\":\"\\u2928\",\"topbot\":\"\\u2336\",\"topcir\":\"\\u2AF1\",\"top\":\"\\u22A4\",\"Topf\":\"\\uD835\\uDD4B\",\"topf\":\"\\uD835\\uDD65\",\"topfork\":\"\\u2ADA\",\"tosa\":\"\\u2929\",\"tprime\":\"\\u2034\",\"trade\":\"\\u2122\",\"TRADE\":\"\\u2122\",\"triangle\":\"\\u25B5\",\"triangledown\":\"\\u25BF\",\"triangleleft\":\"\\u25C3\",\"trianglelefteq\":\"\\u22B4\",\"triangleq\":\"\\u225C\",\"triangleright\":\"\\u25B9\",\"trianglerighteq\":\"\\u22B5\",\"tridot\":\"\\u25EC\",\"trie\":\"\\u225C\",\"triminus\":\"\\u2A3A\",\"TripleDot\":\"\\u20DB\",\"triplus\":\"\\u2A39\",\"trisb\":\"\\u29CD\",\"tritime\":\"\\u2A3B\",\"trpezium\":\"\\u23E2\",\"Tscr\":\"\\uD835\\uDCAF\",\"tscr\":\"\\uD835\\uDCC9\",\"TScy\":\"\\u0426\",\"tscy\":\"\\u0446\",\"TSHcy\":\"\\u040B\",\"tshcy\":\"\\u045B\",\"Tstrok\":\"\\u0166\",\"tstrok\":\"\\u0167\",\"twixt\":\"\\u226C\",\"twoheadleftarrow\":\"\\u219E\",\"twoheadrightarrow\":\"\\u21A0\",\"Uacute\":\"\\u00DA\",\"uacute\":\"\\u00FA\",\"uarr\":\"\\u2191\",\"Uarr\":\"\\u219F\",\"uArr\":\"\\u21D1\",\"Uarrocir\":\"\\u2949\",\"Ubrcy\":\"\\u040E\",\"ubrcy\":\"\\u045E\",\"Ubreve\":\"\\u016C\",\"ubreve\":\"\\u016D\",\"Ucirc\":\"\\u00DB\",\"ucirc\":\"\\u00FB\",\"Ucy\":\"\\u0423\",\"ucy\":\"\\u0443\",\"udarr\":\"\\u21C5\",\"Udblac\":\"\\u0170\",\"udblac\":\"\\u0171\",\"udhar\":\"\\u296E\",\"ufisht\":\"\\u297E\",\"Ufr\":\"\\uD835\\uDD18\",\"ufr\":\"\\uD835\\uDD32\",\"Ugrave\":\"\\u00D9\",\"ugrave\":\"\\u00F9\",\"uHar\":\"\\u2963\",\"uharl\":\"\\u21BF\",\"uharr\":\"\\u21BE\",\"uhblk\":\"\\u2580\",\"ulcorn\":\"\\u231C\",\"ulcorner\":\"\\u231C\",\"ulcrop\":\"\\u230F\",\"ultri\":\"\\u25F8\",\"Umacr\":\"\\u016A\",\"umacr\":\"\\u016B\",\"uml\":\"\\u00A8\",\"UnderBar\":\"_\",\"UnderBrace\":\"\\u23DF\",\"UnderBracket\":\"\\u23B5\",\"UnderParenthesis\":\"\\u23DD\",\"Union\":\"\\u22C3\",\"UnionPlus\":\"\\u228E\",\"Uogon\":\"\\u0172\",\"uogon\":\"\\u0173\",\"Uopf\":\"\\uD835\\uDD4C\",\"uopf\":\"\\uD835\\uDD66\",\"UpArrowBar\":\"\\u2912\",\"uparrow\":\"\\u2191\",\"UpArrow\":\"\\u2191\",\"Uparrow\":\"\\u21D1\",\"UpArrowDownArrow\":\"\\u21C5\",\"updownarrow\":\"\\u2195\",\"UpDownArrow\":\"\\u2195\",\"Updownarrow\":\"\\u21D5\",\"UpEquilibrium\":\"\\u296E\",\"upharpoonleft\":\"\\u21BF\",\"upharpoonright\":\"\\u21BE\",\"uplus\":\"\\u228E\",\"UpperLeftArrow\":\"\\u2196\",\"UpperRightArrow\":\"\\u2197\",\"upsi\":\"\\u03C5\",\"Upsi\":\"\\u03D2\",\"upsih\":\"\\u03D2\",\"Upsilon\":\"\\u03A5\",\"upsilon\":\"\\u03C5\",\"UpTeeArrow\":\"\\u21A5\",\"UpTee\":\"\\u22A5\",\"upuparrows\":\"\\u21C8\",\"urcorn\":\"\\u231D\",\"urcorner\":\"\\u231D\",\"urcrop\":\"\\u230E\",\"Uring\":\"\\u016E\",\"uring\":\"\\u016F\",\"urtri\":\"\\u25F9\",\"Uscr\":\"\\uD835\\uDCB0\",\"uscr\":\"\\uD835\\uDCCA\",\"utdot\":\"\\u22F0\",\"Utilde\":\"\\u0168\",\"utilde\":\"\\u0169\",\"utri\":\"\\u25B5\",\"utrif\":\"\\u25B4\",\"uuarr\":\"\\u21C8\",\"Uuml\":\"\\u00DC\",\"uuml\":\"\\u00FC\",\"uwangle\":\"\\u29A7\",\"vangrt\":\"\\u299C\",\"varepsilon\":\"\\u03F5\",\"varkappa\":\"\\u03F0\",\"varnothing\":\"\\u2205\",\"varphi\":\"\\u03D5\",\"varpi\":\"\\u03D6\",\"varpropto\":\"\\u221D\",\"varr\":\"\\u2195\",\"vArr\":\"\\u21D5\",\"varrho\":\"\\u03F1\",\"varsigma\":\"\\u03C2\",\"varsubsetneq\":\"\\u228A\\uFE00\",\"varsubsetneqq\":\"\\u2ACB\\uFE00\",\"varsupsetneq\":\"\\u228B\\uFE00\",\"varsupsetneqq\":\"\\u2ACC\\uFE00\",\"vartheta\":\"\\u03D1\",\"vartriangleleft\":\"\\u22B2\",\"vartriangleright\":\"\\u22B3\",\"vBar\":\"\\u2AE8\",\"Vbar\":\"\\u2AEB\",\"vBarv\":\"\\u2AE9\",\"Vcy\":\"\\u0412\",\"vcy\":\"\\u0432\",\"vdash\":\"\\u22A2\",\"vDash\":\"\\u22A8\",\"Vdash\":\"\\u22A9\",\"VDash\":\"\\u22AB\",\"Vdashl\":\"\\u2AE6\",\"veebar\":\"\\u22BB\",\"vee\":\"\\u2228\",\"Vee\":\"\\u22C1\",\"veeeq\":\"\\u225A\",\"vellip\":\"\\u22EE\",\"verbar\":\"|\",\"Verbar\":\"\\u2016\",\"vert\":\"|\",\"Vert\":\"\\u2016\",\"VerticalBar\":\"\\u2223\",\"VerticalLine\":\"|\",\"VerticalSeparator\":\"\\u2758\",\"VerticalTilde\":\"\\u2240\",\"VeryThinSpace\":\"\\u200A\",\"Vfr\":\"\\uD835\\uDD19\",\"vfr\":\"\\uD835\\uDD33\",\"vltri\":\"\\u22B2\",\"vnsub\":\"\\u2282\\u20D2\",\"vnsup\":\"\\u2283\\u20D2\",\"Vopf\":\"\\uD835\\uDD4D\",\"vopf\":\"\\uD835\\uDD67\",\"vprop\":\"\\u221D\",\"vrtri\":\"\\u22B3\",\"Vscr\":\"\\uD835\\uDCB1\",\"vscr\":\"\\uD835\\uDCCB\",\"vsubnE\":\"\\u2ACB\\uFE00\",\"vsubne\":\"\\u228A\\uFE00\",\"vsupnE\":\"\\u2ACC\\uFE00\",\"vsupne\":\"\\u228B\\uFE00\",\"Vvdash\":\"\\u22AA\",\"vzigzag\":\"\\u299A\",\"Wcirc\":\"\\u0174\",\"wcirc\":\"\\u0175\",\"wedbar\":\"\\u2A5F\",\"wedge\":\"\\u2227\",\"Wedge\":\"\\u22C0\",\"wedgeq\":\"\\u2259\",\"weierp\":\"\\u2118\",\"Wfr\":\"\\uD835\\uDD1A\",\"wfr\":\"\\uD835\\uDD34\",\"Wopf\":\"\\uD835\\uDD4E\",\"wopf\":\"\\uD835\\uDD68\",\"wp\":\"\\u2118\",\"wr\":\"\\u2240\",\"wreath\":\"\\u2240\",\"Wscr\":\"\\uD835\\uDCB2\",\"wscr\":\"\\uD835\\uDCCC\",\"xcap\":\"\\u22C2\",\"xcirc\":\"\\u25EF\",\"xcup\":\"\\u22C3\",\"xdtri\":\"\\u25BD\",\"Xfr\":\"\\uD835\\uDD1B\",\"xfr\":\"\\uD835\\uDD35\",\"xharr\":\"\\u27F7\",\"xhArr\":\"\\u27FA\",\"Xi\":\"\\u039E\",\"xi\":\"\\u03BE\",\"xlarr\":\"\\u27F5\",\"xlArr\":\"\\u27F8\",\"xmap\":\"\\u27FC\",\"xnis\":\"\\u22FB\",\"xodot\":\"\\u2A00\",\"Xopf\":\"\\uD835\\uDD4F\",\"xopf\":\"\\uD835\\uDD69\",\"xoplus\":\"\\u2A01\",\"xotime\":\"\\u2A02\",\"xrarr\":\"\\u27F6\",\"xrArr\":\"\\u27F9\",\"Xscr\":\"\\uD835\\uDCB3\",\"xscr\":\"\\uD835\\uDCCD\",\"xsqcup\":\"\\u2A06\",\"xuplus\":\"\\u2A04\",\"xutri\":\"\\u25B3\",\"xvee\":\"\\u22C1\",\"xwedge\":\"\\u22C0\",\"Yacute\":\"\\u00DD\",\"yacute\":\"\\u00FD\",\"YAcy\":\"\\u042F\",\"yacy\":\"\\u044F\",\"Ycirc\":\"\\u0176\",\"ycirc\":\"\\u0177\",\"Ycy\":\"\\u042B\",\"ycy\":\"\\u044B\",\"yen\":\"\\u00A5\",\"Yfr\":\"\\uD835\\uDD1C\",\"yfr\":\"\\uD835\\uDD36\",\"YIcy\":\"\\u0407\",\"yicy\":\"\\u0457\",\"Yopf\":\"\\uD835\\uDD50\",\"yopf\":\"\\uD835\\uDD6A\",\"Yscr\":\"\\uD835\\uDCB4\",\"yscr\":\"\\uD835\\uDCCE\",\"YUcy\":\"\\u042E\",\"yucy\":\"\\u044E\",\"yuml\":\"\\u00FF\",\"Yuml\":\"\\u0178\",\"Zacute\":\"\\u0179\",\"zacute\":\"\\u017A\",\"Zcaron\":\"\\u017D\",\"zcaron\":\"\\u017E\",\"Zcy\":\"\\u0417\",\"zcy\":\"\\u0437\",\"Zdot\":\"\\u017B\",\"zdot\":\"\\u017C\",\"zeetrf\":\"\\u2128\",\"ZeroWidthSpace\":\"\\u200B\",\"Zeta\":\"\\u0396\",\"zeta\":\"\\u03B6\",\"zfr\":\"\\uD835\\uDD37\",\"Zfr\":\"\\u2128\",\"ZHcy\":\"\\u0416\",\"zhcy\":\"\\u0436\",\"zigrarr\":\"\\u21DD\",\"zopf\":\"\\uD835\\uDD6B\",\"Zopf\":\"\\u2124\",\"Zscr\":\"\\uD835\\uDCB5\",\"zscr\":\"\\uD835\\uDCCF\",\"zwj\":\"\\u200D\",\"zwnj\":\"\\u200C\"}\n},{}],10:[function(require,module,exports){\nmodule.exports={\"Aacute\":\"\\u00C1\",\"aacute\":\"\\u00E1\",\"Acirc\":\"\\u00C2\",\"acirc\":\"\\u00E2\",\"acute\":\"\\u00B4\",\"AElig\":\"\\u00C6\",\"aelig\":\"\\u00E6\",\"Agrave\":\"\\u00C0\",\"agrave\":\"\\u00E0\",\"amp\":\"&\",\"AMP\":\"&\",\"Aring\":\"\\u00C5\",\"aring\":\"\\u00E5\",\"Atilde\":\"\\u00C3\",\"atilde\":\"\\u00E3\",\"Auml\":\"\\u00C4\",\"auml\":\"\\u00E4\",\"brvbar\":\"\\u00A6\",\"Ccedil\":\"\\u00C7\",\"ccedil\":\"\\u00E7\",\"cedil\":\"\\u00B8\",\"cent\":\"\\u00A2\",\"copy\":\"\\u00A9\",\"COPY\":\"\\u00A9\",\"curren\":\"\\u00A4\",\"deg\":\"\\u00B0\",\"divide\":\"\\u00F7\",\"Eacute\":\"\\u00C9\",\"eacute\":\"\\u00E9\",\"Ecirc\":\"\\u00CA\",\"ecirc\":\"\\u00EA\",\"Egrave\":\"\\u00C8\",\"egrave\":\"\\u00E8\",\"ETH\":\"\\u00D0\",\"eth\":\"\\u00F0\",\"Euml\":\"\\u00CB\",\"euml\":\"\\u00EB\",\"frac12\":\"\\u00BD\",\"frac14\":\"\\u00BC\",\"frac34\":\"\\u00BE\",\"gt\":\">\",\"GT\":\">\",\"Iacute\":\"\\u00CD\",\"iacute\":\"\\u00ED\",\"Icirc\":\"\\u00CE\",\"icirc\":\"\\u00EE\",\"iexcl\":\"\\u00A1\",\"Igrave\":\"\\u00CC\",\"igrave\":\"\\u00EC\",\"iquest\":\"\\u00BF\",\"Iuml\":\"\\u00CF\",\"iuml\":\"\\u00EF\",\"laquo\":\"\\u00AB\",\"lt\":\"<\",\"LT\":\"<\",\"macr\":\"\\u00AF\",\"micro\":\"\\u00B5\",\"middot\":\"\\u00B7\",\"nbsp\":\"\\u00A0\",\"not\":\"\\u00AC\",\"Ntilde\":\"\\u00D1\",\"ntilde\":\"\\u00F1\",\"Oacute\":\"\\u00D3\",\"oacute\":\"\\u00F3\",\"Ocirc\":\"\\u00D4\",\"ocirc\":\"\\u00F4\",\"Ograve\":\"\\u00D2\",\"ograve\":\"\\u00F2\",\"ordf\":\"\\u00AA\",\"ordm\":\"\\u00BA\",\"Oslash\":\"\\u00D8\",\"oslash\":\"\\u00F8\",\"Otilde\":\"\\u00D5\",\"otilde\":\"\\u00F5\",\"Ouml\":\"\\u00D6\",\"ouml\":\"\\u00F6\",\"para\":\"\\u00B6\",\"plusmn\":\"\\u00B1\",\"pound\":\"\\u00A3\",\"quot\":\"\\\"\",\"QUOT\":\"\\\"\",\"raquo\":\"\\u00BB\",\"reg\":\"\\u00AE\",\"REG\":\"\\u00AE\",\"sect\":\"\\u00A7\",\"shy\":\"\\u00AD\",\"sup1\":\"\\u00B9\",\"sup2\":\"\\u00B2\",\"sup3\":\"\\u00B3\",\"szlig\":\"\\u00DF\",\"THORN\":\"\\u00DE\",\"thorn\":\"\\u00FE\",\"times\":\"\\u00D7\",\"Uacute\":\"\\u00DA\",\"uacute\":\"\\u00FA\",\"Ucirc\":\"\\u00DB\",\"ucirc\":\"\\u00FB\",\"Ugrave\":\"\\u00D9\",\"ugrave\":\"\\u00F9\",\"uml\":\"\\u00A8\",\"Uuml\":\"\\u00DC\",\"uuml\":\"\\u00FC\",\"Yacute\":\"\\u00DD\",\"yacute\":\"\\u00FD\",\"yen\":\"\\u00A5\",\"yuml\":\"\\u00FF\"}\n},{}],11:[function(require,module,exports){\nmodule.exports={\"amp\":\"&\",\"apos\":\"'\",\"gt\":\">\",\"lt\":\"<\",\"quot\":\"\\\"\"}\n\n},{}],12:[function(require,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n},{}],13:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    if (canPost) {\n        var queue = [];\n        window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n}\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n\n},{}],14:[function(require,module,exports){\nmodule.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n},{}],15:[function(require,module,exports){\n(function (process,global){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n}).call(this,require(\"JkpR2F\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./support/isBuffer\":14,\"JkpR2F\":13,\"inherits\":12}],16:[function(require,module,exports){\nmodule.exports = {\n  XmlEntities: require('./lib/xml-entities.js').XmlEntities,\n  Html4Entities: require('./lib/html4-entities.js').Html4Entities,\n  Html5Entities: require('./lib/html5-entities.js').Html5Entities,\n  AllHtmlEntities: require('./lib/html5-entities.js').Html5Entities\n};\n},{\"./lib/html4-entities.js\":17,\"./lib/html5-entities.js\":18,\"./lib/xml-entities.js\":19}],17:[function(require,module,exports){\n// Generated by CoffeeScript 1.7.1\n(function() {\n  var Html4Entities;\n\n  Html4Entities = (function() {\n    var a, alphaIndex, c, htmlAlpha, htmlCodes, i, l, numIndex;\n\n    function Html4Entities() {}\n\n    htmlAlpha = ['apos', 'nbsp', 'iexcl', 'cent', 'pound', 'curren', 'yen', 'brvbar', 'sect', 'uml', 'copy', 'ordf', 'laquo', 'not', 'shy', 'reg', 'macr', 'deg', 'plusmn', 'sup2', 'sup3', 'acute', 'micro', 'para', 'middot', 'cedil', 'sup1', 'ordm', 'raquo', 'frac14', 'frac12', 'frac34', 'iquest', 'Agrave', 'Aacute', 'Acirc', 'Atilde', 'Auml', 'Aring', 'Aelig', 'Ccedil', 'Egrave', 'Eacute', 'Ecirc', 'Euml', 'Igrave', 'Iacute', 'Icirc', 'Iuml', 'ETH', 'Ntilde', 'Ograve', 'Oacute', 'Ocirc', 'Otilde', 'Ouml', 'times', 'Oslash', 'Ugrave', 'Uacute', 'Ucirc', 'Uuml', 'Yacute', 'THORN', 'szlig', 'agrave', 'aacute', 'acirc', 'atilde', 'auml', 'aring', 'aelig', 'ccedil', 'egrave', 'eacute', 'ecirc', 'euml', 'igrave', 'iacute', 'icirc', 'iuml', 'eth', 'ntilde', 'ograve', 'oacute', 'ocirc', 'otilde', 'ouml', 'divide', 'Oslash', 'ugrave', 'uacute', 'ucirc', 'uuml', 'yacute', 'thorn', 'yuml', 'quot', 'amp', 'lt', 'gt', 'oelig', 'oelig', 'scaron', 'scaron', 'yuml', 'circ', 'tilde', 'ensp', 'emsp', 'thinsp', 'zwnj', 'zwj', 'lrm', 'rlm', 'ndash', 'mdash', 'lsquo', 'rsquo', 'sbquo', 'ldquo', 'rdquo', 'bdquo', 'dagger', 'dagger', 'permil', 'lsaquo', 'rsaquo', 'euro', 'fnof', 'alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta', 'eta', 'theta', 'iota', 'kappa', 'lambda', 'mu', 'nu', 'xi', 'omicron', 'pi', 'rho', 'sigma', 'tau', 'upsilon', 'phi', 'chi', 'psi', 'omega', 'alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta', 'eta', 'theta', 'iota', 'kappa', 'lambda', 'mu', 'nu', 'xi', 'omicron', 'pi', 'rho', 'sigmaf', 'sigma', 'tau', 'upsilon', 'phi', 'chi', 'psi', 'omega', 'thetasym', 'upsih', 'piv', 'bull', 'hellip', 'prime', 'prime', 'oline', 'frasl', 'weierp', 'image', 'real', 'trade', 'alefsym', 'larr', 'uarr', 'rarr', 'darr', 'harr', 'crarr', 'larr', 'uarr', 'rarr', 'darr', 'harr', 'forall', 'part', 'exist', 'empty', 'nabla', 'isin', 'notin', 'ni', 'prod', 'sum', 'minus', 'lowast', 'radic', 'prop', 'infin', 'ang', 'and', 'or', 'cap', 'cup', 'int', 'there4', 'sim', 'cong', 'asymp', 'ne', 'equiv', 'le', 'ge', 'sub', 'sup', 'nsub', 'sube', 'supe', 'oplus', 'otimes', 'perp', 'sdot', 'lceil', 'rceil', 'lfloor', 'rfloor', 'lang', 'rang', 'loz', 'spades', 'clubs', 'hearts', 'diams'];\n\n    htmlCodes = [39, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 34, 38, 60, 62, 338, 339, 352, 353, 376, 710, 732, 8194, 8195, 8201, 8204, 8205, 8206, 8207, 8211, 8212, 8216, 8217, 8218, 8220, 8221, 8222, 8224, 8225, 8240, 8249, 8250, 8364, 402, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 977, 978, 982, 8226, 8230, 8242, 8243, 8254, 8260, 8472, 8465, 8476, 8482, 8501, 8592, 8593, 8594, 8595, 8596, 8629, 8656, 8657, 8658, 8659, 8660, 8704, 8706, 8707, 8709, 8711, 8712, 8713, 8715, 8719, 8721, 8722, 8727, 8730, 8733, 8734, 8736, 8743, 8744, 8745, 8746, 8747, 8756, 8764, 8773, 8776, 8800, 8801, 8804, 8805, 8834, 8835, 8836, 8838, 8839, 8853, 8855, 8869, 8901, 8968, 8969, 8970, 8971, 9001, 9002, 9674, 9824, 9827, 9829, 9830];\n\n    alphaIndex = {};\n\n    numIndex = {};\n\n    i = 0;\n    l = htmlAlpha.length;\n\n    while (i < l) {\n      a = htmlAlpha[i];\n      c = htmlCodes[i];\n      alphaIndex[a] = String.fromCharCode(c);\n      numIndex[c] = a;\n      i++;\n    }\n\n    Html4Entities.prototype.decode = function(str) {\n      if (str.length === 0) {\n        return '';\n      }\n      return str.replace(/&(#?[\\w\\d]+);?/g, function(s, entity) {\n        var chr, code;\n        chr = '';\n        if (entity.charAt(0) === \"#\") {\n          if (entity.charAt(1).toLowerCase() === 'x') {\n            code = parseInt(entity.substr(2), 16);\n          } else {\n            code = parseInt(entity.substr(1));\n          }\n          if (isNaN(code) || code < -32768 || code > 65535) {\n            chr = '';\n          } else {\n            chr = String.fromCharCode(code);\n          }\n        } else {\n          chr = alphaIndex[entity];\n        }\n        if (chr === void 0) {\n          return s;\n        } else {\n          return chr;\n        }\n      });\n    };\n\n    Html4Entities.prototype.encode = function(str) {\n      var alpha, cc, index, result;\n      if (str.length === 0) {\n        return '';\n      }\n      result = '';\n      index = numIndex;\n      l = str.length;\n      i = 0;\n      while (i < l) {\n        cc = str.charCodeAt(i);\n        result += (alpha = index[cc]) ? \"&\" + alpha + \";\" : str.charAt(i);\n        i++;\n      }\n      return result;\n    };\n\n    Html4Entities.prototype.encodeNonUTF = function(str) {\n      var alpha, cc, index, result;\n      if (str.length === 0) {\n        return '';\n      }\n      result = '';\n      index = numIndex;\n      l = str.length;\n      i = 0;\n      while (i < l) {\n        cc = str.charCodeAt(i);\n        if (alpha = index[cc]) {\n          result += \"&\" + alpha + \";\";\n        } else if (cc < 32 || cc > 126) {\n          result += \"&#\" + cc + \";\";\n        } else {\n          result += str.charAt(i);\n        }\n        i++;\n      }\n      return result;\n    };\n\n    Html4Entities.prototype.encodeNonASCII = function(str) {\n      var result;\n      if (str.length === 0) {\n        return '';\n      }\n      result = '';\n      l = str.length;\n      i = 0;\n      while (i < l) {\n        c = str.charCodeAt(i);\n        if (c <= 255) {\n          result += str[i++];\n          continue;\n        }\n        result += '&#' + c + ';';\n        i++;\n      }\n      return result;\n    };\n\n    return Html4Entities;\n\n  })();\n\n  exports.Html4Entities = Html4Entities;\n\n}).call(this);\n\n},{}],18:[function(require,module,exports){\n// Generated by CoffeeScript 1.7.1\n(function() {\n  var Html5Entities;\n\n  Html5Entities = (function() {\n    var alphaIndex, charIndex, entities;\n\n    function Html5Entities() {}\n\n    entities = [['Aacute', [193]], ['aacute', [225]], ['Abreve', [258]], ['abreve', [259]], ['ac', [8766]], ['acd', [8767]], ['acE', [8766, 819]], ['Acirc', [194]], ['acirc', [226]], ['acute', [180]], ['Acy', [1040]], ['acy', [1072]], ['AElig', [198]], ['aelig', [230]], ['af', [8289]], ['Afr', [120068]], ['afr', [120094]], ['Agrave', [192]], ['agrave', [224]], ['alefsym', [8501]], ['aleph', [8501]], ['Alpha', [913]], ['alpha', [945]], ['Amacr', [256]], ['amacr', [257]], ['amalg', [10815]], ['amp', [38]], ['AMP', [38]], ['andand', [10837]], ['And', [10835]], ['and', [8743]], ['andd', [10844]], ['andslope', [10840]], ['andv', [10842]], ['ang', [8736]], ['ange', [10660]], ['angle', [8736]], ['angmsdaa', [10664]], ['angmsdab', [10665]], ['angmsdac', [10666]], ['angmsdad', [10667]], ['angmsdae', [10668]], ['angmsdaf', [10669]], ['angmsdag', [10670]], ['angmsdah', [10671]], ['angmsd', [8737]], ['angrt', [8735]], ['angrtvb', [8894]], ['angrtvbd', [10653]], ['angsph', [8738]], ['angst', [197]], ['angzarr', [9084]], ['Aogon', [260]], ['aogon', [261]], ['Aopf', [120120]], ['aopf', [120146]], ['apacir', [10863]], ['ap', [8776]], ['apE', [10864]], ['ape', [8778]], ['apid', [8779]], ['apos', [39]], ['ApplyFunction', [8289]], ['approx', [8776]], ['approxeq', [8778]], ['Aring', [197]], ['aring', [229]], ['Ascr', [119964]], ['ascr', [119990]], ['Assign', [8788]], ['ast', [42]], ['asymp', [8776]], ['asympeq', [8781]], ['Atilde', [195]], ['atilde', [227]], ['Auml', [196]], ['auml', [228]], ['awconint', [8755]], ['awint', [10769]], ['backcong', [8780]], ['backepsilon', [1014]], ['backprime', [8245]], ['backsim', [8765]], ['backsimeq', [8909]], ['Backslash', [8726]], ['Barv', [10983]], ['barvee', [8893]], ['barwed', [8965]], ['Barwed', [8966]], ['barwedge', [8965]], ['bbrk', [9141]], ['bbrktbrk', [9142]], ['bcong', [8780]], ['Bcy', [1041]], ['bcy', [1073]], ['bdquo', [8222]], ['becaus', [8757]], ['because', [8757]], ['Because', [8757]], ['bemptyv', [10672]], ['bepsi', [1014]], ['bernou', [8492]], ['Bernoullis', [8492]], ['Beta', [914]], ['beta', [946]], ['beth', [8502]], ['between', [8812]], ['Bfr', [120069]], ['bfr', [120095]], ['bigcap', [8898]], ['bigcirc', [9711]], ['bigcup', [8899]], ['bigodot', [10752]], ['bigoplus', [10753]], ['bigotimes', [10754]], ['bigsqcup', [10758]], ['bigstar', [9733]], ['bigtriangledown', [9661]], ['bigtriangleup', [9651]], ['biguplus', [10756]], ['bigvee', [8897]], ['bigwedge', [8896]], ['bkarow', [10509]], ['blacklozenge', [10731]], ['blacksquare', [9642]], ['blacktriangle', [9652]], ['blacktriangledown', [9662]], ['blacktriangleleft', [9666]], ['blacktriangleright', [9656]], ['blank', [9251]], ['blk12', [9618]], ['blk14', [9617]], ['blk34', [9619]], ['block', [9608]], ['bne', [61, 8421]], ['bnequiv', [8801, 8421]], ['bNot', [10989]], ['bnot', [8976]], ['Bopf', [120121]], ['bopf', [120147]], ['bot', [8869]], ['bottom', [8869]], ['bowtie', [8904]], ['boxbox', [10697]], ['boxdl', [9488]], ['boxdL', [9557]], ['boxDl', [9558]], ['boxDL', [9559]], ['boxdr', [9484]], ['boxdR', [9554]], ['boxDr', [9555]], ['boxDR', [9556]], ['boxh', [9472]], ['boxH', [9552]], ['boxhd', [9516]], ['boxHd', [9572]], ['boxhD', [9573]], ['boxHD', [9574]], ['boxhu', [9524]], ['boxHu', [9575]], ['boxhU', [9576]], ['boxHU', [9577]], ['boxminus', [8863]], ['boxplus', [8862]], ['boxtimes', [8864]], ['boxul', [9496]], ['boxuL', [9563]], ['boxUl', [9564]], ['boxUL', [9565]], ['boxur', [9492]], ['boxuR', [9560]], ['boxUr', [9561]], ['boxUR', [9562]], ['boxv', [9474]], ['boxV', [9553]], ['boxvh', [9532]], ['boxvH', [9578]], ['boxVh', [9579]], ['boxVH', [9580]], ['boxvl', [9508]], ['boxvL', [9569]], ['boxVl', [9570]], ['boxVL', [9571]], ['boxvr', [9500]], ['boxvR', [9566]], ['boxVr', [9567]], ['boxVR', [9568]], ['bprime', [8245]], ['breve', [728]], ['Breve', [728]], ['brvbar', [166]], ['bscr', [119991]], ['Bscr', [8492]], ['bsemi', [8271]], ['bsim', [8765]], ['bsime', [8909]], ['bsolb', [10693]], ['bsol', [92]], ['bsolhsub', [10184]], ['bull', [8226]], ['bullet', [8226]], ['bump', [8782]], ['bumpE', [10926]], ['bumpe', [8783]], ['Bumpeq', [8782]], ['bumpeq', [8783]], ['Cacute', [262]], ['cacute', [263]], ['capand', [10820]], ['capbrcup', [10825]], ['capcap', [10827]], ['cap', [8745]], ['Cap', [8914]], ['capcup', [10823]], ['capdot', [10816]], ['CapitalDifferentialD', [8517]], ['caps', [8745, 65024]], ['caret', [8257]], ['caron', [711]], ['Cayleys', [8493]], ['ccaps', [10829]], ['Ccaron', [268]], ['ccaron', [269]], ['Ccedil', [199]], ['ccedil', [231]], ['Ccirc', [264]], ['ccirc', [265]], ['Cconint', [8752]], ['ccups', [10828]], ['ccupssm', [10832]], ['Cdot', [266]], ['cdot', [267]], ['cedil', [184]], ['Cedilla', [184]], ['cemptyv', [10674]], ['cent', [162]], ['centerdot', [183]], ['CenterDot', [183]], ['cfr', [120096]], ['Cfr', [8493]], ['CHcy', [1063]], ['chcy', [1095]], ['check', [10003]], ['checkmark', [10003]], ['Chi', [935]], ['chi', [967]], ['circ', [710]], ['circeq', [8791]], ['circlearrowleft', [8634]], ['circlearrowright', [8635]], ['circledast', [8859]], ['circledcirc', [8858]], ['circleddash', [8861]], ['CircleDot', [8857]], ['circledR', [174]], ['circledS', [9416]], ['CircleMinus', [8854]], ['CirclePlus', [8853]], ['CircleTimes', [8855]], ['cir', [9675]], ['cirE', [10691]], ['cire', [8791]], ['cirfnint', [10768]], ['cirmid', [10991]], ['cirscir', [10690]], ['ClockwiseContourIntegral', [8754]], ['CloseCurlyDoubleQuote', [8221]], ['CloseCurlyQuote', [8217]], ['clubs', [9827]], ['clubsuit', [9827]], ['colon', [58]], ['Colon', [8759]], ['Colone', [10868]], ['colone', [8788]], ['coloneq', [8788]], ['comma', [44]], ['commat', [64]], ['comp', [8705]], ['compfn', [8728]], ['complement', [8705]], ['complexes', [8450]], ['cong', [8773]], ['congdot', [10861]], ['Congruent', [8801]], ['conint', [8750]], ['Conint', [8751]], ['ContourIntegral', [8750]], ['copf', [120148]], ['Copf', [8450]], ['coprod', [8720]], ['Coproduct', [8720]], ['copy', [169]], ['COPY', [169]], ['copysr', [8471]], ['CounterClockwiseContourIntegral', [8755]], ['crarr', [8629]], ['cross', [10007]], ['Cross', [10799]], ['Cscr', [119966]], ['cscr', [119992]], ['csub', [10959]], ['csube', [10961]], ['csup', [10960]], ['csupe', [10962]], ['ctdot', [8943]], ['cudarrl', [10552]], ['cudarrr', [10549]], ['cuepr', [8926]], ['cuesc', [8927]], ['cularr', [8630]], ['cularrp', [10557]], ['cupbrcap', [10824]], ['cupcap', [10822]], ['CupCap', [8781]], ['cup', [8746]], ['Cup', [8915]], ['cupcup', [10826]], ['cupdot', [8845]], ['cupor', [10821]], ['cups', [8746, 65024]], ['curarr', [8631]], ['curarrm', [10556]], ['curlyeqprec', [8926]], ['curlyeqsucc', [8927]], ['curlyvee', [8910]], ['curlywedge', [8911]], ['curren', [164]], ['curvearrowleft', [8630]], ['curvearrowright', [8631]], ['cuvee', [8910]], ['cuwed', [8911]], ['cwconint', [8754]], ['cwint', [8753]], ['cylcty', [9005]], ['dagger', [8224]], ['Dagger', [8225]], ['daleth', [8504]], ['darr', [8595]], ['Darr', [8609]], ['dArr', [8659]], ['dash', [8208]], ['Dashv', [10980]], ['dashv', [8867]], ['dbkarow', [10511]], ['dblac', [733]], ['Dcaron', [270]], ['dcaron', [271]], ['Dcy', [1044]], ['dcy', [1076]], ['ddagger', [8225]], ['ddarr', [8650]], ['DD', [8517]], ['dd', [8518]], ['DDotrahd', [10513]], ['ddotseq', [10871]], ['deg', [176]], ['Del', [8711]], ['Delta', [916]], ['delta', [948]], ['demptyv', [10673]], ['dfisht', [10623]], ['Dfr', [120071]], ['dfr', [120097]], ['dHar', [10597]], ['dharl', [8643]], ['dharr', [8642]], ['DiacriticalAcute', [180]], ['DiacriticalDot', [729]], ['DiacriticalDoubleAcute', [733]], ['DiacriticalGrave', [96]], ['DiacriticalTilde', [732]], ['diam', [8900]], ['diamond', [8900]], ['Diamond', [8900]], ['diamondsuit', [9830]], ['diams', [9830]], ['die', [168]], ['DifferentialD', [8518]], ['digamma', [989]], ['disin', [8946]], ['div', [247]], ['divide', [247]], ['divideontimes', [8903]], ['divonx', [8903]], ['DJcy', [1026]], ['djcy', [1106]], ['dlcorn', [8990]], ['dlcrop', [8973]], ['dollar', [36]], ['Dopf', [120123]], ['dopf', [120149]], ['Dot', [168]], ['dot', [729]], ['DotDot', [8412]], ['doteq', [8784]], ['doteqdot', [8785]], ['DotEqual', [8784]], ['dotminus', [8760]], ['dotplus', [8724]], ['dotsquare', [8865]], ['doublebarwedge', [8966]], ['DoubleContourIntegral', [8751]], ['DoubleDot', [168]], ['DoubleDownArrow', [8659]], ['DoubleLeftArrow', [8656]], ['DoubleLeftRightArrow', [8660]], ['DoubleLeftTee', [10980]], ['DoubleLongLeftArrow', [10232]], ['DoubleLongLeftRightArrow', [10234]], ['DoubleLongRightArrow', [10233]], ['DoubleRightArrow', [8658]], ['DoubleRightTee', [8872]], ['DoubleUpArrow', [8657]], ['DoubleUpDownArrow', [8661]], ['DoubleVerticalBar', [8741]], ['DownArrowBar', [10515]], ['downarrow', [8595]], ['DownArrow', [8595]], ['Downarrow', [8659]], ['DownArrowUpArrow', [8693]], ['DownBreve', [785]], ['downdownarrows', [8650]], ['downharpoonleft', [8643]], ['downharpoonright', [8642]], ['DownLeftRightVector', [10576]], ['DownLeftTeeVector', [10590]], ['DownLeftVectorBar', [10582]], ['DownLeftVector', [8637]], ['DownRightTeeVector', [10591]], ['DownRightVectorBar', [10583]], ['DownRightVector', [8641]], ['DownTeeArrow', [8615]], ['DownTee', [8868]], ['drbkarow', [10512]], ['drcorn', [8991]], ['drcrop', [8972]], ['Dscr', [119967]], ['dscr', [119993]], ['DScy', [1029]], ['dscy', [1109]], ['dsol', [10742]], ['Dstrok', [272]], ['dstrok', [273]], ['dtdot', [8945]], ['dtri', [9663]], ['dtrif', [9662]], ['duarr', [8693]], ['duhar', [10607]], ['dwangle', [10662]], ['DZcy', [1039]], ['dzcy', [1119]], ['dzigrarr', [10239]], ['Eacute', [201]], ['eacute', [233]], ['easter', [10862]], ['Ecaron', [282]], ['ecaron', [283]], ['Ecirc', [202]], ['ecirc', [234]], ['ecir', [8790]], ['ecolon', [8789]], ['Ecy', [1069]], ['ecy', [1101]], ['eDDot', [10871]], ['Edot', [278]], ['edot', [279]], ['eDot', [8785]], ['ee', [8519]], ['efDot', [8786]], ['Efr', [120072]], ['efr', [120098]], ['eg', [10906]], ['Egrave', [200]], ['egrave', [232]], ['egs', [10902]], ['egsdot', [10904]], ['el', [10905]], ['Element', [8712]], ['elinters', [9191]], ['ell', [8467]], ['els', [10901]], ['elsdot', [10903]], ['Emacr', [274]], ['emacr', [275]], ['empty', [8709]], ['emptyset', [8709]], ['EmptySmallSquare', [9723]], ['emptyv', [8709]], ['EmptyVerySmallSquare', [9643]], ['emsp13', [8196]], ['emsp14', [8197]], ['emsp', [8195]], ['ENG', [330]], ['eng', [331]], ['ensp', [8194]], ['Eogon', [280]], ['eogon', [281]], ['Eopf', [120124]], ['eopf', [120150]], ['epar', [8917]], ['eparsl', [10723]], ['eplus', [10865]], ['epsi', [949]], ['Epsilon', [917]], ['epsilon', [949]], ['epsiv', [1013]], ['eqcirc', [8790]], ['eqcolon', [8789]], ['eqsim', [8770]], ['eqslantgtr', [10902]], ['eqslantless', [10901]], ['Equal', [10869]], ['equals', [61]], ['EqualTilde', [8770]], ['equest', [8799]], ['Equilibrium', [8652]], ['equiv', [8801]], ['equivDD', [10872]], ['eqvparsl', [10725]], ['erarr', [10609]], ['erDot', [8787]], ['escr', [8495]], ['Escr', [8496]], ['esdot', [8784]], ['Esim', [10867]], ['esim', [8770]], ['Eta', [919]], ['eta', [951]], ['ETH', [208]], ['eth', [240]], ['Euml', [203]], ['euml', [235]], ['euro', [8364]], ['excl', [33]], ['exist', [8707]], ['Exists', [8707]], ['expectation', [8496]], ['exponentiale', [8519]], ['ExponentialE', [8519]], ['fallingdotseq', [8786]], ['Fcy', [1060]], ['fcy', [1092]], ['female', [9792]], ['ffilig', [64259]], ['fflig', [64256]], ['ffllig', [64260]], ['Ffr', [120073]], ['ffr', [120099]], ['filig', [64257]], ['FilledSmallSquare', [9724]], ['FilledVerySmallSquare', [9642]], ['fjlig', [102, 106]], ['flat', [9837]], ['fllig', [64258]], ['fltns', [9649]], ['fnof', [402]], ['Fopf', [120125]], ['fopf', [120151]], ['forall', [8704]], ['ForAll', [8704]], ['fork', [8916]], ['forkv', [10969]], ['Fouriertrf', [8497]], ['fpartint', [10765]], ['frac12', [189]], ['frac13', [8531]], ['frac14', [188]], ['frac15', [8533]], ['frac16', [8537]], ['frac18', [8539]], ['frac23', [8532]], ['frac25', [8534]], ['frac34', [190]], ['frac35', [8535]], ['frac38', [8540]], ['frac45', [8536]], ['frac56', [8538]], ['frac58', [8541]], ['frac78', [8542]], ['frasl', [8260]], ['frown', [8994]], ['fscr', [119995]], ['Fscr', [8497]], ['gacute', [501]], ['Gamma', [915]], ['gamma', [947]], ['Gammad', [988]], ['gammad', [989]], ['gap', [10886]], ['Gbreve', [286]], ['gbreve', [287]], ['Gcedil', [290]], ['Gcirc', [284]], ['gcirc', [285]], ['Gcy', [1043]], ['gcy', [1075]], ['Gdot', [288]], ['gdot', [289]], ['ge', [8805]], ['gE', [8807]], ['gEl', [10892]], ['gel', [8923]], ['geq', [8805]], ['geqq', [8807]], ['geqslant', [10878]], ['gescc', [10921]], ['ges', [10878]], ['gesdot', [10880]], ['gesdoto', [10882]], ['gesdotol', [10884]], ['gesl', [8923, 65024]], ['gesles', [10900]], ['Gfr', [120074]], ['gfr', [120100]], ['gg', [8811]], ['Gg', [8921]], ['ggg', [8921]], ['gimel', [8503]], ['GJcy', [1027]], ['gjcy', [1107]], ['gla', [10917]], ['gl', [8823]], ['glE', [10898]], ['glj', [10916]], ['gnap', [10890]], ['gnapprox', [10890]], ['gne', [10888]], ['gnE', [8809]], ['gneq', [10888]], ['gneqq', [8809]], ['gnsim', [8935]], ['Gopf', [120126]], ['gopf', [120152]], ['grave', [96]], ['GreaterEqual', [8805]], ['GreaterEqualLess', [8923]], ['GreaterFullEqual', [8807]], ['GreaterGreater', [10914]], ['GreaterLess', [8823]], ['GreaterSlantEqual', [10878]], ['GreaterTilde', [8819]], ['Gscr', [119970]], ['gscr', [8458]], ['gsim', [8819]], ['gsime', [10894]], ['gsiml', [10896]], ['gtcc', [10919]], ['gtcir', [10874]], ['gt', [62]], ['GT', [62]], ['Gt', [8811]], ['gtdot', [8919]], ['gtlPar', [10645]], ['gtquest', [10876]], ['gtrapprox', [10886]], ['gtrarr', [10616]], ['gtrdot', [8919]], ['gtreqless', [8923]], ['gtreqqless', [10892]], ['gtrless', [8823]], ['gtrsim', [8819]], ['gvertneqq', [8809, 65024]], ['gvnE', [8809, 65024]], ['Hacek', [711]], ['hairsp', [8202]], ['half', [189]], ['hamilt', [8459]], ['HARDcy', [1066]], ['hardcy', [1098]], ['harrcir', [10568]], ['harr', [8596]], ['hArr', [8660]], ['harrw', [8621]], ['Hat', [94]], ['hbar', [8463]], ['Hcirc', [292]], ['hcirc', [293]], ['hearts', [9829]], ['heartsuit', [9829]], ['hellip', [8230]], ['hercon', [8889]], ['hfr', [120101]], ['Hfr', [8460]], ['HilbertSpace', [8459]], ['hksearow', [10533]], ['hkswarow', [10534]], ['hoarr', [8703]], ['homtht', [8763]], ['hookleftarrow', [8617]], ['hookrightarrow', [8618]], ['hopf', [120153]], ['Hopf', [8461]], ['horbar', [8213]], ['HorizontalLine', [9472]], ['hscr', [119997]], ['Hscr', [8459]], ['hslash', [8463]], ['Hstrok', [294]], ['hstrok', [295]], ['HumpDownHump', [8782]], ['HumpEqual', [8783]], ['hybull', [8259]], ['hyphen', [8208]], ['Iacute', [205]], ['iacute', [237]], ['ic', [8291]], ['Icirc', [206]], ['icirc', [238]], ['Icy', [1048]], ['icy', [1080]], ['Idot', [304]], ['IEcy', [1045]], ['iecy', [1077]], ['iexcl', [161]], ['iff', [8660]], ['ifr', [120102]], ['Ifr', [8465]], ['Igrave', [204]], ['igrave', [236]], ['ii', [8520]], ['iiiint', [10764]], ['iiint', [8749]], ['iinfin', [10716]], ['iiota', [8489]], ['IJlig', [306]], ['ijlig', [307]], ['Imacr', [298]], ['imacr', [299]], ['image', [8465]], ['ImaginaryI', [8520]], ['imagline', [8464]], ['imagpart', [8465]], ['imath', [305]], ['Im', [8465]], ['imof', [8887]], ['imped', [437]], ['Implies', [8658]], ['incare', [8453]], ['in', [8712]], ['infin', [8734]], ['infintie', [10717]], ['inodot', [305]], ['intcal', [8890]], ['int', [8747]], ['Int', [8748]], ['integers', [8484]], ['Integral', [8747]], ['intercal', [8890]], ['Intersection', [8898]], ['intlarhk', [10775]], ['intprod', [10812]], ['InvisibleComma', [8291]], ['InvisibleTimes', [8290]], ['IOcy', [1025]], ['iocy', [1105]], ['Iogon', [302]], ['iogon', [303]], ['Iopf', [120128]], ['iopf', [120154]], ['Iota', [921]], ['iota', [953]], ['iprod', [10812]], ['iquest', [191]], ['iscr', [119998]], ['Iscr', [8464]], ['isin', [8712]], ['isindot', [8949]], ['isinE', [8953]], ['isins', [8948]], ['isinsv', [8947]], ['isinv', [8712]], ['it', [8290]], ['Itilde', [296]], ['itilde', [297]], ['Iukcy', [1030]], ['iukcy', [1110]], ['Iuml', [207]], ['iuml', [239]], ['Jcirc', [308]], ['jcirc', [309]], ['Jcy', [1049]], ['jcy', [1081]], ['Jfr', [120077]], ['jfr', [120103]], ['jmath', [567]], ['Jopf', [120129]], ['jopf', [120155]], ['Jscr', [119973]], ['jscr', [119999]], ['Jsercy', [1032]], ['jsercy', [1112]], ['Jukcy', [1028]], ['jukcy', [1108]], ['Kappa', [922]], ['kappa', [954]], ['kappav', [1008]], ['Kcedil', [310]], ['kcedil', [311]], ['Kcy', [1050]], ['kcy', [1082]], ['Kfr', [120078]], ['kfr', [120104]], ['kgreen', [312]], ['KHcy', [1061]], ['khcy', [1093]], ['KJcy', [1036]], ['kjcy', [1116]], ['Kopf', [120130]], ['kopf', [120156]], ['Kscr', [119974]], ['kscr', [120000]], ['lAarr', [8666]], ['Lacute', [313]], ['lacute', [314]], ['laemptyv', [10676]], ['lagran', [8466]], ['Lambda', [923]], ['lambda', [955]], ['lang', [10216]], ['Lang', [10218]], ['langd', [10641]], ['langle', [10216]], ['lap', [10885]], ['Laplacetrf', [8466]], ['laquo', [171]], ['larrb', [8676]], ['larrbfs', [10527]], ['larr', [8592]], ['Larr', [8606]], ['lArr', [8656]], ['larrfs', [10525]], ['larrhk', [8617]], ['larrlp', [8619]], ['larrpl', [10553]], ['larrsim', [10611]], ['larrtl', [8610]], ['latail', [10521]], ['lAtail', [10523]], ['lat', [10923]], ['late', [10925]], ['lates', [10925, 65024]], ['lbarr', [10508]], ['lBarr', [10510]], ['lbbrk', [10098]], ['lbrace', [123]], ['lbrack', [91]], ['lbrke', [10635]], ['lbrksld', [10639]], ['lbrkslu', [10637]], ['Lcaron', [317]], ['lcaron', [318]], ['Lcedil', [315]], ['lcedil', [316]], ['lceil', [8968]], ['lcub', [123]], ['Lcy', [1051]], ['lcy', [1083]], ['ldca', [10550]], ['ldquo', [8220]], ['ldquor', [8222]], ['ldrdhar', [10599]], ['ldrushar', [10571]], ['ldsh', [8626]], ['le', [8804]], ['lE', [8806]], ['LeftAngleBracket', [10216]], ['LeftArrowBar', [8676]], ['leftarrow', [8592]], ['LeftArrow', [8592]], ['Leftarrow', [8656]], ['LeftArrowRightArrow', [8646]], ['leftarrowtail', [8610]], ['LeftCeiling', [8968]], ['LeftDoubleBracket', [10214]], ['LeftDownTeeVector', [10593]], ['LeftDownVectorBar', [10585]], ['LeftDownVector', [8643]], ['LeftFloor', [8970]], ['leftharpoondown', [8637]], ['leftharpoonup', [8636]], ['leftleftarrows', [8647]], ['leftrightarrow', [8596]], ['LeftRightArrow', [8596]], ['Leftrightarrow', [8660]], ['leftrightarrows', [8646]], ['leftrightharpoons', [8651]], ['leftrightsquigarrow', [8621]], ['LeftRightVector', [10574]], ['LeftTeeArrow', [8612]], ['LeftTee', [8867]], ['LeftTeeVector', [10586]], ['leftthreetimes', [8907]], ['LeftTriangleBar', [10703]], ['LeftTriangle', [8882]], ['LeftTriangleEqual', [8884]], ['LeftUpDownVector', [10577]], ['LeftUpTeeVector', [10592]], ['LeftUpVectorBar', [10584]], ['LeftUpVector', [8639]], ['LeftVectorBar', [10578]], ['LeftVector', [8636]], ['lEg', [10891]], ['leg', [8922]], ['leq', [8804]], ['leqq', [8806]], ['leqslant', [10877]], ['lescc', [10920]], ['les', [10877]], ['lesdot', [10879]], ['lesdoto', [10881]], ['lesdotor', [10883]], ['lesg', [8922, 65024]], ['lesges', [10899]], ['lessapprox', [10885]], ['lessdot', [8918]], ['lesseqgtr', [8922]], ['lesseqqgtr', [10891]], ['LessEqualGreater', [8922]], ['LessFullEqual', [8806]], ['LessGreater', [8822]], ['lessgtr', [8822]], ['LessLess', [10913]], ['lesssim', [8818]], ['LessSlantEqual', [10877]], ['LessTilde', [8818]], ['lfisht', [10620]], ['lfloor', [8970]], ['Lfr', [120079]], ['lfr', [120105]], ['lg', [8822]], ['lgE', [10897]], ['lHar', [10594]], ['lhard', [8637]], ['lharu', [8636]], ['lharul', [10602]], ['lhblk', [9604]], ['LJcy', [1033]], ['ljcy', [1113]], ['llarr', [8647]], ['ll', [8810]], ['Ll', [8920]], ['llcorner', [8990]], ['Lleftarrow', [8666]], ['llhard', [10603]], ['lltri', [9722]], ['Lmidot', [319]], ['lmidot', [320]], ['lmoustache', [9136]], ['lmoust', [9136]], ['lnap', [10889]], ['lnapprox', [10889]], ['lne', [10887]], ['lnE', [8808]], ['lneq', [10887]], ['lneqq', [8808]], ['lnsim', [8934]], ['loang', [10220]], ['loarr', [8701]], ['lobrk', [10214]], ['longleftarrow', [10229]], ['LongLeftArrow', [10229]], ['Longleftarrow', [10232]], ['longleftrightarrow', [10231]], ['LongLeftRightArrow', [10231]], ['Longleftrightarrow', [10234]], ['longmapsto', [10236]], ['longrightarrow', [10230]], ['LongRightArrow', [10230]], ['Longrightarrow', [10233]], ['looparrowleft', [8619]], ['looparrowright', [8620]], ['lopar', [10629]], ['Lopf', [120131]], ['lopf', [120157]], ['loplus', [10797]], ['lotimes', [10804]], ['lowast', [8727]], ['lowbar', [95]], ['LowerLeftArrow', [8601]], ['LowerRightArrow', [8600]], ['loz', [9674]], ['lozenge', [9674]], ['lozf', [10731]], ['lpar', [40]], ['lparlt', [10643]], ['lrarr', [8646]], ['lrcorner', [8991]], ['lrhar', [8651]], ['lrhard', [10605]], ['lrm', [8206]], ['lrtri', [8895]], ['lsaquo', [8249]], ['lscr', [120001]], ['Lscr', [8466]], ['lsh', [8624]], ['Lsh', [8624]], ['lsim', [8818]], ['lsime', [10893]], ['lsimg', [10895]], ['lsqb', [91]], ['lsquo', [8216]], ['lsquor', [8218]], ['Lstrok', [321]], ['lstrok', [322]], ['ltcc', [10918]], ['ltcir', [10873]], ['lt', [60]], ['LT', [60]], ['Lt', [8810]], ['ltdot', [8918]], ['lthree', [8907]], ['ltimes', [8905]], ['ltlarr', [10614]], ['ltquest', [10875]], ['ltri', [9667]], ['ltrie', [8884]], ['ltrif', [9666]], ['ltrPar', [10646]], ['lurdshar', [10570]], ['luruhar', [10598]], ['lvertneqq', [8808, 65024]], ['lvnE', [8808, 65024]], ['macr', [175]], ['male', [9794]], ['malt', [10016]], ['maltese', [10016]], ['Map', [10501]], ['map', [8614]], ['mapsto', [8614]], ['mapstodown', [8615]], ['mapstoleft', [8612]], ['mapstoup', [8613]], ['marker', [9646]], ['mcomma', [10793]], ['Mcy', [1052]], ['mcy', [1084]], ['mdash', [8212]], ['mDDot', [8762]], ['measuredangle', [8737]], ['MediumSpace', [8287]], ['Mellintrf', [8499]], ['Mfr', [120080]], ['mfr', [120106]], ['mho', [8487]], ['micro', [181]], ['midast', [42]], ['midcir', [10992]], ['mid', [8739]], ['middot', [183]], ['minusb', [8863]], ['minus', [8722]], ['minusd', [8760]], ['minusdu', [10794]], ['MinusPlus', [8723]], ['mlcp', [10971]], ['mldr', [8230]], ['mnplus', [8723]], ['models', [8871]], ['Mopf', [120132]], ['mopf', [120158]], ['mp', [8723]], ['mscr', [120002]], ['Mscr', [8499]], ['mstpos', [8766]], ['Mu', [924]], ['mu', [956]], ['multimap', [8888]], ['mumap', [8888]], ['nabla', [8711]], ['Nacute', [323]], ['nacute', [324]], ['nang', [8736, 8402]], ['nap', [8777]], ['napE', [10864, 824]], ['napid', [8779, 824]], ['napos', [329]], ['napprox', [8777]], ['natural', [9838]], ['naturals', [8469]], ['natur', [9838]], ['nbsp', [160]], ['nbump', [8782, 824]], ['nbumpe', [8783, 824]], ['ncap', [10819]], ['Ncaron', [327]], ['ncaron', [328]], ['Ncedil', [325]], ['ncedil', [326]], ['ncong', [8775]], ['ncongdot', [10861, 824]], ['ncup', [10818]], ['Ncy', [1053]], ['ncy', [1085]], ['ndash', [8211]], ['nearhk', [10532]], ['nearr', [8599]], ['neArr', [8663]], ['nearrow', [8599]], ['ne', [8800]], ['nedot', [8784, 824]], ['NegativeMediumSpace', [8203]], ['NegativeThickSpace', [8203]], ['NegativeThinSpace', [8203]], ['NegativeVeryThinSpace', [8203]], ['nequiv', [8802]], ['nesear', [10536]], ['nesim', [8770, 824]], ['NestedGreaterGreater', [8811]], ['NestedLessLess', [8810]], ['NewLine', [10]], ['nexist', [8708]], ['nexists', [8708]], ['Nfr', [120081]], ['nfr', [120107]], ['ngE', [8807, 824]], ['nge', [8817]], ['ngeq', [8817]], ['ngeqq', [8807, 824]], ['ngeqslant', [10878, 824]], ['nges', [10878, 824]], ['nGg', [8921, 824]], ['ngsim', [8821]], ['nGt', [8811, 8402]], ['ngt', [8815]], ['ngtr', [8815]], ['nGtv', [8811, 824]], ['nharr', [8622]], ['nhArr', [8654]], ['nhpar', [10994]], ['ni', [8715]], ['nis', [8956]], ['nisd', [8954]], ['niv', [8715]], ['NJcy', [1034]], ['njcy', [1114]], ['nlarr', [8602]], ['nlArr', [8653]], ['nldr', [8229]], ['nlE', [8806, 824]], ['nle', [8816]], ['nleftarrow', [8602]], ['nLeftarrow', [8653]], ['nleftrightarrow', [8622]], ['nLeftrightarrow', [8654]], ['nleq', [8816]], ['nleqq', [8806, 824]], ['nleqslant', [10877, 824]], ['nles', [10877, 824]], ['nless', [8814]], ['nLl', [8920, 824]], ['nlsim', [8820]], ['nLt', [8810, 8402]], ['nlt', [8814]], ['nltri', [8938]], ['nltrie', [8940]], ['nLtv', [8810, 824]], ['nmid', [8740]], ['NoBreak', [8288]], ['NonBreakingSpace', [160]], ['nopf', [120159]], ['Nopf', [8469]], ['Not', [10988]], ['not', [172]], ['NotCongruent', [8802]], ['NotCupCap', [8813]], ['NotDoubleVerticalBar', [8742]], ['NotElement', [8713]], ['NotEqual', [8800]], ['NotEqualTilde', [8770, 824]], ['NotExists', [8708]], ['NotGreater', [8815]], ['NotGreaterEqual', [8817]], ['NotGreaterFullEqual', [8807, 824]], ['NotGreaterGreater', [8811, 824]], ['NotGreaterLess', [8825]], ['NotGreaterSlantEqual', [10878, 824]], ['NotGreaterTilde', [8821]], ['NotHumpDownHump', [8782, 824]], ['NotHumpEqual', [8783, 824]], ['notin', [8713]], ['notindot', [8949, 824]], ['notinE', [8953, 824]], ['notinva', [8713]], ['notinvb', [8951]], ['notinvc', [8950]], ['NotLeftTriangleBar', [10703, 824]], ['NotLeftTriangle', [8938]], ['NotLeftTriangleEqual', [8940]], ['NotLess', [8814]], ['NotLessEqual', [8816]], ['NotLessGreater', [8824]], ['NotLessLess', [8810, 824]], ['NotLessSlantEqual', [10877, 824]], ['NotLessTilde', [8820]], ['NotNestedGreaterGreater', [10914, 824]], ['NotNestedLessLess', [10913, 824]], ['notni', [8716]], ['notniva', [8716]], ['notnivb', [8958]], ['notnivc', [8957]], ['NotPrecedes', [8832]], ['NotPrecedesEqual', [10927, 824]], ['NotPrecedesSlantEqual', [8928]], ['NotReverseElement', [8716]], ['NotRightTriangleBar', [10704, 824]], ['NotRightTriangle', [8939]], ['NotRightTriangleEqual', [8941]], ['NotSquareSubset', [8847, 824]], ['NotSquareSubsetEqual', [8930]], ['NotSquareSuperset', [8848, 824]], ['NotSquareSupersetEqual', [8931]], ['NotSubset', [8834, 8402]], ['NotSubsetEqual', [8840]], ['NotSucceeds', [8833]], ['NotSucceedsEqual', [10928, 824]], ['NotSucceedsSlantEqual', [8929]], ['NotSucceedsTilde', [8831, 824]], ['NotSuperset', [8835, 8402]], ['NotSupersetEqual', [8841]], ['NotTilde', [8769]], ['NotTildeEqual', [8772]], ['NotTildeFullEqual', [8775]], ['NotTildeTilde', [8777]], ['NotVerticalBar', [8740]], ['nparallel', [8742]], ['npar', [8742]], ['nparsl', [11005, 8421]], ['npart', [8706, 824]], ['npolint', [10772]], ['npr', [8832]], ['nprcue', [8928]], ['nprec', [8832]], ['npreceq', [10927, 824]], ['npre', [10927, 824]], ['nrarrc', [10547, 824]], ['nrarr', [8603]], ['nrArr', [8655]], ['nrarrw', [8605, 824]], ['nrightarrow', [8603]], ['nRightarrow', [8655]], ['nrtri', [8939]], ['nrtrie', [8941]], ['nsc', [8833]], ['nsccue', [8929]], ['nsce', [10928, 824]], ['Nscr', [119977]], ['nscr', [120003]], ['nshortmid', [8740]], ['nshortparallel', [8742]], ['nsim', [8769]], ['nsime', [8772]], ['nsimeq', [8772]], ['nsmid', [8740]], ['nspar', [8742]], ['nsqsube', [8930]], ['nsqsupe', [8931]], ['nsub', [8836]], ['nsubE', [10949, 824]], ['nsube', [8840]], ['nsubset', [8834, 8402]], ['nsubseteq', [8840]], ['nsubseteqq', [10949, 824]], ['nsucc', [8833]], ['nsucceq', [10928, 824]], ['nsup', [8837]], ['nsupE', [10950, 824]], ['nsupe', [8841]], ['nsupset', [8835, 8402]], ['nsupseteq', [8841]], ['nsupseteqq', [10950, 824]], ['ntgl', [8825]], ['Ntilde', [209]], ['ntilde', [241]], ['ntlg', [8824]], ['ntriangleleft', [8938]], ['ntrianglelefteq', [8940]], ['ntriangleright', [8939]], ['ntrianglerighteq', [8941]], ['Nu', [925]], ['nu', [957]], ['num', [35]], ['numero', [8470]], ['numsp', [8199]], ['nvap', [8781, 8402]], ['nvdash', [8876]], ['nvDash', [8877]], ['nVdash', [8878]], ['nVDash', [8879]], ['nvge', [8805, 8402]], ['nvgt', [62, 8402]], ['nvHarr', [10500]], ['nvinfin', [10718]], ['nvlArr', [10498]], ['nvle', [8804, 8402]], ['nvlt', [60, 8402]], ['nvltrie', [8884, 8402]], ['nvrArr', [10499]], ['nvrtrie', [8885, 8402]], ['nvsim', [8764, 8402]], ['nwarhk', [10531]], ['nwarr', [8598]], ['nwArr', [8662]], ['nwarrow', [8598]], ['nwnear', [10535]], ['Oacute', [211]], ['oacute', [243]], ['oast', [8859]], ['Ocirc', [212]], ['ocirc', [244]], ['ocir', [8858]], ['Ocy', [1054]], ['ocy', [1086]], ['odash', [8861]], ['Odblac', [336]], ['odblac', [337]], ['odiv', [10808]], ['odot', [8857]], ['odsold', [10684]], ['OElig', [338]], ['oelig', [339]], ['ofcir', [10687]], ['Ofr', [120082]], ['ofr', [120108]], ['ogon', [731]], ['Ograve', [210]], ['ograve', [242]], ['ogt', [10689]], ['ohbar', [10677]], ['ohm', [937]], ['oint', [8750]], ['olarr', [8634]], ['olcir', [10686]], ['olcross', [10683]], ['oline', [8254]], ['olt', [10688]], ['Omacr', [332]], ['omacr', [333]], ['Omega', [937]], ['omega', [969]], ['Omicron', [927]], ['omicron', [959]], ['omid', [10678]], ['ominus', [8854]], ['Oopf', [120134]], ['oopf', [120160]], ['opar', [10679]], ['OpenCurlyDoubleQuote', [8220]], ['OpenCurlyQuote', [8216]], ['operp', [10681]], ['oplus', [8853]], ['orarr', [8635]], ['Or', [10836]], ['or', [8744]], ['ord', [10845]], ['order', [8500]], ['orderof', [8500]], ['ordf', [170]], ['ordm', [186]], ['origof', [8886]], ['oror', [10838]], ['orslope', [10839]], ['orv', [10843]], ['oS', [9416]], ['Oscr', [119978]], ['oscr', [8500]], ['Oslash', [216]], ['oslash', [248]], ['osol', [8856]], ['Otilde', [213]], ['otilde', [245]], ['otimesas', [10806]], ['Otimes', [10807]], ['otimes', [8855]], ['Ouml', [214]], ['ouml', [246]], ['ovbar', [9021]], ['OverBar', [8254]], ['OverBrace', [9182]], ['OverBracket', [9140]], ['OverParenthesis', [9180]], ['para', [182]], ['parallel', [8741]], ['par', [8741]], ['parsim', [10995]], ['parsl', [11005]], ['part', [8706]], ['PartialD', [8706]], ['Pcy', [1055]], ['pcy', [1087]], ['percnt', [37]], ['period', [46]], ['permil', [8240]], ['perp', [8869]], ['pertenk', [8241]], ['Pfr', [120083]], ['pfr', [120109]], ['Phi', [934]], ['phi', [966]], ['phiv', [981]], ['phmmat', [8499]], ['phone', [9742]], ['Pi', [928]], ['pi', [960]], ['pitchfork', [8916]], ['piv', [982]], ['planck', [8463]], ['planckh', [8462]], ['plankv', [8463]], ['plusacir', [10787]], ['plusb', [8862]], ['pluscir', [10786]], ['plus', [43]], ['plusdo', [8724]], ['plusdu', [10789]], ['pluse', [10866]], ['PlusMinus', [177]], ['plusmn', [177]], ['plussim', [10790]], ['plustwo', [10791]], ['pm', [177]], ['Poincareplane', [8460]], ['pointint', [10773]], ['popf', [120161]], ['Popf', [8473]], ['pound', [163]], ['prap', [10935]], ['Pr', [10939]], ['pr', [8826]], ['prcue', [8828]], ['precapprox', [10935]], ['prec', [8826]], ['preccurlyeq', [8828]], ['Precedes', [8826]], ['PrecedesEqual', [10927]], ['PrecedesSlantEqual', [8828]], ['PrecedesTilde', [8830]], ['preceq', [10927]], ['precnapprox', [10937]], ['precneqq', [10933]], ['precnsim', [8936]], ['pre', [10927]], ['prE', [10931]], ['precsim', [8830]], ['prime', [8242]], ['Prime', [8243]], ['primes', [8473]], ['prnap', [10937]], ['prnE', [10933]], ['prnsim', [8936]], ['prod', [8719]], ['Product', [8719]], ['profalar', [9006]], ['profline', [8978]], ['profsurf', [8979]], ['prop', [8733]], ['Proportional', [8733]], ['Proportion', [8759]], ['propto', [8733]], ['prsim', [8830]], ['prurel', [8880]], ['Pscr', [119979]], ['pscr', [120005]], ['Psi', [936]], ['psi', [968]], ['puncsp', [8200]], ['Qfr', [120084]], ['qfr', [120110]], ['qint', [10764]], ['qopf', [120162]], ['Qopf', [8474]], ['qprime', [8279]], ['Qscr', [119980]], ['qscr', [120006]], ['quaternions', [8461]], ['quatint', [10774]], ['quest', [63]], ['questeq', [8799]], ['quot', [34]], ['QUOT', [34]], ['rAarr', [8667]], ['race', [8765, 817]], ['Racute', [340]], ['racute', [341]], ['radic', [8730]], ['raemptyv', [10675]], ['rang', [10217]], ['Rang', [10219]], ['rangd', [10642]], ['range', [10661]], ['rangle', [10217]], ['raquo', [187]], ['rarrap', [10613]], ['rarrb', [8677]], ['rarrbfs', [10528]], ['rarrc', [10547]], ['rarr', [8594]], ['Rarr', [8608]], ['rArr', [8658]], ['rarrfs', [10526]], ['rarrhk', [8618]], ['rarrlp', [8620]], ['rarrpl', [10565]], ['rarrsim', [10612]], ['Rarrtl', [10518]], ['rarrtl', [8611]], ['rarrw', [8605]], ['ratail', [10522]], ['rAtail', [10524]], ['ratio', [8758]], ['rationals', [8474]], ['rbarr', [10509]], ['rBarr', [10511]], ['RBarr', [10512]], ['rbbrk', [10099]], ['rbrace', [125]], ['rbrack', [93]], ['rbrke', [10636]], ['rbrksld', [10638]], ['rbrkslu', [10640]], ['Rcaron', [344]], ['rcaron', [345]], ['Rcedil', [342]], ['rcedil', [343]], ['rceil', [8969]], ['rcub', [125]], ['Rcy', [1056]], ['rcy', [1088]], ['rdca', [10551]], ['rdldhar', [10601]], ['rdquo', [8221]], ['rdquor', [8221]], ['rdsh', [8627]], ['real', [8476]], ['realine', [8475]], ['realpart', [8476]], ['reals', [8477]], ['Re', [8476]], ['rect', [9645]], ['reg', [174]], ['REG', [174]], ['ReverseElement', [8715]], ['ReverseEquilibrium', [8651]], ['ReverseUpEquilibrium', [10607]], ['rfisht', [10621]], ['rfloor', [8971]], ['rfr', [120111]], ['Rfr', [8476]], ['rHar', [10596]], ['rhard', [8641]], ['rharu', [8640]], ['rharul', [10604]], ['Rho', [929]], ['rho', [961]], ['rhov', [1009]], ['RightAngleBracket', [10217]], ['RightArrowBar', [8677]], ['rightarrow', [8594]], ['RightArrow', [8594]], ['Rightarrow', [8658]], ['RightArrowLeftArrow', [8644]], ['rightarrowtail', [8611]], ['RightCeiling', [8969]], ['RightDoubleBracket', [10215]], ['RightDownTeeVector', [10589]], ['RightDownVectorBar', [10581]], ['RightDownVector', [8642]], ['RightFloor', [8971]], ['rightharpoondown', [8641]], ['rightharpoonup', [8640]], ['rightleftarrows', [8644]], ['rightleftharpoons', [8652]], ['rightrightarrows', [8649]], ['rightsquigarrow', [8605]], ['RightTeeArrow', [8614]], ['RightTee', [8866]], ['RightTeeVector', [10587]], ['rightthreetimes', [8908]], ['RightTriangleBar', [10704]], ['RightTriangle', [8883]], ['RightTriangleEqual', [8885]], ['RightUpDownVector', [10575]], ['RightUpTeeVector', [10588]], ['RightUpVectorBar', [10580]], ['RightUpVector', [8638]], ['RightVectorBar', [10579]], ['RightVector', [8640]], ['ring', [730]], ['risingdotseq', [8787]], ['rlarr', [8644]], ['rlhar', [8652]], ['rlm', [8207]], ['rmoustache', [9137]], ['rmoust', [9137]], ['rnmid', [10990]], ['roang', [10221]], ['roarr', [8702]], ['robrk', [10215]], ['ropar', [10630]], ['ropf', [120163]], ['Ropf', [8477]], ['roplus', [10798]], ['rotimes', [10805]], ['RoundImplies', [10608]], ['rpar', [41]], ['rpargt', [10644]], ['rppolint', [10770]], ['rrarr', [8649]], ['Rrightarrow', [8667]], ['rsaquo', [8250]], ['rscr', [120007]], ['Rscr', [8475]], ['rsh', [8625]], ['Rsh', [8625]], ['rsqb', [93]], ['rsquo', [8217]], ['rsquor', [8217]], ['rthree', [8908]], ['rtimes', [8906]], ['rtri', [9657]], ['rtrie', [8885]], ['rtrif', [9656]], ['rtriltri', [10702]], ['RuleDelayed', [10740]], ['ruluhar', [10600]], ['rx', [8478]], ['Sacute', [346]], ['sacute', [347]], ['sbquo', [8218]], ['scap', [10936]], ['Scaron', [352]], ['scaron', [353]], ['Sc', [10940]], ['sc', [8827]], ['sccue', [8829]], ['sce', [10928]], ['scE', [10932]], ['Scedil', [350]], ['scedil', [351]], ['Scirc', [348]], ['scirc', [349]], ['scnap', [10938]], ['scnE', [10934]], ['scnsim', [8937]], ['scpolint', [10771]], ['scsim', [8831]], ['Scy', [1057]], ['scy', [1089]], ['sdotb', [8865]], ['sdot', [8901]], ['sdote', [10854]], ['searhk', [10533]], ['searr', [8600]], ['seArr', [8664]], ['searrow', [8600]], ['sect', [167]], ['semi', [59]], ['seswar', [10537]], ['setminus', [8726]], ['setmn', [8726]], ['sext', [10038]], ['Sfr', [120086]], ['sfr', [120112]], ['sfrown', [8994]], ['sharp', [9839]], ['SHCHcy', [1065]], ['shchcy', [1097]], ['SHcy', [1064]], ['shcy', [1096]], ['ShortDownArrow', [8595]], ['ShortLeftArrow', [8592]], ['shortmid', [8739]], ['shortparallel', [8741]], ['ShortRightArrow', [8594]], ['ShortUpArrow', [8593]], ['shy', [173]], ['Sigma', [931]], ['sigma', [963]], ['sigmaf', [962]], ['sigmav', [962]], ['sim', [8764]], ['simdot', [10858]], ['sime', [8771]], ['simeq', [8771]], ['simg', [10910]], ['simgE', [10912]], ['siml', [10909]], ['simlE', [10911]], ['simne', [8774]], ['simplus', [10788]], ['simrarr', [10610]], ['slarr', [8592]], ['SmallCircle', [8728]], ['smallsetminus', [8726]], ['smashp', [10803]], ['smeparsl', [10724]], ['smid', [8739]], ['smile', [8995]], ['smt', [10922]], ['smte', [10924]], ['smtes', [10924, 65024]], ['SOFTcy', [1068]], ['softcy', [1100]], ['solbar', [9023]], ['solb', [10692]], ['sol', [47]], ['Sopf', [120138]], ['sopf', [120164]], ['spades', [9824]], ['spadesuit', [9824]], ['spar', [8741]], ['sqcap', [8851]], ['sqcaps', [8851, 65024]], ['sqcup', [8852]], ['sqcups', [8852, 65024]], ['Sqrt', [8730]], ['sqsub', [8847]], ['sqsube', [8849]], ['sqsubset', [8847]], ['sqsubseteq', [8849]], ['sqsup', [8848]], ['sqsupe', [8850]], ['sqsupset', [8848]], ['sqsupseteq', [8850]], ['square', [9633]], ['Square', [9633]], ['SquareIntersection', [8851]], ['SquareSubset', [8847]], ['SquareSubsetEqual', [8849]], ['SquareSuperset', [8848]], ['SquareSupersetEqual', [8850]], ['SquareUnion', [8852]], ['squarf', [9642]], ['squ', [9633]], ['squf', [9642]], ['srarr', [8594]], ['Sscr', [119982]], ['sscr', [120008]], ['ssetmn', [8726]], ['ssmile', [8995]], ['sstarf', [8902]], ['Star', [8902]], ['star', [9734]], ['starf', [9733]], ['straightepsilon', [1013]], ['straightphi', [981]], ['strns', [175]], ['sub', [8834]], ['Sub', [8912]], ['subdot', [10941]], ['subE', [10949]], ['sube', [8838]], ['subedot', [10947]], ['submult', [10945]], ['subnE', [10955]], ['subne', [8842]], ['subplus', [10943]], ['subrarr', [10617]], ['subset', [8834]], ['Subset', [8912]], ['subseteq', [8838]], ['subseteqq', [10949]], ['SubsetEqual', [8838]], ['subsetneq', [8842]], ['subsetneqq', [10955]], ['subsim', [10951]], ['subsub', [10965]], ['subsup', [10963]], ['succapprox', [10936]], ['succ', [8827]], ['succcurlyeq', [8829]], ['Succeeds', [8827]], ['SucceedsEqual', [10928]], ['SucceedsSlantEqual', [8829]], ['SucceedsTilde', [8831]], ['succeq', [10928]], ['succnapprox', [10938]], ['succneqq', [10934]], ['succnsim', [8937]], ['succsim', [8831]], ['SuchThat', [8715]], ['sum', [8721]], ['Sum', [8721]], ['sung', [9834]], ['sup1', [185]], ['sup2', [178]], ['sup3', [179]], ['sup', [8835]], ['Sup', [8913]], ['supdot', [10942]], ['supdsub', [10968]], ['supE', [10950]], ['supe', [8839]], ['supedot', [10948]], ['Superset', [8835]], ['SupersetEqual', [8839]], ['suphsol', [10185]], ['suphsub', [10967]], ['suplarr', [10619]], ['supmult', [10946]], ['supnE', [10956]], ['supne', [8843]], ['supplus', [10944]], ['supset', [8835]], ['Supset', [8913]], ['supseteq', [8839]], ['supseteqq', [10950]], ['supsetneq', [8843]], ['supsetneqq', [10956]], ['supsim', [10952]], ['supsub', [10964]], ['supsup', [10966]], ['swarhk', [10534]], ['swarr', [8601]], ['swArr', [8665]], ['swarrow', [8601]], ['swnwar', [10538]], ['szlig', [223]], ['Tab', [9]], ['target', [8982]], ['Tau', [932]], ['tau', [964]], ['tbrk', [9140]], ['Tcaron', [356]], ['tcaron', [357]], ['Tcedil', [354]], ['tcedil', [355]], ['Tcy', [1058]], ['tcy', [1090]], ['tdot', [8411]], ['telrec', [8981]], ['Tfr', [120087]], ['tfr', [120113]], ['there4', [8756]], ['therefore', [8756]], ['Therefore', [8756]], ['Theta', [920]], ['theta', [952]], ['thetasym', [977]], ['thetav', [977]], ['thickapprox', [8776]], ['thicksim', [8764]], ['ThickSpace', [8287, 8202]], ['ThinSpace', [8201]], ['thinsp', [8201]], ['thkap', [8776]], ['thksim', [8764]], ['THORN', [222]], ['thorn', [254]], ['tilde', [732]], ['Tilde', [8764]], ['TildeEqual', [8771]], ['TildeFullEqual', [8773]], ['TildeTilde', [8776]], ['timesbar', [10801]], ['timesb', [8864]], ['times', [215]], ['timesd', [10800]], ['tint', [8749]], ['toea', [10536]], ['topbot', [9014]], ['topcir', [10993]], ['top', [8868]], ['Topf', [120139]], ['topf', [120165]], ['topfork', [10970]], ['tosa', [10537]], ['tprime', [8244]], ['trade', [8482]], ['TRADE', [8482]], ['triangle', [9653]], ['triangledown', [9663]], ['triangleleft', [9667]], ['trianglelefteq', [8884]], ['triangleq', [8796]], ['triangleright', [9657]], ['trianglerighteq', [8885]], ['tridot', [9708]], ['trie', [8796]], ['triminus', [10810]], ['TripleDot', [8411]], ['triplus', [10809]], ['trisb', [10701]], ['tritime', [10811]], ['trpezium', [9186]], ['Tscr', [119983]], ['tscr', [120009]], ['TScy', [1062]], ['tscy', [1094]], ['TSHcy', [1035]], ['tshcy', [1115]], ['Tstrok', [358]], ['tstrok', [359]], ['twixt', [8812]], ['twoheadleftarrow', [8606]], ['twoheadrightarrow', [8608]], ['Uacute', [218]], ['uacute', [250]], ['uarr', [8593]], ['Uarr', [8607]], ['uArr', [8657]], ['Uarrocir', [10569]], ['Ubrcy', [1038]], ['ubrcy', [1118]], ['Ubreve', [364]], ['ubreve', [365]], ['Ucirc', [219]], ['ucirc', [251]], ['Ucy', [1059]], ['ucy', [1091]], ['udarr', [8645]], ['Udblac', [368]], ['udblac', [369]], ['udhar', [10606]], ['ufisht', [10622]], ['Ufr', [120088]], ['ufr', [120114]], ['Ugrave', [217]], ['ugrave', [249]], ['uHar', [10595]], ['uharl', [8639]], ['uharr', [8638]], ['uhblk', [9600]], ['ulcorn', [8988]], ['ulcorner', [8988]], ['ulcrop', [8975]], ['ultri', [9720]], ['Umacr', [362]], ['umacr', [363]], ['uml', [168]], ['UnderBar', [95]], ['UnderBrace', [9183]], ['UnderBracket', [9141]], ['UnderParenthesis', [9181]], ['Union', [8899]], ['UnionPlus', [8846]], ['Uogon', [370]], ['uogon', [371]], ['Uopf', [120140]], ['uopf', [120166]], ['UpArrowBar', [10514]], ['uparrow', [8593]], ['UpArrow', [8593]], ['Uparrow', [8657]], ['UpArrowDownArrow', [8645]], ['updownarrow', [8597]], ['UpDownArrow', [8597]], ['Updownarrow', [8661]], ['UpEquilibrium', [10606]], ['upharpoonleft', [8639]], ['upharpoonright', [8638]], ['uplus', [8846]], ['UpperLeftArrow', [8598]], ['UpperRightArrow', [8599]], ['upsi', [965]], ['Upsi', [978]], ['upsih', [978]], ['Upsilon', [933]], ['upsilon', [965]], ['UpTeeArrow', [8613]], ['UpTee', [8869]], ['upuparrows', [8648]], ['urcorn', [8989]], ['urcorner', [8989]], ['urcrop', [8974]], ['Uring', [366]], ['uring', [367]], ['urtri', [9721]], ['Uscr', [119984]], ['uscr', [120010]], ['utdot', [8944]], ['Utilde', [360]], ['utilde', [361]], ['utri', [9653]], ['utrif', [9652]], ['uuarr', [8648]], ['Uuml', [220]], ['uuml', [252]], ['uwangle', [10663]], ['vangrt', [10652]], ['varepsilon', [1013]], ['varkappa', [1008]], ['varnothing', [8709]], ['varphi', [981]], ['varpi', [982]], ['varpropto', [8733]], ['varr', [8597]], ['vArr', [8661]], ['varrho', [1009]], ['varsigma', [962]], ['varsubsetneq', [8842, 65024]], ['varsubsetneqq', [10955, 65024]], ['varsupsetneq', [8843, 65024]], ['varsupsetneqq', [10956, 65024]], ['vartheta', [977]], ['vartriangleleft', [8882]], ['vartriangleright', [8883]], ['vBar', [10984]], ['Vbar', [10987]], ['vBarv', [10985]], ['Vcy', [1042]], ['vcy', [1074]], ['vdash', [8866]], ['vDash', [8872]], ['Vdash', [8873]], ['VDash', [8875]], ['Vdashl', [10982]], ['veebar', [8891]], ['vee', [8744]], ['Vee', [8897]], ['veeeq', [8794]], ['vellip', [8942]], ['verbar', [124]], ['Verbar', [8214]], ['vert', [124]], ['Vert', [8214]], ['VerticalBar', [8739]], ['VerticalLine', [124]], ['VerticalSeparator', [10072]], ['VerticalTilde', [8768]], ['VeryThinSpace', [8202]], ['Vfr', [120089]], ['vfr', [120115]], ['vltri', [8882]], ['vnsub', [8834, 8402]], ['vnsup', [8835, 8402]], ['Vopf', [120141]], ['vopf', [120167]], ['vprop', [8733]], ['vrtri', [8883]], ['Vscr', [119985]], ['vscr', [120011]], ['vsubnE', [10955, 65024]], ['vsubne', [8842, 65024]], ['vsupnE', [10956, 65024]], ['vsupne', [8843, 65024]], ['Vvdash', [8874]], ['vzigzag', [10650]], ['Wcirc', [372]], ['wcirc', [373]], ['wedbar', [10847]], ['wedge', [8743]], ['Wedge', [8896]], ['wedgeq', [8793]], ['weierp', [8472]], ['Wfr', [120090]], ['wfr', [120116]], ['Wopf', [120142]], ['wopf', [120168]], ['wp', [8472]], ['wr', [8768]], ['wreath', [8768]], ['Wscr', [119986]], ['wscr', [120012]], ['xcap', [8898]], ['xcirc', [9711]], ['xcup', [8899]], ['xdtri', [9661]], ['Xfr', [120091]], ['xfr', [120117]], ['xharr', [10231]], ['xhArr', [10234]], ['Xi', [926]], ['xi', [958]], ['xlarr', [10229]], ['xlArr', [10232]], ['xmap', [10236]], ['xnis', [8955]], ['xodot', [10752]], ['Xopf', [120143]], ['xopf', [120169]], ['xoplus', [10753]], ['xotime', [10754]], ['xrarr', [10230]], ['xrArr', [10233]], ['Xscr', [119987]], ['xscr', [120013]], ['xsqcup', [10758]], ['xuplus', [10756]], ['xutri', [9651]], ['xvee', [8897]], ['xwedge', [8896]], ['Yacute', [221]], ['yacute', [253]], ['YAcy', [1071]], ['yacy', [1103]], ['Ycirc', [374]], ['ycirc', [375]], ['Ycy', [1067]], ['ycy', [1099]], ['yen', [165]], ['Yfr', [120092]], ['yfr', [120118]], ['YIcy', [1031]], ['yicy', [1111]], ['Yopf', [120144]], ['yopf', [120170]], ['Yscr', [119988]], ['yscr', [120014]], ['YUcy', [1070]], ['yucy', [1102]], ['yuml', [255]], ['Yuml', [376]], ['Zacute', [377]], ['zacute', [378]], ['Zcaron', [381]], ['zcaron', [382]], ['Zcy', [1047]], ['zcy', [1079]], ['Zdot', [379]], ['zdot', [380]], ['zeetrf', [8488]], ['ZeroWidthSpace', [8203]], ['Zeta', [918]], ['zeta', [950]], ['zfr', [120119]], ['Zfr', [8488]], ['ZHcy', [1046]], ['zhcy', [1078]], ['zigrarr', [8669]], ['zopf', [120171]], ['Zopf', [8484]], ['Zscr', [119989]], ['zscr', [120015]], ['zwj', [8205]], ['zwnj', [8204]]];\n\n    alphaIndex = {};\n\n    charIndex = {};\n\n    (function() {\n      var addChar, alpha, charInfo, chars, chr, chr2, e, i, l, _results;\n      l = entities.length;\n      i = l;\n      _results = [];\n      while (i--) {\n        e = entities[i];\n        alpha = e[0];\n        chars = e[1];\n        chr = chars[0];\n        addChar = (chr < 32 || chr > 126) || chr === 62 || chr === 60 || chr === 38 || chr === 34 || chr === 39;\n        addChar && (charInfo = (charIndex[chr] = charIndex[chr] || {}));\n        if (chars[1]) {\n          chr2 = chars[1];\n          alphaIndex[alpha] = String.fromCharCode(chr) + String.fromCharCode(chr2);\n          _results.push(addChar && (charInfo[chr2] = alpha));\n        } else {\n          alphaIndex[alpha] = String.fromCharCode(chr);\n          _results.push(addChar && (charInfo[''] = alpha));\n        }\n      }\n      return _results;\n    })();\n\n    Html5Entities.prototype.decode = function(str) {\n      if (str.length === 0) {\n        return '';\n      }\n      return str.replace(/&(#?[\\w\\d]+);?/g, function(s, entity) {\n        var char, code;\n        if (entity.charAt(0) === \"#\") {\n          if (entity.charAt(1) === 'x') {\n            code = parseInt(entity.substr(2).toLowerCase(), 16);\n          } else {\n            code = parseInt(entity.substr(1));\n          }\n          if (isNaN(code) || code < -32768 || code > 65535) {\n            char = '';\n          } else {\n            char = String.fromCharCode(code);\n          }\n        } else {\n          char = alphaIndex[entity];\n        }\n        if (char === void 0) {\n          return s;\n        } else {\n          return char;\n        }\n      });\n    };\n\n    Html5Entities.prototype.encode = function(str) {\n      var alpha, c, charInfo, i, l, result;\n      if (str.length === 0) {\n        return '';\n      }\n      result = '';\n      l = str.length;\n      i = 0;\n      while (i < l) {\n        c = str.charCodeAt(i);\n        if (charInfo = charIndex[c]) {\n          if (alpha = charInfo[str.charCodeAt(i + 1)]) {\n            i++;\n          } else {\n            alpha = charInfo[''];\n          }\n          if (alpha) {\n            result += \"&\" + alpha + \";\";\n            i++;\n            continue;\n          }\n        }\n        result += str.charAt(i);\n        i++;\n      }\n      return result;\n    };\n\n    Html5Entities.prototype.encodeNonUTF = function(str) {\n      var alpha, c, charInfo, i, l, result;\n      if (str.length === 0) {\n        return '';\n      }\n      result = '';\n      l = str.length;\n      i = 0;\n      while (i < l) {\n        c = str.charCodeAt(i);\n        if (charInfo = charIndex[c]) {\n          if (alpha = charInfo[str.charCodeAt(i + 1)]) {\n            i++;\n          } else {\n            alpha = charInfo[''];\n          }\n          if (alpha) {\n            result += \"&\" + alpha + \";\";\n            i++;\n            continue;\n          }\n        }\n        if (c < 32 || c > 126) {\n          result += '&#' + c + ';';\n        } else {\n          result += str.charAt(i);\n        }\n        i++;\n      }\n      return result;\n    };\n\n    Html5Entities.prototype.encodeNonASCII = function(str) {\n      var c, i, l, result;\n      if (str.length === 0) {\n        return '';\n      }\n      result = '';\n      l = str.length;\n      i = 0;\n      while (i < l) {\n        c = str.charCodeAt(i);\n        if (c <= 255) {\n          result += str[i++];\n          continue;\n        }\n        result += '&#' + c + ';';\n        i++;\n      }\n      return result;\n    };\n\n    return Html5Entities;\n\n  })();\n\n  exports.Html5Entities = Html5Entities;\n\n}).call(this);\n\n},{}],19:[function(require,module,exports){\n// Generated by CoffeeScript 1.7.1\n(function() {\n  exports.XmlEntities = (function() {\n    var alphaIndex, charIndex, charSIndex;\n\n    function XmlEntities() {}\n\n    alphaIndex = {\n      '&lt': '<',\n      '&gt': '>',\n      '&quot': '\"',\n      '&apos': '\\'',\n      '&amp': '&',\n      '&lt;': '<',\n      '&gt;': '>',\n      '&quot;': '\"',\n      '&apos;': '\\'',\n      '&amp;': '&'\n    };\n\n    charIndex = {\n      60: 'lt',\n      62: 'gt',\n      34: 'quot',\n      39: 'apos',\n      38: 'amp'\n    };\n\n    charSIndex = {\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      '\\'': '&apos;',\n      '&': '&amp;'\n    };\n\n    XmlEntities.prototype.encode = function(str) {\n      if (str.length === 0) {\n        return '';\n      }\n      return str.replace(/<|>|\"|'|&/g, function(s) {\n        return charSIndex[s];\n      });\n    };\n\n    XmlEntities.prototype.decode = function(str) {\n      if (str.length === 0) {\n        return '';\n      }\n      return str.replace(/&#?[0-9a-zA-Z]+;?/g, function(s) {\n        var a, code;\n        if (s.charAt(1) === '#') {\n          if (s.charAt(2).toLowerCase() === 'x') {\n            code = parseInt(s.substr(3), 16);\n          } else {\n            code = parseInt(s.substr(2));\n          }\n          if (isNaN(code) || code < -32768 || code > 65535) {\n            return '';\n          }\n          return String.fromCharCode(code);\n        } else {\n          if (a = alphaIndex[s]) {\n            return a;\n          } else {\n            return s;\n          }\n        }\n      });\n    };\n\n    XmlEntities.prototype.encodeNonUTF = function(str) {\n      var alpha, c, i, l, result;\n      if (str.length === 0) {\n        return '';\n      }\n      result = '';\n      l = str.length;\n      i = 0;\n      while (i < l) {\n        c = str.charCodeAt(i);\n        if (alpha = charIndex[c]) {\n          result += \"&\" + alpha + \";\";\n          i++;\n          continue;\n        }\n        if (c < 32 || c > 126) {\n          result += '&#' + c + ';';\n        } else {\n          result += str.charAt(i);\n        }\n        i++;\n      }\n      return result;\n    };\n\n    XmlEntities.prototype.encodeNonASCII = function(str) {\n      var c, i, l, result;\n      if (str.length === 0) {\n        return '';\n      }\n      result = '';\n      l = str.length;\n      i = 0;\n      while (i < l) {\n        c = str.charCodeAt(i);\n        if (c <= 255) {\n          result += str[i++];\n          continue;\n        }\n        result += '&#' + c + ';';\n        i++;\n      }\n      return result;\n    };\n\n    return XmlEntities;\n\n  })();\n\n}).call(this);\n\n},{}],20:[function(require,module,exports){\n(function (global){\n//! moment.js\n//! version : 2.8.3\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n(function (undefined) {\n    /************************************\n        Constants\n    ************************************/\n\n    var moment,\n        VERSION = '2.8.3',\n        // the global-scope this is NOT the global object in Node.js\n        globalScope = typeof global !== 'undefined' ? global : this,\n        oldGlobalMoment,\n        round = Math.round,\n        hasOwnProperty = Object.prototype.hasOwnProperty,\n        i,\n\n        YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n\n        // internal storage for locale config files\n        locales = {},\n\n        // extra moment internal properties (plugins register props here)\n        momentProperties = [],\n\n        // check for nodeJS\n        hasModule = (typeof module !== 'undefined' && module.exports),\n\n        // ASP.NET json date format regex\n        aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i,\n        aspNetTimeSpanJsonRegex = /(\\-)?(?:(\\d*)\\.)?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?)?/,\n\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        isoDurationRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,\n\n        // format tokens\n        formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LT|LL?L?L?|l{1,4})/g,\n\n        // parsing token regexes\n        parseTokenOneOrTwoDigits = /\\d\\d?/, // 0 - 99\n        parseTokenOneToThreeDigits = /\\d{1,3}/, // 0 - 999\n        parseTokenOneToFourDigits = /\\d{1,4}/, // 0 - 9999\n        parseTokenOneToSixDigits = /[+\\-]?\\d{1,6}/, // -999,999 - 999,999\n        parseTokenDigits = /\\d+/, // nonzero number of digits\n        parseTokenWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i, // any word (or two) characters or numbers including two/three word month in arabic.\n        parseTokenTimezone = /Z|[\\+\\-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        parseTokenT = /T/i, // T (ISO separator)\n        parseTokenTimestampMs = /[\\+\\-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n        parseTokenOrdinal = /\\d{1,2}/,\n\n        //strict parsing regexes\n        parseTokenOneDigit = /\\d/, // 0 - 9\n        parseTokenTwoDigits = /\\d\\d/, // 00 - 99\n        parseTokenThreeDigits = /\\d{3}/, // 000 - 999\n        parseTokenFourDigits = /\\d{4}/, // 0000 - 9999\n        parseTokenSixDigits = /[+-]?\\d{6}/, // -999,999 - 999,999\n        parseTokenSignedNumber = /[+-]?\\d+/, // -inf - inf\n\n        // iso 8601 regex\n        // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n        isoRegex = /^\\s*(?:[+-]\\d{6}|\\d{4})-(?:(\\d\\d-\\d\\d)|(W\\d\\d$)|(W\\d\\d-\\d)|(\\d\\d\\d))((T| )(\\d\\d(:\\d\\d(:\\d\\d(\\.\\d+)?)?)?)?([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n\n        isoFormat = 'YYYY-MM-DDTHH:mm:ssZ',\n\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d{2}-\\d{2}/],\n            ['YYYY-MM-DD', /\\d{4}-\\d{2}-\\d{2}/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d{2}-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d{2}/],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/]\n        ],\n\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /(T| )\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss', /(T| )\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /(T| )\\d\\d:\\d\\d/],\n            ['HH', /(T| )\\d\\d/]\n        ],\n\n        // timezone chunker '+10:00' > ['10', '00'] or '-1530' > ['-15', '30']\n        parseTimezoneChunker = /([\\+\\-]|\\d\\d)/gi,\n\n        // getter and setter names\n        proxyGettersAndSetters = 'Date|Hours|Minutes|Seconds|Milliseconds'.split('|'),\n        unitMillisecondFactors = {\n            'Milliseconds' : 1,\n            'Seconds' : 1e3,\n            'Minutes' : 6e4,\n            'Hours' : 36e5,\n            'Days' : 864e5,\n            'Months' : 2592e6,\n            'Years' : 31536e6\n        },\n\n        unitAliases = {\n            ms : 'millisecond',\n            s : 'second',\n            m : 'minute',\n            h : 'hour',\n            d : 'day',\n            D : 'date',\n            w : 'week',\n            W : 'isoWeek',\n            M : 'month',\n            Q : 'quarter',\n            y : 'year',\n            DDD : 'dayOfYear',\n            e : 'weekday',\n            E : 'isoWeekday',\n            gg: 'weekYear',\n            GG: 'isoWeekYear'\n        },\n\n        camelFunctions = {\n            dayofyear : 'dayOfYear',\n            isoweekday : 'isoWeekday',\n            isoweek : 'isoWeek',\n            weekyear : 'weekYear',\n            isoweekyear : 'isoWeekYear'\n        },\n\n        // format function strings\n        formatFunctions = {},\n\n        // default relative time thresholds\n        relativeTimeThresholds = {\n            s: 45,  // seconds to minute\n            m: 45,  // minutes to hour\n            h: 22,  // hours to day\n            d: 26,  // days to month\n            M: 11   // months to year\n        },\n\n        // tokens to ordinalize and pad\n        ordinalizeTokens = 'DDD w W M D d'.split(' '),\n        paddedTokens = 'M D H h m s w W'.split(' '),\n\n        formatTokenFunctions = {\n            M    : function () {\n                return this.month() + 1;\n            },\n            MMM  : function (format) {\n                return this.localeData().monthsShort(this, format);\n            },\n            MMMM : function (format) {\n                return this.localeData().months(this, format);\n            },\n            D    : function () {\n                return this.date();\n            },\n            DDD  : function () {\n                return this.dayOfYear();\n            },\n            d    : function () {\n                return this.day();\n            },\n            dd   : function (format) {\n                return this.localeData().weekdaysMin(this, format);\n            },\n            ddd  : function (format) {\n                return this.localeData().weekdaysShort(this, format);\n            },\n            dddd : function (format) {\n                return this.localeData().weekdays(this, format);\n            },\n            w    : function () {\n                return this.week();\n            },\n            W    : function () {\n                return this.isoWeek();\n            },\n            YY   : function () {\n                return leftZeroFill(this.year() % 100, 2);\n            },\n            YYYY : function () {\n                return leftZeroFill(this.year(), 4);\n            },\n            YYYYY : function () {\n                return leftZeroFill(this.year(), 5);\n            },\n            YYYYYY : function () {\n                var y = this.year(), sign = y >= 0 ? '+' : '-';\n                return sign + leftZeroFill(Math.abs(y), 6);\n            },\n            gg   : function () {\n                return leftZeroFill(this.weekYear() % 100, 2);\n            },\n            gggg : function () {\n                return leftZeroFill(this.weekYear(), 4);\n            },\n            ggggg : function () {\n                return leftZeroFill(this.weekYear(), 5);\n            },\n            GG   : function () {\n                return leftZeroFill(this.isoWeekYear() % 100, 2);\n            },\n            GGGG : function () {\n                return leftZeroFill(this.isoWeekYear(), 4);\n            },\n            GGGGG : function () {\n                return leftZeroFill(this.isoWeekYear(), 5);\n            },\n            e : function () {\n                return this.weekday();\n            },\n            E : function () {\n                return this.isoWeekday();\n            },\n            a    : function () {\n                return this.localeData().meridiem(this.hours(), this.minutes(), true);\n            },\n            A    : function () {\n                return this.localeData().meridiem(this.hours(), this.minutes(), false);\n            },\n            H    : function () {\n                return this.hours();\n            },\n            h    : function () {\n                return this.hours() % 12 || 12;\n            },\n            m    : function () {\n                return this.minutes();\n            },\n            s    : function () {\n                return this.seconds();\n            },\n            S    : function () {\n                return toInt(this.milliseconds() / 100);\n            },\n            SS   : function () {\n                return leftZeroFill(toInt(this.milliseconds() / 10), 2);\n            },\n            SSS  : function () {\n                return leftZeroFill(this.milliseconds(), 3);\n            },\n            SSSS : function () {\n                return leftZeroFill(this.milliseconds(), 3);\n            },\n            Z    : function () {\n                var a = -this.zone(),\n                    b = '+';\n                if (a < 0) {\n                    a = -a;\n                    b = '-';\n                }\n                return b + leftZeroFill(toInt(a / 60), 2) + ':' + leftZeroFill(toInt(a) % 60, 2);\n            },\n            ZZ   : function () {\n                var a = -this.zone(),\n                    b = '+';\n                if (a < 0) {\n                    a = -a;\n                    b = '-';\n                }\n                return b + leftZeroFill(toInt(a / 60), 2) + leftZeroFill(toInt(a) % 60, 2);\n            },\n            z : function () {\n                return this.zoneAbbr();\n            },\n            zz : function () {\n                return this.zoneName();\n            },\n            X    : function () {\n                return this.unix();\n            },\n            Q : function () {\n                return this.quarter();\n            }\n        },\n\n        deprecations = {},\n\n        lists = ['months', 'monthsShort', 'weekdays', 'weekdaysShort', 'weekdaysMin'];\n\n    // Pick the first defined of two or three arguments. dfl comes from\n    // default.\n    function dfl(a, b, c) {\n        switch (arguments.length) {\n            case 2: return a != null ? a : b;\n            case 3: return a != null ? a : b != null ? b : c;\n            default: throw new Error('Implement me');\n        }\n    }\n\n    function hasOwnProp(a, b) {\n        return hasOwnProperty.call(a, b);\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object, and es5 standard is not very\n        // helpful.\n        return {\n            empty : false,\n            unusedTokens : [],\n            unusedInput : [],\n            overflow : -2,\n            charsLeftOver : 0,\n            nullInput : false,\n            invalidMonth : null,\n            invalidFormat : false,\n            userInvalidated : false,\n            iso: false\n        };\n    }\n\n    function printMsg(msg) {\n        if (moment.suppressDeprecationWarnings === false &&\n                typeof console !== 'undefined' && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n        return extend(function () {\n            if (firstTime) {\n                printMsg(msg);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    function deprecateSimple(name, msg) {\n        if (!deprecations[name]) {\n            printMsg(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    function padToken(func, count) {\n        return function (a) {\n            return leftZeroFill(func.call(this, a), count);\n        };\n    }\n    function ordinalizeToken(func, period) {\n        return function (a) {\n            return this.localeData().ordinal(func.call(this, a), period);\n        };\n    }\n\n    while (ordinalizeTokens.length) {\n        i = ordinalizeTokens.pop();\n        formatTokenFunctions[i + 'o'] = ordinalizeToken(formatTokenFunctions[i], i);\n    }\n    while (paddedTokens.length) {\n        i = paddedTokens.pop();\n        formatTokenFunctions[i + i] = padToken(formatTokenFunctions[i], 2);\n    }\n    formatTokenFunctions.DDDD = padToken(formatTokenFunctions.DDD, 3);\n\n\n    /************************************\n        Constructors\n    ************************************/\n\n    function Locale() {\n    }\n\n    // Moment prototype object\n    function Moment(config, skipOverflow) {\n        if (skipOverflow !== false) {\n            checkOverflow(config);\n        }\n        copyConfig(this, config);\n        this._d = new Date(+config._d);\n    }\n\n    // Duration Constructor\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 36e5; // 1000 * 60 * 60\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = moment.localeData();\n\n        this._bubble();\n    }\n\n    /************************************\n        Helpers\n    ************************************/\n\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (typeof from._isAMomentObject !== 'undefined') {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (typeof from._i !== 'undefined') {\n            to._i = from._i;\n        }\n        if (typeof from._f !== 'undefined') {\n            to._f = from._f;\n        }\n        if (typeof from._l !== 'undefined') {\n            to._l = from._l;\n        }\n        if (typeof from._strict !== 'undefined') {\n            to._strict = from._strict;\n        }\n        if (typeof from._tzm !== 'undefined') {\n            to._tzm = from._tzm;\n        }\n        if (typeof from._isUTC !== 'undefined') {\n            to._isUTC = from._isUTC;\n        }\n        if (typeof from._offset !== 'undefined') {\n            to._offset = from._offset;\n        }\n        if (typeof from._pf !== 'undefined') {\n            to._pf = from._pf;\n        }\n        if (typeof from._locale !== 'undefined') {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i in momentProperties) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (typeof val !== 'undefined') {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.ceil(number);\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    // left zero fill a number\n    // see http://jsperf.com/left-zero-filling for performance comparison\n    function leftZeroFill(number, targetLength, forceSign) {\n        var output = '' + Math.abs(number),\n            sign = number >= 0;\n\n        while (output.length < targetLength) {\n            output = '0' + output;\n        }\n        return (sign ? (forceSign ? '+' : '') : '-') + output;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        other = makeAs(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = moment.duration(val, period);\n            addOrSubtractDurationFromMoment(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addOrSubtractDurationFromMoment(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = duration._days,\n            months = duration._months;\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (milliseconds) {\n            mom._d.setTime(+mom._d + milliseconds * isAdding);\n        }\n        if (days) {\n            rawSetter(mom, 'Date', rawGetter(mom, 'Date') + days * isAdding);\n        }\n        if (months) {\n            rawMonthSetter(mom, rawGetter(mom, 'Month') + months * isAdding);\n        }\n        if (updateOffset) {\n            moment.updateOffset(mom, days || months);\n        }\n    }\n\n    // check if is an array\n    function isArray(input) {\n        return Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isDate(input) {\n        return Object.prototype.toString.call(input) === '[object Date]' ||\n            input instanceof Date;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function normalizeUnits(units) {\n        if (units) {\n            var lowered = units.toLowerCase().replace(/(.)s$/, '$1');\n            units = unitAliases[units] || camelFunctions[lowered] || lowered;\n        }\n        return units;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    function makeList(field) {\n        var count, setter;\n\n        if (field.indexOf('week') === 0) {\n            count = 7;\n            setter = 'day';\n        }\n        else if (field.indexOf('month') === 0) {\n            count = 12;\n            setter = 'month';\n        }\n        else {\n            return;\n        }\n\n        moment[field] = function (format, index) {\n            var i, getter,\n                method = moment._locale[field],\n                results = [];\n\n            if (typeof format === 'number') {\n                index = format;\n                format = undefined;\n            }\n\n            getter = function (i) {\n                var m = moment().utc().set(setter, i);\n                return method.call(moment._locale, m, format || '');\n            };\n\n            if (index != null) {\n                return getter(index);\n            }\n            else {\n                for (i = 0; i < count; i++) {\n                    results.push(getter(i));\n                }\n                return results;\n            }\n        };\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            if (coercedNumber >= 0) {\n                value = Math.floor(coercedNumber);\n            } else {\n                value = Math.ceil(coercedNumber);\n            }\n        }\n\n        return value;\n    }\n\n    function daysInMonth(year, month) {\n        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n    }\n\n    function weeksInYear(year, dow, doy) {\n        return weekOfYear(moment([year, 11, 31 + dow - doy]), dow, doy).week;\n    }\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    function checkOverflow(m) {\n        var overflow;\n        if (m._a && m._pf.overflow === -2) {\n            overflow =\n                m._a[MONTH] < 0 || m._a[MONTH] > 11 ? MONTH :\n                m._a[DATE] < 1 || m._a[DATE] > daysInMonth(m._a[YEAR], m._a[MONTH]) ? DATE :\n                m._a[HOUR] < 0 || m._a[HOUR] > 23 ? HOUR :\n                m._a[MINUTE] < 0 || m._a[MINUTE] > 59 ? MINUTE :\n                m._a[SECOND] < 0 || m._a[SECOND] > 59 ? SECOND :\n                m._a[MILLISECOND] < 0 || m._a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (m._pf._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n\n            m._pf.overflow = overflow;\n        }\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            m._isValid = !isNaN(m._d.getTime()) &&\n                m._pf.overflow < 0 &&\n                !m._pf.empty &&\n                !m._pf.invalidMonth &&\n                !m._pf.nullInput &&\n                !m._pf.invalidFormat &&\n                !m._pf.userInvalidated;\n\n            if (m._strict) {\n                m._isValid = m._isValid &&\n                    m._pf.charsLeftOver === 0 &&\n                    m._pf.unusedTokens.length === 0;\n            }\n        }\n        return m._isValid;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        if (!locales[name] && hasModule) {\n            try {\n                oldLocale = moment.locale();\n                require('./locale/' + name);\n                // because defineLocale currently also sets the global locale, we want to undo that for lazy loaded locales\n                moment.locale(oldLocale);\n            } catch (e) { }\n        }\n        return locales[name];\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function makeAs(input, model) {\n        return model._isUTC ? moment(input).zone(model._offset || 0) :\n            moment(input).local();\n    }\n\n    /************************************\n        Locale\n    ************************************/\n\n\n    extend(Locale.prototype, {\n\n        set : function (config) {\n            var prop, i;\n            for (i in config) {\n                prop = config[i];\n                if (typeof prop === 'function') {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n        },\n\n        _months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        months : function (m) {\n            return this._months[m.month()];\n        },\n\n        _monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        monthsShort : function (m) {\n            return this._monthsShort[m.month()];\n        },\n\n        monthsParse : function (monthName) {\n            var i, mom, regex;\n\n            if (!this._monthsParse) {\n                this._monthsParse = [];\n            }\n\n            for (i = 0; i < 12; i++) {\n                // make the regex if we don't have it already\n                if (!this._monthsParse[i]) {\n                    mom = moment.utc([2000, i]);\n                    regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                    this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n                }\n                // test the regex\n                if (this._monthsParse[i].test(monthName)) {\n                    return i;\n                }\n            }\n        },\n\n        _weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdays : function (m) {\n            return this._weekdays[m.day()];\n        },\n\n        _weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysShort : function (m) {\n            return this._weekdaysShort[m.day()];\n        },\n\n        _weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        weekdaysMin : function (m) {\n            return this._weekdaysMin[m.day()];\n        },\n\n        weekdaysParse : function (weekdayName) {\n            var i, mom, regex;\n\n            if (!this._weekdaysParse) {\n                this._weekdaysParse = [];\n            }\n\n            for (i = 0; i < 7; i++) {\n                // make the regex if we don't have it already\n                if (!this._weekdaysParse[i]) {\n                    mom = moment([2000, 1]).day(i);\n                    regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                    this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n                }\n                // test the regex\n                if (this._weekdaysParse[i].test(weekdayName)) {\n                    return i;\n                }\n            }\n        },\n\n        _longDateFormat : {\n            LT : 'h:mm A',\n            L : 'MM/DD/YYYY',\n            LL : 'MMMM D, YYYY',\n            LLL : 'MMMM D, YYYY LT',\n            LLLL : 'dddd, MMMM D, YYYY LT'\n        },\n        longDateFormat : function (key) {\n            var output = this._longDateFormat[key];\n            if (!output && this._longDateFormat[key.toUpperCase()]) {\n                output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (val) {\n                    return val.slice(1);\n                });\n                this._longDateFormat[key] = output;\n            }\n            return output;\n        },\n\n        isPM : function (input) {\n            // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n            // Using charAt should be more compatible.\n            return ((input + '').toLowerCase().charAt(0) === 'p');\n        },\n\n        _meridiemParse : /[ap]\\.?m?\\.?/i,\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'pm' : 'PM';\n            } else {\n                return isLower ? 'am' : 'AM';\n            }\n        },\n\n        _calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        calendar : function (key, mom) {\n            var output = this._calendar[key];\n            return typeof output === 'function' ? output.apply(mom) : output;\n        },\n\n        _relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n\n        relativeTime : function (number, withoutSuffix, string, isFuture) {\n            var output = this._relativeTime[string];\n            return (typeof output === 'function') ?\n                output(number, withoutSuffix, string, isFuture) :\n                output.replace(/%d/i, number);\n        },\n\n        pastFuture : function (diff, output) {\n            var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n            return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);\n        },\n\n        ordinal : function (number) {\n            return this._ordinal.replace('%d', number);\n        },\n        _ordinal : '%d',\n\n        preparse : function (string) {\n            return string;\n        },\n\n        postformat : function (string) {\n            return string;\n        },\n\n        week : function (mom) {\n            return weekOfYear(mom, this._week.dow, this._week.doy).week;\n        },\n\n        _week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        },\n\n        _invalidDate: 'Invalid date',\n        invalidDate: function () {\n            return this._invalidDate;\n        }\n    });\n\n    /************************************\n        Formatting\n    ************************************/\n\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '';\n            for (i = 0; i < length; i++) {\n                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n\n        if (!formatFunctions[format]) {\n            formatFunctions[format] = makeFormatFunction(format);\n        }\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n\n    /************************************\n        Parsing\n    ************************************/\n\n\n    // get the regex to find the next token\n    function getParseRegexForToken(token, config) {\n        var a, strict = config._strict;\n        switch (token) {\n        case 'Q':\n            return parseTokenOneDigit;\n        case 'DDDD':\n            return parseTokenThreeDigits;\n        case 'YYYY':\n        case 'GGGG':\n        case 'gggg':\n            return strict ? parseTokenFourDigits : parseTokenOneToFourDigits;\n        case 'Y':\n        case 'G':\n        case 'g':\n            return parseTokenSignedNumber;\n        case 'YYYYYY':\n        case 'YYYYY':\n        case 'GGGGG':\n        case 'ggggg':\n            return strict ? parseTokenSixDigits : parseTokenOneToSixDigits;\n        case 'S':\n            if (strict) {\n                return parseTokenOneDigit;\n            }\n            /* falls through */\n        case 'SS':\n            if (strict) {\n                return parseTokenTwoDigits;\n            }\n            /* falls through */\n        case 'SSS':\n            if (strict) {\n                return parseTokenThreeDigits;\n            }\n            /* falls through */\n        case 'DDD':\n            return parseTokenOneToThreeDigits;\n        case 'MMM':\n        case 'MMMM':\n        case 'dd':\n        case 'ddd':\n        case 'dddd':\n            return parseTokenWord;\n        case 'a':\n        case 'A':\n            return config._locale._meridiemParse;\n        case 'X':\n            return parseTokenTimestampMs;\n        case 'Z':\n        case 'ZZ':\n            return parseTokenTimezone;\n        case 'T':\n            return parseTokenT;\n        case 'SSSS':\n            return parseTokenDigits;\n        case 'MM':\n        case 'DD':\n        case 'YY':\n        case 'GG':\n        case 'gg':\n        case 'HH':\n        case 'hh':\n        case 'mm':\n        case 'ss':\n        case 'ww':\n        case 'WW':\n            return strict ? parseTokenTwoDigits : parseTokenOneOrTwoDigits;\n        case 'M':\n        case 'D':\n        case 'd':\n        case 'H':\n        case 'h':\n        case 'm':\n        case 's':\n        case 'w':\n        case 'W':\n        case 'e':\n        case 'E':\n            return parseTokenOneOrTwoDigits;\n        case 'Do':\n            return parseTokenOrdinal;\n        default :\n            a = new RegExp(regexpEscape(unescapeFormat(token.replace('\\\\', '')), 'i'));\n            return a;\n        }\n    }\n\n    function timezoneMinutesFromString(string) {\n        string = string || '';\n        var possibleTzMatches = (string.match(parseTokenTimezone) || []),\n            tzChunk = possibleTzMatches[possibleTzMatches.length - 1] || [],\n            parts = (tzChunk + '').match(parseTimezoneChunker) || ['-', 0, 0],\n            minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return parts[0] === '+' ? -minutes : minutes;\n    }\n\n    // function to convert string input to date\n    function addTimeToArrayFromToken(token, input, config) {\n        var a, datePartArray = config._a;\n\n        switch (token) {\n        // QUARTER\n        case 'Q':\n            if (input != null) {\n                datePartArray[MONTH] = (toInt(input) - 1) * 3;\n            }\n            break;\n        // MONTH\n        case 'M' : // fall through to MM\n        case 'MM' :\n            if (input != null) {\n                datePartArray[MONTH] = toInt(input) - 1;\n            }\n            break;\n        case 'MMM' : // fall through to MMMM\n        case 'MMMM' :\n            a = config._locale.monthsParse(input);\n            // if we didn't find a month name, mark the date as invalid.\n            if (a != null) {\n                datePartArray[MONTH] = a;\n            } else {\n                config._pf.invalidMonth = input;\n            }\n            break;\n        // DAY OF MONTH\n        case 'D' : // fall through to DD\n        case 'DD' :\n            if (input != null) {\n                datePartArray[DATE] = toInt(input);\n            }\n            break;\n        case 'Do' :\n            if (input != null) {\n                datePartArray[DATE] = toInt(parseInt(input, 10));\n            }\n            break;\n        // DAY OF YEAR\n        case 'DDD' : // fall through to DDDD\n        case 'DDDD' :\n            if (input != null) {\n                config._dayOfYear = toInt(input);\n            }\n\n            break;\n        // YEAR\n        case 'YY' :\n            datePartArray[YEAR] = moment.parseTwoDigitYear(input);\n            break;\n        case 'YYYY' :\n        case 'YYYYY' :\n        case 'YYYYYY' :\n            datePartArray[YEAR] = toInt(input);\n            break;\n        // AM / PM\n        case 'a' : // fall through to A\n        case 'A' :\n            config._isPm = config._locale.isPM(input);\n            break;\n        // 24 HOUR\n        case 'H' : // fall through to hh\n        case 'HH' : // fall through to hh\n        case 'h' : // fall through to hh\n        case 'hh' :\n            datePartArray[HOUR] = toInt(input);\n            break;\n        // MINUTE\n        case 'm' : // fall through to mm\n        case 'mm' :\n            datePartArray[MINUTE] = toInt(input);\n            break;\n        // SECOND\n        case 's' : // fall through to ss\n        case 'ss' :\n            datePartArray[SECOND] = toInt(input);\n            break;\n        // MILLISECOND\n        case 'S' :\n        case 'SS' :\n        case 'SSS' :\n        case 'SSSS' :\n            datePartArray[MILLISECOND] = toInt(('0.' + input) * 1000);\n            break;\n        // UNIX TIMESTAMP WITH MS\n        case 'X':\n            config._d = new Date(parseFloat(input) * 1000);\n            break;\n        // TIMEZONE\n        case 'Z' : // fall through to ZZ\n        case 'ZZ' :\n            config._useUTC = true;\n            config._tzm = timezoneMinutesFromString(input);\n            break;\n        // WEEKDAY - human\n        case 'dd':\n        case 'ddd':\n        case 'dddd':\n            a = config._locale.weekdaysParse(input);\n            // if we didn't get a weekday name, mark the date as invalid\n            if (a != null) {\n                config._w = config._w || {};\n                config._w['d'] = a;\n            } else {\n                config._pf.invalidWeekday = input;\n            }\n            break;\n        // WEEK, WEEK DAY - numeric\n        case 'w':\n        case 'ww':\n        case 'W':\n        case 'WW':\n        case 'd':\n        case 'e':\n        case 'E':\n            token = token.substr(0, 1);\n            /* falls through */\n        case 'gggg':\n        case 'GGGG':\n        case 'GGGGG':\n            token = token.substr(0, 2);\n            if (input) {\n                config._w = config._w || {};\n                config._w[token] = toInt(input);\n            }\n            break;\n        case 'gg':\n        case 'GG':\n            config._w = config._w || {};\n            config._w[token] = moment.parseTwoDigitYear(input);\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = dfl(w.GG, config._a[YEAR], weekOfYear(moment(), 1, 4).year);\n            week = dfl(w.W, 1);\n            weekday = dfl(w.E, 1);\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            weekYear = dfl(w.gg, config._a[YEAR], weekOfYear(moment(), dow, doy).year);\n            week = dfl(w.w, 1);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < dow) {\n                    ++week;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);\n\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function dateFromConfig(config) {\n        var i, date, input = [], currentDate, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear) {\n            yearToUse = dfl(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse)) {\n                config._pf._overflowDayOfYear = true;\n            }\n\n            date = makeUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        config._d = (config._useUTC ? makeUTCDate : makeDate).apply(null, input);\n        // Apply timezone offset from input. The actual zone can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() + config._tzm);\n        }\n    }\n\n    function dateFromObject(config) {\n        var normalizedInput;\n\n        if (config._d) {\n            return;\n        }\n\n        normalizedInput = normalizeObjectUnits(config._i);\n        config._a = [\n            normalizedInput.year,\n            normalizedInput.month,\n            normalizedInput.day,\n            normalizedInput.hour,\n            normalizedInput.minute,\n            normalizedInput.second,\n            normalizedInput.millisecond\n        ];\n\n        dateFromConfig(config);\n    }\n\n    function currentDateArray(config) {\n        var now = new Date();\n        if (config._useUTC) {\n            return [\n                now.getUTCFullYear(),\n                now.getUTCMonth(),\n                now.getUTCDate()\n            ];\n        } else {\n            return [now.getFullYear(), now.getMonth(), now.getDate()];\n        }\n    }\n\n    // date from string and format string\n    function makeDateFromStringAndFormat(config) {\n        if (config._f === moment.ISO_8601) {\n            parseISO(config);\n            return;\n        }\n\n        config._a = [];\n        config._pf.empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    config._pf.unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    config._pf.empty = false;\n                }\n                else {\n                    config._pf.unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                config._pf.unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        config._pf.charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            config._pf.unusedInput.push(string);\n        }\n\n        // handle am pm\n        if (config._isPm && config._a[HOUR] < 12) {\n            config._a[HOUR] += 12;\n        }\n        // if is 12 am, change hours to 0\n        if (config._isPm === false && config._a[HOUR] === 12) {\n            config._a[HOUR] = 0;\n        }\n\n        dateFromConfig(config);\n        checkOverflow(config);\n    }\n\n    function unescapeFormat(s) {\n        return s.replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        });\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function regexpEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    // date from string and array of format strings\n    function makeDateFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            config._pf.invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._pf = defaultParsingFlags();\n            tempConfig._f = config._f[i];\n            makeDateFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += tempConfig._pf.charsLeftOver;\n\n            //or tokens\n            currentScore += tempConfig._pf.unusedTokens.length * 10;\n\n            tempConfig._pf.score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    // date from iso format\n    function parseISO(config) {\n        var i, l,\n            string = config._i,\n            match = isoRegex.exec(string);\n\n        if (match) {\n            config._pf.iso = true;\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(string)) {\n                    // match[5] should be 'T' or undefined\n                    config._f = isoDates[i][0] + (match[6] || ' ');\n                    break;\n                }\n            }\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(string)) {\n                    config._f += isoTimes[i][0];\n                    break;\n                }\n            }\n            if (string.match(parseTokenTimezone)) {\n                config._f += 'Z';\n            }\n            makeDateFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function makeDateFromString(config) {\n        parseISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n            moment.createFromInputFallback(config);\n        }\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function makeDateFromInput(config) {\n        var input = config._i, matched;\n        if (input === undefined) {\n            config._d = new Date();\n        } else if (isDate(input)) {\n            config._d = new Date(+input);\n        } else if ((matched = aspNetJsonRegex.exec(input)) !== null) {\n            config._d = new Date(+matched[1]);\n        } else if (typeof input === 'string') {\n            makeDateFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            dateFromConfig(config);\n        } else if (typeof(input) === 'object') {\n            dateFromObject(config);\n        } else if (typeof(input) === 'number') {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            moment.createFromInputFallback(config);\n        }\n    }\n\n    function makeDate(y, m, d, h, M, s, ms) {\n        //can't just apply() to create a date:\n        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        //the date constructor doesn't accept years < 1970\n        if (y < 1970) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function makeUTCDate(y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n        if (y < 1970) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    function parseWeekday(input, locale) {\n        if (typeof input === 'string') {\n            if (!isNaN(input)) {\n                input = parseInt(input, 10);\n            }\n            else {\n                input = locale.weekdaysParse(input);\n                if (typeof input !== 'number') {\n                    return null;\n                }\n            }\n        }\n        return input;\n    }\n\n    /************************************\n        Relative Time\n    ************************************/\n\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime(posNegDuration, withoutSuffix, locale) {\n        var duration = moment.duration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            years = round(duration.as('y')),\n\n            args = seconds < relativeTimeThresholds.s && ['s', seconds] ||\n                minutes === 1 && ['m'] ||\n                minutes < relativeTimeThresholds.m && ['mm', minutes] ||\n                hours === 1 && ['h'] ||\n                hours < relativeTimeThresholds.h && ['hh', hours] ||\n                days === 1 && ['d'] ||\n                days < relativeTimeThresholds.d && ['dd', days] ||\n                months === 1 && ['M'] ||\n                months < relativeTimeThresholds.M && ['MM', months] ||\n                years === 1 && ['y'] || ['yy', years];\n\n        args[2] = withoutSuffix;\n        args[3] = +posNegDuration > 0;\n        args[4] = locale;\n        return substituteTimeAgo.apply({}, args);\n    }\n\n\n    /************************************\n        Week of Year\n    ************************************/\n\n\n    // firstDayOfWeek       0 = sun, 6 = sat\n    //                      the day of the week that starts the week\n    //                      (usually sunday or monday)\n    // firstDayOfWeekOfYear 0 = sun, 6 = sat\n    //                      the first week is the week that contains the first\n    //                      of this day of the week\n    //                      (eg. ISO weeks use thursday (4))\n    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {\n        var end = firstDayOfWeekOfYear - firstDayOfWeek,\n            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),\n            adjustedMoment;\n\n\n        if (daysToDayOfWeek > end) {\n            daysToDayOfWeek -= 7;\n        }\n\n        if (daysToDayOfWeek < end - 7) {\n            daysToDayOfWeek += 7;\n        }\n\n        adjustedMoment = moment(mom).add(daysToDayOfWeek, 'd');\n        return {\n            week: Math.ceil(adjustedMoment.dayOfYear() / 7),\n            year: adjustedMoment.year()\n        };\n    }\n\n    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {\n        var d = makeUTCDate(year, 0, 1).getUTCDay(), daysToAdd, dayOfYear;\n\n        d = d === 0 ? 7 : d;\n        weekday = weekday != null ? weekday : firstDayOfWeek;\n        daysToAdd = firstDayOfWeek - d + (d > firstDayOfWeekOfYear ? 7 : 0) - (d < firstDayOfWeek ? 7 : 0);\n        dayOfYear = 7 * (week - 1) + (weekday - firstDayOfWeek) + daysToAdd + 1;\n\n        return {\n            year: dayOfYear > 0 ? year : year - 1,\n            dayOfYear: dayOfYear > 0 ?  dayOfYear : daysInYear(year - 1) + dayOfYear\n        };\n    }\n\n    /************************************\n        Top Level Functions\n    ************************************/\n\n    function makeMoment(config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || moment.localeData(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return moment.invalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (moment.isMoment(input)) {\n            return new Moment(input, true);\n        } else if (format) {\n            if (isArray(format)) {\n                makeDateFromStringAndArray(config);\n            } else {\n                makeDateFromStringAndFormat(config);\n            }\n        } else {\n            makeDateFromInput(config);\n        }\n\n        return new Moment(config);\n    }\n\n    moment = function (input, format, locale, strict) {\n        var c;\n\n        if (typeof(locale) === 'boolean') {\n            strict = locale;\n            locale = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c = {};\n        c._isAMomentObject = true;\n        c._i = input;\n        c._f = format;\n        c._l = locale;\n        c._strict = strict;\n        c._isUTC = false;\n        c._pf = defaultParsingFlags();\n\n        return makeMoment(c);\n    };\n\n    moment.suppressDeprecationWarnings = false;\n\n    moment.createFromInputFallback = deprecate(\n        'moment construction falls back to js Date. This is ' +\n        'discouraged and will be removed in upcoming major ' +\n        'release. Please refer to ' +\n        'https://github.com/moment/moment/issues/1407 for more info.',\n        function (config) {\n            config._d = new Date(config._i);\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return moment();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    moment.min = function () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    };\n\n    moment.max = function () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    };\n\n    // creating with utc\n    moment.utc = function (input, format, locale, strict) {\n        var c;\n\n        if (typeof(locale) === 'boolean') {\n            strict = locale;\n            locale = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c = {};\n        c._isAMomentObject = true;\n        c._useUTC = true;\n        c._isUTC = true;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n        c._pf = defaultParsingFlags();\n\n        return makeMoment(c).utc();\n    };\n\n    // creating with unix timestamp (in seconds)\n    moment.unix = function (input) {\n        return moment(input * 1000);\n    };\n\n    // duration\n    moment.duration = function (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            parseIso,\n            diffRes;\n\n        if (moment.isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months\n            };\n        } else if (typeof input === 'number') {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetTimeSpanJsonRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(match[MILLISECOND]) * sign\n            };\n        } else if (!!(match = isoDurationRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            parseIso = function (inp) {\n                // We'd normally use ~~inp for this, but unfortunately it also\n                // converts floats to ints.\n                // inp may be undefined, so careful calling replace on it.\n                var res = inp && parseFloat(inp.replace(',', '.'));\n                // apply sign while we're at it\n                return (isNaN(res) ? 0 : res) * sign;\n            };\n            duration = {\n                y: parseIso(match[2]),\n                M: parseIso(match[3]),\n                d: parseIso(match[4]),\n                h: parseIso(match[5]),\n                m: parseIso(match[6]),\n                s: parseIso(match[7]),\n                w: parseIso(match[8])\n            };\n        } else if (typeof duration === 'object' &&\n                ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(moment(duration.from), moment(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (moment.isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    };\n\n    // version number\n    moment.version = VERSION;\n\n    // default format\n    moment.defaultFormat = isoFormat;\n\n    // constant that refers to the ISO standard\n    moment.ISO_8601 = function () {};\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    moment.momentProperties = momentProperties;\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    moment.updateOffset = function () {};\n\n    // This function allows you to set a threshold for relative time strings\n    moment.relativeTimeThreshold = function (threshold, limit) {\n        if (relativeTimeThresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return relativeTimeThresholds[threshold];\n        }\n        relativeTimeThresholds[threshold] = limit;\n        return true;\n    };\n\n    moment.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        function (key, value) {\n            return moment.locale(key, value);\n        }\n    );\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    moment.locale = function (key, values) {\n        var data;\n        if (key) {\n            if (typeof(values) !== 'undefined') {\n                data = moment.defineLocale(key, values);\n            }\n            else {\n                data = moment.localeData(key);\n            }\n\n            if (data) {\n                moment.duration._locale = moment._locale = data;\n            }\n        }\n\n        return moment._locale._abbr;\n    };\n\n    moment.defineLocale = function (name, values) {\n        if (values !== null) {\n            values.abbr = name;\n            if (!locales[name]) {\n                locales[name] = new Locale();\n            }\n            locales[name].set(values);\n\n            // backwards compat for now: also set the locale\n            moment.locale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    };\n\n    moment.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        function (key) {\n            return moment.localeData(key);\n        }\n    );\n\n    // returns locale data\n    moment.localeData = function (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return moment._locale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    };\n\n    // compare moment object\n    moment.isMoment = function (obj) {\n        return obj instanceof Moment ||\n            (obj != null && hasOwnProp(obj, '_isAMomentObject'));\n    };\n\n    // for typechecking Duration objects\n    moment.isDuration = function (obj) {\n        return obj instanceof Duration;\n    };\n\n    for (i = lists.length - 1; i >= 0; --i) {\n        makeList(lists[i]);\n    }\n\n    moment.normalizeUnits = function (units) {\n        return normalizeUnits(units);\n    };\n\n    moment.invalid = function (flags) {\n        var m = moment.utc(NaN);\n        if (flags != null) {\n            extend(m._pf, flags);\n        }\n        else {\n            m._pf.userInvalidated = true;\n        }\n\n        return m;\n    };\n\n    moment.parseZone = function () {\n        return moment.apply(null, arguments).parseZone();\n    };\n\n    moment.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    /************************************\n        Moment Prototype\n    ************************************/\n\n\n    extend(moment.fn = Moment.prototype, {\n\n        clone : function () {\n            return moment(this);\n        },\n\n        valueOf : function () {\n            return +this._d + ((this._offset || 0) * 60000);\n        },\n\n        unix : function () {\n            return Math.floor(+this / 1000);\n        },\n\n        toString : function () {\n            return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n        },\n\n        toDate : function () {\n            return this._offset ? new Date(+this) : this._d;\n        },\n\n        toISOString : function () {\n            var m = moment(this).utc();\n            if (0 < m.year() && m.year() <= 9999) {\n                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n            } else {\n                return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n            }\n        },\n\n        toArray : function () {\n            var m = this;\n            return [\n                m.year(),\n                m.month(),\n                m.date(),\n                m.hours(),\n                m.minutes(),\n                m.seconds(),\n                m.milliseconds()\n            ];\n        },\n\n        isValid : function () {\n            return isValid(this);\n        },\n\n        isDSTShifted : function () {\n            if (this._a) {\n                return this.isValid() && compareArrays(this._a, (this._isUTC ? moment.utc(this._a) : moment(this._a)).toArray()) > 0;\n            }\n\n            return false;\n        },\n\n        parsingFlags : function () {\n            return extend({}, this._pf);\n        },\n\n        invalidAt: function () {\n            return this._pf.overflow;\n        },\n\n        utc : function (keepLocalTime) {\n            return this.zone(0, keepLocalTime);\n        },\n\n        local : function (keepLocalTime) {\n            if (this._isUTC) {\n                this.zone(0, keepLocalTime);\n                this._isUTC = false;\n\n                if (keepLocalTime) {\n                    this.add(this._dateTzOffset(), 'm');\n                }\n            }\n            return this;\n        },\n\n        format : function (inputString) {\n            var output = formatMoment(this, inputString || moment.defaultFormat);\n            return this.localeData().postformat(output);\n        },\n\n        add : createAdder(1, 'add'),\n\n        subtract : createAdder(-1, 'subtract'),\n\n        diff : function (input, units, asFloat) {\n            var that = makeAs(input, this),\n                zoneDiff = (this.zone() - that.zone()) * 6e4,\n                diff, output, daysAdjust;\n\n            units = normalizeUnits(units);\n\n            if (units === 'year' || units === 'month') {\n                // average number of days in the months in the given dates\n                diff = (this.daysInMonth() + that.daysInMonth()) * 432e5; // 24 * 60 * 60 * 1000 / 2\n                // difference in months\n                output = ((this.year() - that.year()) * 12) + (this.month() - that.month());\n                // adjust by taking difference in days, average number of days\n                // and dst in the given months.\n                daysAdjust = (this - moment(this).startOf('month')) -\n                    (that - moment(that).startOf('month'));\n                // same as above but with zones, to negate all dst\n                daysAdjust -= ((this.zone() - moment(this).startOf('month').zone()) -\n                        (that.zone() - moment(that).startOf('month').zone())) * 6e4;\n                output += daysAdjust / diff;\n                if (units === 'year') {\n                    output = output / 12;\n                }\n            } else {\n                diff = (this - that);\n                output = units === 'second' ? diff / 1e3 : // 1000\n                    units === 'minute' ? diff / 6e4 : // 1000 * 60\n                    units === 'hour' ? diff / 36e5 : // 1000 * 60 * 60\n                    units === 'day' ? (diff - zoneDiff) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n                    units === 'week' ? (diff - zoneDiff) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n                    diff;\n            }\n            return asFloat ? output : absRound(output);\n        },\n\n        from : function (time, withoutSuffix) {\n            return moment.duration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        },\n\n        fromNow : function (withoutSuffix) {\n            return this.from(moment(), withoutSuffix);\n        },\n\n        calendar : function (time) {\n            // We want to compare the start of today, vs this.\n            // Getting start-of-today depends on whether we're zone'd or not.\n            var now = time || moment(),\n                sod = makeAs(now, this).startOf('day'),\n                diff = this.diff(sod, 'days', true),\n                format = diff < -6 ? 'sameElse' :\n                    diff < -1 ? 'lastWeek' :\n                    diff < 0 ? 'lastDay' :\n                    diff < 1 ? 'sameDay' :\n                    diff < 2 ? 'nextDay' :\n                    diff < 7 ? 'nextWeek' : 'sameElse';\n            return this.format(this.localeData().calendar(format, this));\n        },\n\n        isLeapYear : function () {\n            return isLeapYear(this.year());\n        },\n\n        isDST : function () {\n            return (this.zone() < this.clone().month(0).zone() ||\n                this.zone() < this.clone().month(5).zone());\n        },\n\n        day : function (input) {\n            var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n            if (input != null) {\n                input = parseWeekday(input, this.localeData());\n                return this.add(input - day, 'd');\n            } else {\n                return day;\n            }\n        },\n\n        month : makeAccessor('Month', true),\n\n        startOf : function (units) {\n            units = normalizeUnits(units);\n            // the following switch intentionally omits break keywords\n            // to utilize falling through the cases.\n            switch (units) {\n            case 'year':\n                this.month(0);\n                /* falls through */\n            case 'quarter':\n            case 'month':\n                this.date(1);\n                /* falls through */\n            case 'week':\n            case 'isoWeek':\n            case 'day':\n                this.hours(0);\n                /* falls through */\n            case 'hour':\n                this.minutes(0);\n                /* falls through */\n            case 'minute':\n                this.seconds(0);\n                /* falls through */\n            case 'second':\n                this.milliseconds(0);\n                /* falls through */\n            }\n\n            // weeks are a special case\n            if (units === 'week') {\n                this.weekday(0);\n            } else if (units === 'isoWeek') {\n                this.isoWeekday(1);\n            }\n\n            // quarters are also special\n            if (units === 'quarter') {\n                this.month(Math.floor(this.month() / 3) * 3);\n            }\n\n            return this;\n        },\n\n        endOf: function (units) {\n            units = normalizeUnits(units);\n            return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n        },\n\n        isAfter: function (input, units) {\n            units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n            if (units === 'millisecond') {\n                input = moment.isMoment(input) ? input : moment(input);\n                return +this > +input;\n            } else {\n                return +this.clone().startOf(units) > +moment(input).startOf(units);\n            }\n        },\n\n        isBefore: function (input, units) {\n            units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n            if (units === 'millisecond') {\n                input = moment.isMoment(input) ? input : moment(input);\n                return +this < +input;\n            } else {\n                return +this.clone().startOf(units) < +moment(input).startOf(units);\n            }\n        },\n\n        isSame: function (input, units) {\n            units = normalizeUnits(units || 'millisecond');\n            if (units === 'millisecond') {\n                input = moment.isMoment(input) ? input : moment(input);\n                return +this === +input;\n            } else {\n                return +this.clone().startOf(units) === +makeAs(input, this).startOf(units);\n            }\n        },\n\n        min: deprecate(\n                 'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',\n                 function (other) {\n                     other = moment.apply(null, arguments);\n                     return other < this ? this : other;\n                 }\n         ),\n\n        max: deprecate(\n                'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',\n                function (other) {\n                    other = moment.apply(null, arguments);\n                    return other > this ? this : other;\n                }\n        ),\n\n        // keepLocalTime = true means only change the timezone, without\n        // affecting the local hour. So 5:31:26 +0300 --[zone(2, true)]-->\n        // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist int zone\n        // +0200, so we adjust the time as needed, to be valid.\n        //\n        // Keeping the time actually adds/subtracts (one hour)\n        // from the actual represented time. That is why we call updateOffset\n        // a second time. In case it wants us to change the offset again\n        // _changeInProgress == true case, then we have to adjust, because\n        // there is no such time in the given timezone.\n        zone : function (input, keepLocalTime) {\n            var offset = this._offset || 0,\n                localAdjust;\n            if (input != null) {\n                if (typeof input === 'string') {\n                    input = timezoneMinutesFromString(input);\n                }\n                if (Math.abs(input) < 16) {\n                    input = input * 60;\n                }\n                if (!this._isUTC && keepLocalTime) {\n                    localAdjust = this._dateTzOffset();\n                }\n                this._offset = input;\n                this._isUTC = true;\n                if (localAdjust != null) {\n                    this.subtract(localAdjust, 'm');\n                }\n                if (offset !== input) {\n                    if (!keepLocalTime || this._changeInProgress) {\n                        addOrSubtractDurationFromMoment(this,\n                                moment.duration(offset - input, 'm'), 1, false);\n                    } else if (!this._changeInProgress) {\n                        this._changeInProgress = true;\n                        moment.updateOffset(this, true);\n                        this._changeInProgress = null;\n                    }\n                }\n            } else {\n                return this._isUTC ? offset : this._dateTzOffset();\n            }\n            return this;\n        },\n\n        zoneAbbr : function () {\n            return this._isUTC ? 'UTC' : '';\n        },\n\n        zoneName : function () {\n            return this._isUTC ? 'Coordinated Universal Time' : '';\n        },\n\n        parseZone : function () {\n            if (this._tzm) {\n                this.zone(this._tzm);\n            } else if (typeof this._i === 'string') {\n                this.zone(this._i);\n            }\n            return this;\n        },\n\n        hasAlignedHourOffset : function (input) {\n            if (!input) {\n                input = 0;\n            }\n            else {\n                input = moment(input).zone();\n            }\n\n            return (this.zone() - input) % 60 === 0;\n        },\n\n        daysInMonth : function () {\n            return daysInMonth(this.year(), this.month());\n        },\n\n        dayOfYear : function (input) {\n            var dayOfYear = round((moment(this).startOf('day') - moment(this).startOf('year')) / 864e5) + 1;\n            return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n        },\n\n        quarter : function (input) {\n            return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n        },\n\n        weekYear : function (input) {\n            var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;\n            return input == null ? year : this.add((input - year), 'y');\n        },\n\n        isoWeekYear : function (input) {\n            var year = weekOfYear(this, 1, 4).year;\n            return input == null ? year : this.add((input - year), 'y');\n        },\n\n        week : function (input) {\n            var week = this.localeData().week(this);\n            return input == null ? week : this.add((input - week) * 7, 'd');\n        },\n\n        isoWeek : function (input) {\n            var week = weekOfYear(this, 1, 4).week;\n            return input == null ? week : this.add((input - week) * 7, 'd');\n        },\n\n        weekday : function (input) {\n            var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n            return input == null ? weekday : this.add(input - weekday, 'd');\n        },\n\n        isoWeekday : function (input) {\n            // behaves the same as moment#day except\n            // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n            // as a setter, sunday should belong to the previous week.\n            return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);\n        },\n\n        isoWeeksInYear : function () {\n            return weeksInYear(this.year(), 1, 4);\n        },\n\n        weeksInYear : function () {\n            var weekInfo = this.localeData()._week;\n            return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n        },\n\n        get : function (units) {\n            units = normalizeUnits(units);\n            return this[units]();\n        },\n\n        set : function (units, value) {\n            units = normalizeUnits(units);\n            if (typeof this[units] === 'function') {\n                this[units](value);\n            }\n            return this;\n        },\n\n        // If passed a locale key, it will set the locale for this\n        // instance.  Otherwise, it will return the locale configuration\n        // variables for this instance.\n        locale : function (key) {\n            var newLocaleData;\n\n            if (key === undefined) {\n                return this._locale._abbr;\n            } else {\n                newLocaleData = moment.localeData(key);\n                if (newLocaleData != null) {\n                    this._locale = newLocaleData;\n                }\n                return this;\n            }\n        },\n\n        lang : deprecate(\n            'moment().lang() is deprecated. Use moment().localeData() instead.',\n            function (key) {\n                if (key === undefined) {\n                    return this.localeData();\n                } else {\n                    return this.locale(key);\n                }\n            }\n        ),\n\n        localeData : function () {\n            return this._locale;\n        },\n\n        _dateTzOffset : function () {\n            // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n            // https://github.com/moment/moment/pull/1871\n            return Math.round(this._d.getTimezoneOffset() / 15) * 15;\n        }\n    });\n\n    function rawMonthSetter(mom, value) {\n        var dayOfMonth;\n\n        // TODO: Move this out of here!\n        if (typeof value === 'string') {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (typeof value !== 'number') {\n                return mom;\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(),\n                daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function rawGetter(mom, unit) {\n        return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();\n    }\n\n    function rawSetter(mom, unit, value) {\n        if (unit === 'Month') {\n            return rawMonthSetter(mom, value);\n        } else {\n            return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n        }\n    }\n\n    function makeAccessor(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                rawSetter(this, unit, value);\n                moment.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return rawGetter(this, unit);\n            }\n        };\n    }\n\n    moment.fn.millisecond = moment.fn.milliseconds = makeAccessor('Milliseconds', false);\n    moment.fn.second = moment.fn.seconds = makeAccessor('Seconds', false);\n    moment.fn.minute = moment.fn.minutes = makeAccessor('Minutes', false);\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour he wants. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    moment.fn.hour = moment.fn.hours = makeAccessor('Hours', true);\n    // moment.fn.month is defined separately\n    moment.fn.date = makeAccessor('Date', true);\n    moment.fn.dates = deprecate('dates accessor is deprecated. Use date instead.', makeAccessor('Date', true));\n    moment.fn.year = makeAccessor('FullYear', true);\n    moment.fn.years = deprecate('years accessor is deprecated. Use year instead.', makeAccessor('FullYear', true));\n\n    // add plural methods\n    moment.fn.days = moment.fn.day;\n    moment.fn.months = moment.fn.month;\n    moment.fn.weeks = moment.fn.week;\n    moment.fn.isoWeeks = moment.fn.isoWeek;\n    moment.fn.quarters = moment.fn.quarter;\n\n    // add aliased format methods\n    moment.fn.toJSON = moment.fn.toISOString;\n\n    /************************************\n        Duration Prototype\n    ************************************/\n\n\n    function daysToYears (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        return days * 400 / 146097;\n    }\n\n    function yearsToDays (years) {\n        // years * 365 + absRound(years / 4) -\n        //     absRound(years / 100) + absRound(years / 400);\n        return years * 146097 / 400;\n    }\n\n    extend(moment.duration.fn = Duration.prototype, {\n\n        _bubble : function () {\n            var milliseconds = this._milliseconds,\n                days = this._days,\n                months = this._months,\n                data = this._data,\n                seconds, minutes, hours, years = 0;\n\n            // The following code bubbles up values, see the tests for\n            // examples of what that means.\n            data.milliseconds = milliseconds % 1000;\n\n            seconds = absRound(milliseconds / 1000);\n            data.seconds = seconds % 60;\n\n            minutes = absRound(seconds / 60);\n            data.minutes = minutes % 60;\n\n            hours = absRound(minutes / 60);\n            data.hours = hours % 24;\n\n            days += absRound(hours / 24);\n\n            // Accurately convert days to years, assume start from year 0.\n            years = absRound(daysToYears(days));\n            days -= absRound(yearsToDays(years));\n\n            // 30 days to a month\n            // TODO (iskren): Use anchor date (like 1st Jan) to compute this.\n            months += absRound(days / 30);\n            days %= 30;\n\n            // 12 months -> 1 year\n            years += absRound(months / 12);\n            months %= 12;\n\n            data.days = days;\n            data.months = months;\n            data.years = years;\n        },\n\n        abs : function () {\n            this._milliseconds = Math.abs(this._milliseconds);\n            this._days = Math.abs(this._days);\n            this._months = Math.abs(this._months);\n\n            this._data.milliseconds = Math.abs(this._data.milliseconds);\n            this._data.seconds = Math.abs(this._data.seconds);\n            this._data.minutes = Math.abs(this._data.minutes);\n            this._data.hours = Math.abs(this._data.hours);\n            this._data.months = Math.abs(this._data.months);\n            this._data.years = Math.abs(this._data.years);\n\n            return this;\n        },\n\n        weeks : function () {\n            return absRound(this.days() / 7);\n        },\n\n        valueOf : function () {\n            return this._milliseconds +\n              this._days * 864e5 +\n              (this._months % 12) * 2592e6 +\n              toInt(this._months / 12) * 31536e6;\n        },\n\n        humanize : function (withSuffix) {\n            var output = relativeTime(this, !withSuffix, this.localeData());\n\n            if (withSuffix) {\n                output = this.localeData().pastFuture(+this, output);\n            }\n\n            return this.localeData().postformat(output);\n        },\n\n        add : function (input, val) {\n            // supports only 2.0-style add(1, 's') or add(moment)\n            var dur = moment.duration(input, val);\n\n            this._milliseconds += dur._milliseconds;\n            this._days += dur._days;\n            this._months += dur._months;\n\n            this._bubble();\n\n            return this;\n        },\n\n        subtract : function (input, val) {\n            var dur = moment.duration(input, val);\n\n            this._milliseconds -= dur._milliseconds;\n            this._days -= dur._days;\n            this._months -= dur._months;\n\n            this._bubble();\n\n            return this;\n        },\n\n        get : function (units) {\n            units = normalizeUnits(units);\n            return this[units.toLowerCase() + 's']();\n        },\n\n        as : function (units) {\n            var days, months;\n            units = normalizeUnits(units);\n\n            if (units === 'month' || units === 'year') {\n                days = this._days + this._milliseconds / 864e5;\n                months = this._months + daysToYears(days) * 12;\n                return units === 'month' ? months : months / 12;\n            } else {\n                // handle milliseconds separately because of floating point math errors (issue #1867)\n                days = this._days + yearsToDays(this._months / 12);\n                switch (units) {\n                    case 'week': return days / 7 + this._milliseconds / 6048e5;\n                    case 'day': return days + this._milliseconds / 864e5;\n                    case 'hour': return days * 24 + this._milliseconds / 36e5;\n                    case 'minute': return days * 24 * 60 + this._milliseconds / 6e4;\n                    case 'second': return days * 24 * 60 * 60 + this._milliseconds / 1000;\n                    // Math.floor prevents floating point math errors here\n                    case 'millisecond': return Math.floor(days * 24 * 60 * 60 * 1000) + this._milliseconds;\n                    default: throw new Error('Unknown unit ' + units);\n                }\n            }\n        },\n\n        lang : moment.fn.lang,\n        locale : moment.fn.locale,\n\n        toIsoString : deprecate(\n            'toIsoString() is deprecated. Please use toISOString() instead ' +\n            '(notice the capitals)',\n            function () {\n                return this.toISOString();\n            }\n        ),\n\n        toISOString : function () {\n            // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n            var years = Math.abs(this.years()),\n                months = Math.abs(this.months()),\n                days = Math.abs(this.days()),\n                hours = Math.abs(this.hours()),\n                minutes = Math.abs(this.minutes()),\n                seconds = Math.abs(this.seconds() + this.milliseconds() / 1000);\n\n            if (!this.asSeconds()) {\n                // this is the same as C#'s (Noda) and python (isodate)...\n                // but not other JS (goog.date)\n                return 'P0D';\n            }\n\n            return (this.asSeconds() < 0 ? '-' : '') +\n                'P' +\n                (years ? years + 'Y' : '') +\n                (months ? months + 'M' : '') +\n                (days ? days + 'D' : '') +\n                ((hours || minutes || seconds) ? 'T' : '') +\n                (hours ? hours + 'H' : '') +\n                (minutes ? minutes + 'M' : '') +\n                (seconds ? seconds + 'S' : '');\n        },\n\n        localeData : function () {\n            return this._locale;\n        }\n    });\n\n    moment.duration.fn.toString = moment.duration.fn.toISOString;\n\n    function makeDurationGetter(name) {\n        moment.duration.fn[name] = function () {\n            return this._data[name];\n        };\n    }\n\n    for (i in unitMillisecondFactors) {\n        if (hasOwnProp(unitMillisecondFactors, i)) {\n            makeDurationGetter(i.toLowerCase());\n        }\n    }\n\n    moment.duration.fn.asMilliseconds = function () {\n        return this.as('ms');\n    };\n    moment.duration.fn.asSeconds = function () {\n        return this.as('s');\n    };\n    moment.duration.fn.asMinutes = function () {\n        return this.as('m');\n    };\n    moment.duration.fn.asHours = function () {\n        return this.as('h');\n    };\n    moment.duration.fn.asDays = function () {\n        return this.as('d');\n    };\n    moment.duration.fn.asWeeks = function () {\n        return this.as('weeks');\n    };\n    moment.duration.fn.asMonths = function () {\n        return this.as('M');\n    };\n    moment.duration.fn.asYears = function () {\n        return this.as('y');\n    };\n\n    /************************************\n        Default Locale\n    ************************************/\n\n\n    // Set default locale, other locale will inherit from English.\n    moment.locale('en', {\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    /* EMBED_LOCALES */\n\n    /************************************\n        Exposing Moment\n    ************************************/\n\n    function makeGlobal(shouldDeprecate) {\n        /*global ender:false */\n        if (typeof ender !== 'undefined') {\n            return;\n        }\n        oldGlobalMoment = globalScope.moment;\n        if (shouldDeprecate) {\n            globalScope.moment = deprecate(\n                    'Accessing Moment through the global scope is ' +\n                    'deprecated, and will be removed in an upcoming ' +\n                    'release.',\n                    moment);\n        } else {\n            globalScope.moment = moment;\n        }\n    }\n\n    // CommonJS module is defined\n    if (hasModule) {\n        module.exports = moment;\n    } else if (typeof define === 'function' && define.amd) {\n        define('moment', function (require, exports, module) {\n            if (module.config && module.config() && module.config().noGlobal === true) {\n                // release the global variable\n                globalScope.moment = oldGlobalMoment;\n            }\n\n            return moment;\n        });\n        makeGlobal(true);\n    } else {\n        makeGlobal();\n    }\n}).call(this);\n\n}).call(this,typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],21:[function(require,module,exports){\n/*\nWildEmitter.js is a slim little event emitter by @henrikjoreteg largely based \non @visionmedia's Emitter from UI Kit.\n\nWhy? I wanted it standalone.\n\nI also wanted support for wildcard emitters like this:\n\nemitter.on('*', function (eventName, other, event, payloads) {\n    \n});\n\nemitter.on('somenamespace*', function (eventName, payloads) {\n    \n});\n\nPlease note that callbacks triggered by wildcard registered events also get \nthe event name as the first argument.\n*/\nmodule.exports = WildEmitter;\n\nfunction WildEmitter() {\n    this.callbacks = {};\n}\n\n// Listen on the given `event` with `fn`. Store a group name if present.\nWildEmitter.prototype.on = function (event, groupName, fn) {\n    var hasGroup = (arguments.length === 3),\n        group = hasGroup ? arguments[1] : undefined,\n        func = hasGroup ? arguments[2] : arguments[1];\n    func._groupName = group;\n    (this.callbacks[event] = this.callbacks[event] || []).push(func);\n    return this;\n};\n\n// Adds an `event` listener that will be invoked a single\n// time then automatically removed.\nWildEmitter.prototype.once = function (event, groupName, fn) {\n    var self = this,\n        hasGroup = (arguments.length === 3),\n        group = hasGroup ? arguments[1] : undefined,\n        func = hasGroup ? arguments[2] : arguments[1];\n    function on() {\n        self.off(event, on);\n        func.apply(this, arguments);\n    }\n    this.on(event, group, on);\n    return this;\n};\n\n// Unbinds an entire group\nWildEmitter.prototype.releaseGroup = function (groupName) {\n    var item, i, len, handlers;\n    for (item in this.callbacks) {\n        handlers = this.callbacks[item];\n        for (i = 0, len = handlers.length; i < len; i++) {\n            if (handlers[i]._groupName === groupName) {\n                //console.log('removing');\n                // remove it and shorten the array we're looping through\n                handlers.splice(i, 1);\n                i--;\n                len--;\n            }\n        }\n    }\n    return this;\n};\n\n// Remove the given callback for `event` or all\n// registered callbacks.\nWildEmitter.prototype.off = function (event, fn) {\n    var callbacks = this.callbacks[event],\n        i;\n\n    if (!callbacks) return this;\n\n    // remove all handlers\n    if (arguments.length === 1) {\n        delete this.callbacks[event];\n        return this;\n    }\n\n    // remove specific handler\n    i = callbacks.indexOf(fn);\n    callbacks.splice(i, 1);\n    return this;\n};\n\n/// Emit `event` with the given args.\n// also calls any `*` handlers\nWildEmitter.prototype.emit = function (event) {\n    var args = [].slice.call(arguments, 1),\n        callbacks = this.callbacks[event],\n        specialCallbacks = this.getWildcardCallbacks(event),\n        i,\n        len,\n        item,\n        listeners;\n\n    if (callbacks) {\n        listeners = callbacks.slice();\n        for (i = 0, len = listeners.length; i < len; ++i) {\n            if (listeners[i]) {\n                listeners[i].apply(this, args);\n            } else {\n                break;\n            }\n        }\n    }\n\n    if (specialCallbacks) {\n        len = specialCallbacks.length;\n        listeners = specialCallbacks.slice();\n        for (i = 0, len = listeners.length; i < len; ++i) {\n            if (listeners[i]) {\n                listeners[i].apply(this, [event].concat(args));\n            } else {\n                break;\n            }\n        }\n    }\n\n    return this;\n};\n\n// Helper for for finding special wildcard event handlers that match the event\nWildEmitter.prototype.getWildcardCallbacks = function (eventName) {\n    var item,\n        split,\n        result = [];\n\n    for (item in this.callbacks) {\n        split = item.split('*');\n        if (item === '*' || (split.length === 2 && eventName.slice(0, split[0].length) === split[0])) {\n            result = result.concat(this.callbacks[item]);\n        }\n    }\n    return result;\n};\n\n},{}],22:[function(require,module,exports){\n\nvar Config = function(webSocketResponder) {\n\twebSocketResponder.once(\"config\", function(data) {\n\t\tthis._config = data\n\t}.bind(this));\n};\n\nConfig.prototype.get = function(key) {\n\tif(!this._config || !key) {\n\t\treturn null;\n\t}\n\n\tvar value = this._config;\n\n\tkey.split(\":\").forEach(function(property) {\n\t\tif(typeof(value[property]) != \"undefined\") {\n\t\t\tvalue = value[property];\n\t\t} else {\n\t\t\tvalue = null;\n\t\t}\n\t});\n\n\treturn value;\n}\n\nmodule.exports = Config;\n\n},{}],23:[function(require,module,exports){\nvar EventEmitter = require(\"wildemitter\"),\n\tutil = require(\"util\"),\n\tHostData = require(\"./../../common/HostData\");\n\nUIHostList = function(config, webSocketResponder) {\n\tEventEmitter.call(this);\n\n\t// populate host data when it's available\n\twebSocketResponder.once(\"hosts\", function(list) {\n\t\tlist.forEach(function(data) {\n\t\t\tthis.add(data);\n\t\t}.bind(this));\n\t}.bind(this));\n\n\t// update host data occasionally\n\twebSocketResponder.on(\"systemData\", function(data) {\n\t\tthis.update(data);\n\t}.bind(this));\n\n\t// update host data occasionally\n\twebSocketResponder.on(\"log:info\", function(host, pm_id, data) {\n\t\tvar process = this._findByHostAndProcessId(host, pm_id);\n\n\t\tif(!process) {\n\t\t\treturn;\n\t\t}\n\n\t\tprocess.log(\"info\", data);\n\t}.bind(this));\n\n\twebSocketResponder.on(\"log:error\", function(host, pm_id, data) {\n\t\tvar process = this._findByHostAndProcessId(host, pm_id);\n\n\t\tif(!process) {\n\t\t\treturn;\n\t\t}\n\n\t\tprocess.log(\"error\", data);\n\t}.bind(this));\n\n\twebSocketResponder.on(\"process:exception\", function(host, pm_id, message, stack) {\n\t\tvar process = this._findByHostAndProcessId(host, pm_id);\n\n\t\tif(!process) {\n\t\t\treturn;\n\t\t}\n\n\t\tprocess.throwing = true;\n\n\t\tsetTimeout(function() {\n\t\t\tdelete process.throwing;\n\t\t}, 1000);\n\t}.bind(this));\n\n\tthis._config = config;\n\tthis._hosts = {};\n};\nutil.inherits(UIHostList, EventEmitter);\n\nUIHostList.prototype.empty = function() {\n\tthis._hosts = {};\n};\n\nUIHostList.prototype.add = function(data) {\n\tthis._hosts[data.name] = new HostData(data, this._config);\n\n\tthis.update(data);\n\n\tthis.emit(\"newHost\", data.name);\n};\n\nUIHostList.prototype.update = function(data) {\n\tif(!this._hosts[data.name]) {\n\t\treturn this.add(data);\n\t}\n\n\tthis._hosts[data.name].update(data);\n\n\tthis.emit(\"update\", data.name);\n};\n\nUIHostList.prototype.find = function(host) {\n\tvar result = this._hosts[host];\n\n\treturn result ? result : null;\n};\n\nUIHostList.prototype.hosts = function() {\n\tvar result = Object.keys(this._hosts);\n\n\treturn result ? result : null;\n};\n\nUIHostList.prototype._findByHostAndProcessId = function(host, pm_id) {\n\tvar host = this.find(host);\n\n\tif(!host) {\n\t\treturn;\n\t}\n\n\treturn host.findProcessById(pm_id);\n};\n\nmodule.exports = UIHostList;\n\n},{\"./../../common/HostData\":1,\"util\":15,\"wildemitter\":21}],24:[function(require,module,exports){\nvar EventEmitter = require(\"wildemitter\"),\n\tutil = require(\"util\");\n\nvar READYSTATE = {\n\tCONNECTING: 0,\n\tOPEN: 1,\n\tCLOSING: 2,\n\tCLOSED: 3\n};\n\nWebSocketResponder = function(location, $rootScope) {\n\tEventEmitter.apply(this);\n\n\tthis.url = this._detectLocation(location);\n\n\tconsole.info(\"WebSocketResponder\", \"Connecting to\", this.url);\n\n\tthis._ws = new ReconnectingWebSocket(this.url);\n\tthis._ws.onconnecting = function() {\n\t\tthis.emit(\"connecting\");\n\t}.bind(this);\n\tthis._ws.onopen = function() {\n\t\tthis.emit(\"open\");\n\t}.bind(this);\n\tthis._ws.onmessage = function(message) {\n\t\tvar events = JSON.parse(message.data);\n\n\t\tif(!Array.isArray(events)) {\n\t\t\treturn;\n\t\t}\n\n\t\t$rootScope.$apply(function() {\n\t\t\tevents.forEach(function(event) {\n\t\t\t\tif(event && event.method && this[event.method]) {\n\t\t\t\t\tthis[event.method].apply(this, event.args);\n\t\t\t\t}\n\t\t\t}.bind(this));\n\t\t}.bind(this));\n\t}.bind(this);\n\tthis._ws.onclose = function() {\n\t\tthis.emit(\"closed\");\n\t}.bind(this);\n\tthis._ws.onerror = function(event) {\n\t\tthis.emit(\"error\", event);\n\t}.bind(this);\n};\nutil.inherits(WebSocketResponder, EventEmitter);\n\nWebSocketResponder.prototype._detectLocation = function(location) {\n\tvar protocol = \"ws\";\n\n\tif(location.protocol.indexOf(\"https\") != -1) {\n\t\tprotocol += \"s\";\n\t}\n\n\treturn protocol + \"://\" + location.hostname + \":\" + location.port + \"/ws\";\n}\n\nWebSocketResponder.prototype.isClosed = function() {\n\treturn this._ws.readyState == READYSTATE.CLOSED;\n};\n\nWebSocketResponder.prototype.isConnecting = function() {\n\treturn this._ws.readyState == READYSTATE.CONNECTING;\n};\n\nWebSocketResponder.prototype.isOpen = function() {\n\treturn this._ws.readyState == READYSTATE.OPEN;\n};\n\nWebSocketResponder.prototype.onSystemData = function(data) {\n\tthis.emit(\"systemData\", data);\n};\n\nWebSocketResponder.prototype.onHosts = function(hosts) {\n\tthis.emit(\"hosts\", hosts);\n}\n\nWebSocketResponder.prototype.onConfig = function(config) {\n\tthis.emit(\"config\", config);\n};\n\nWebSocketResponder.prototype.onInfoLog = function(host, pm_id, log) {\n\tthis.emit(\"log:info\", host, pm_id, log);\n};\n\nWebSocketResponder.prototype.onErrorLog = function(host, pm_id, log) {\n\tthis.emit(\"log:error\", host, pm_id, log);\n};\n\nWebSocketResponder.prototype.onProcessException = function(host, pm_id, message, stack) {\n\tthis.emit(\"log:error\", host, pm_id, stack);\n\tthis.emit(\"process:exception\", host, pm_id, message, stack);\n};\n\nWebSocketResponder.prototype._send = function(message) {\n\tthis._ws.send(JSON.stringify(message));\n};\n\nWebSocketResponder.prototype.startProcess = function(host, pm_id) {\n\tthis._send({\n\t\tmethod: \"startProcess\",\n\t\targs: [host, pm_id]\n\t});\n};\n\nWebSocketResponder.prototype.stopProcess = function(host, pm_id) {\n\tthis._send({\n\t\tmethod: \"stopProcess\",\n\t\targs: [host, pm_id]\n\t});\n};\n\nWebSocketResponder.prototype.restartProcess = function(host, pm_id) {\n\tthis._send({\n\t\tmethod: \"restartProcess\",\n\t\targs: [host, pm_id]\n\t});\n};\n\nWebSocketResponder.prototype.reloadProcess = function(host, pm_id) {\n\tthis._send({\n\t\tmethod: \"reloadProcess\",\n\t\targs: [host, pm_id]\n\t});\n};\n\nWebSocketResponder.prototype.debugProcess = function(host, pm_id) {\n\tthis._send({\n\t\tmethod: \"debugProcess\",\n\t\targs: [host, pm_id]\n\t});\n};\n\nWebSocketResponder.READYSTATE = READYSTATE;\n\nmodule.exports = WebSocketResponder;\n},{\"util\":15,\"wildemitter\":21}],25:[function(require,module,exports){\n\nmodule.exports = [\"$window\", \"$scope\", \"$location\", \"webSocketResponder\", \"hostList\", function($window, $scope, $location, webSocketResponder, hostList) {\n\tif(!$window[\"WebSocket\"]) {\n\t\t$scope.alerts = [{\n\t\t\ttype: \"error\",\n\t\t\tmessage: \"Your browser does not support web sockets, please consider upgrading.\"\n\t\t}];\n\n\t\treturn;\n\t}\n\n\twebSocketResponder.on(\"connecting\", function() {\n\t\t$scope.$apply(function() {\n\t\t\t$scope.alerts = [{\n\t\t\t\ttype: \"info\",\n\t\t\t\tmessage: \"Connecting to \" + webSocketResponder.url\n\t\t\t}];\n\t\t});\n\t});\n\twebSocketResponder.on(\"open\", function() {\n\t\t$scope.$apply(function() {\n\t\t\t$scope.alerts = [{\n\t\t\t\ttype: \"success\",\n\t\t\t\tmessage: \"Waiting for hosts...\"\n\t\t\t}];\n\t\t});\n\t});\n\twebSocketResponder.on(\"closed\", function() {\n\t\thostList.empty();\n\n\t\t$scope.$apply(function() {\n\t\t\t/*$scope.alerts = [{\n\t\t\t type: \"error\",\n\t\t\t message: \"Socket dropped connection\"\n\t\t\t }];*/\n\n\t\t\t$location.path(\"/\");\n\t\t});\n\t});\n\twebSocketResponder.on(\"error\", function(event) {\n\t\tvar message = \"\";\n\n\t\tif(0 == event.target.readyState) {\n\t\t\tmessage = \" - socket closed, attempting to reconnect\";\n\t\t} else if(2 == event.target.readyState) {\n\t\t\tmessage = \" - socket closing\";\n\t\t} else if(3 == event.target.readyState) {\n\t\t\tmessage = \" - socket closed\";\n\t\t}\n\n\t\t$scope.$apply(function() {\n\t\t\t$scope.alerts = [{\n\t\t\t\ttype: \"error\",\n\t\t\t\tmessage: \"Socket error\" + message\n\t\t\t}];\n\t\t});\n\t});\n\n\thostList.once(\"update\", function(host) {\n\t\t$location.path(\"/hosts/\" + host);\n\t});\n}];\n\n},{}],26:[function(require,module,exports){\n\nmodule.exports = [\"$window\", \"$scope\", function($window, $scope) {\n\t$scope.version = $window.settings.version;\n}];\n\n},{}],27:[function(require,module,exports){\n\nmodule.exports = [\"$scope\", \"$routeParams\", \"$location\", \"hostList\", function($scope, $routeParams, $location, hostList) {\n\t$scope.tabs = [];\n\n\tvar updateScope = function() {\n\t\t$scope.tabs.length = 0;\n\n\t\thostList.hosts().forEach(function(hostName) {\n\t\t\t$scope.tabs.push({\n\t\t\t\ttitle: hostName,\n\t\t\t\tselected: $routeParams.host == hostName\n\t\t\t})\n\t\t});\n\n\t\t$scope.changeHost = function(hostName) {\n\t\t\tif(hostName == $routeParams.host) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$scope.tabs.forEach(function(tab) {\n\t\t\t\ttab.selected = $routeParams.host == tab.hostName;\n\t\t\t});\n\n\t\t\t$location.path(\"/hosts/\" + hostName);\n\t\t}\n\t};\n\tupdateScope();\n\n\t// redraw tabs when new host is found\n\thostList.on(\"newHost\", function() {\n\t\tupdateScope();\n\t});\n}];\n\n},{}],28:[function(require,module,exports){\n\nmodule.exports = [\"$scope\", \"$routeParams\", \"$location\", \"$window\", \"hostList\", \"webSocketResponder\", function($scope, $routeParams, $location, $window, hostList, webSocketResponder) {\n\t$scope.showDetails = {};\n\n\tvar updateScope = function() {\n\t\tvar hostData = hostList.find($routeParams.host);\n\n\t\tif(!hostData) {\n\t\t\tconsole.warn(\"Could not load host data for\", $routeParams.host);\n\n\t\t\treturn $location.path(\"/\");\n\t\t}\n\n\t\t$scope.hostData = hostData;\n\t\t$scope.processes = hostData.processes;\n\t\t$scope.debugEnabled = hostData.inspector ? true : false;\n\n\t\t$scope.toggleDetails = function(pm_id) {\n\t\t\t$scope.showDetails[pm_id] = !$scope.showDetails[pm_id];\n\t\t};\n\n\t\t$scope.start = function(pm_id, $event) {\n\t\t\t$event.stopPropagation();\n\n\t\t\twebSocketResponder.startProcess(hostData.name, pm_id);\n\t\t};\n\t\t$scope.stop = function(pm_id, $event) {\n\t\t\t$event.stopPropagation();\n\n\t\t\twebSocketResponder.stopProcess(hostData.name, pm_id);\n\t\t};\n\t\t$scope.restart = function(pm_id, $event) {\n\t\t\t$event.stopPropagation();\n\n\t\t\twebSocketResponder.restartProcess(hostData.name, pm_id);\n\t\t};\n\t\t$scope.reload = function(process, $event) {\n\t\t\t$event.stopPropagation();\n\n\t\t\tprocess.reloading = true;\n\n\t\t\twebSocketResponder.reloadProcess(hostData.name, process.id);\n\t\t};\n\t\t$scope.debug = function(process, $event) {\n\t\t\t$event.stopPropagation();\n\n\t\t\twebSocketResponder.debugProcess(hostData.name, process.id);\n\n\t\t\t$window.open(\"http://\" + hostData.name + \":\" + hostData.inspector + \"/debug?port=\" + process.debugPort, hostData.name + \"-\" + process.id, \"location=no,menubar=no,status=no,toolbar=no\");\n\t\t};\n\t\t$scope.clearLogs = function(process) {\n\t\t\tprocess.logs.length = 0;\n\t\t}\n\t};\n\tupdateScope();\n\n\thostList.on(\"update\", function(hostName) {\n\t\t// only update scope if the update was for our host\n\t\tif(hostName == $routeParams.host) {\n\t\t\tupdateScope();\n\t\t}\n\t});\n}];\n\n},{}],29:[function(require,module,exports){\n\nmodule.exports = [\"$scope\", \"$routeParams\", \"$location\", \"$window\", \"config\", \"hostList\", function($scope, $routeParams, $location, $window, config, hostList) {\n\tvar updateScope = function() {\n\t\tvar hostData = hostList.find($routeParams.host);\n\n\t\tif(!hostData) {\n\t\t\treturn $location.path(\"/\");\n\t\t}\n\n\t\t$scope.hostData = hostData;\n\t};\n\tupdateScope();\n\n\thostList.on(\"update\", function(hostName) {\n\t\t// only update scope if the update was for our host\n\t\tif(hostName == $routeParams.host) {\n\t\t\tupdateScope();\n\t\t}\n\t});\n\n\t$scope.pm2WebVersion = $window.settings.version;\n\t$scope.pm2VersionRequired = config.get(\"requiredPm2Version\");\n}];\n\n},{}],30:[function(require,module,exports){\n\nmodule.exports = [\"config\", function(config) {\n\treturn {\n\t\trestrict: \"A\",\n\t\tscope: {\n\t\t\tdata: \"=\"\n\t\t},\n\t\tlink: function($scope, $element, $attributes) {\n\t\t\tvar data = {\n\t\t\t\t\"xScale\": \"time\",\n\t\t\t\t\"yScale\": \"linear\",\n\t\t\t\t\"type\": \"line\",\n\t\t\t\t\"main\": [{\n\t\t\t\t\t\t\"className\": \".cpu\",\n\t\t\t\t\t\t\"data\": $scope.data.cpu\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"className\": \".memory\",\n\t\t\t\t\t\t\"data\": $scope.data.memory\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tvar chart = new Highcharts.Chart({\n\t\t\t\tchart: {\n\t\t\t\t\ttype: \"areaspline\",\n\t\t\t\t\trenderTo: $element[0]\n\t\t\t\t},\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: null\n\t\t\t\t},\n\t\t\t\tlegend: {\n\t\t\t\t\tenabled: false\n\t\t\t\t},\n\t\t\t\tcredits: {\n\t\t\t\t\tenabled: false\n\t\t\t\t},\n\t\t\t\texporting: {\n\t\t\t\t\tenabled: false\n\t\t\t\t},\n\t\t\t\txAxis: {\n\t\t\t\t\ttype: \"datetime\",\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\toverflow: \"justify\",\n\t\t\t\t\t\ty: 25\n\t\t\t\t\t},\n\t\t\t\t\tgridLineColor: \"#EEEEEE\",\n\t\t\t\t\tgridLineWidth: 1\n\t\t\t\t},\n\t\t\t\tyAxis: {\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\ttext: null\n\t\t\t\t\t},\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tformat: \"{value}%\"\n\t\t\t\t\t},\n\t\t\t\t\tmin: 0,\n\t\t\t\t\tmax: 100,\n\t\t\t\t\tgridLineColor: \"#EEEEEE\"\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\tvalueSuffix: \" %\",\n\t\t\t\t\t// disabled until data interpolation is added\n\t\t\t\t\tenabled: false\n\t\t\t\t},\n\t\t\t\tplotOptions: {\n\t\t\t\t\tareaspline: {\n\t\t\t\t\t\tlineWidth: 4,\n\t\t\t\t\t\tstates: {\n\t\t\t\t\t\t\thover: {\n\t\t\t\t\t\t\t\tlineWidth: 5\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t// disabled markers until data interpolation is supported\n\t\t\t\t\t\tmarker: {\n\t\t\t\t\t\t\tenabled: false,\n\t\t\t\t\t\t\tstates: {\n\t\t\t\t\t\t\t\thover: {\n\t\t\t\t\t\t\t\t\tenabled: false\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfillOpacity: 0.1\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tseries: [{\n\t\t\t\t\tname: \"CPU\",\n\t\t\t\t\tcolor: \"#347FAC\",\n\t\t\t\t\tdata: $scope.data.cpu\n\t\t\t\t}, {\n\t\t\t\t\tname: \"Memory\",\n\t\t\t\t\tcolor: \"#49AA3C\",\n\t\t\t\t\tdata: $scope.data.memory\n\t\t\t\t}]\n\t\t\t});\n\n\t\t\t// much simpler than $scope.$watchCollection\n\t\t\tsetInterval(function() {\n\t\t\t\tchart.series[1].setData($scope.data.memory, true);\n\t\t\t\tchart.series[0].setData($scope.data.cpu, true);\n\t\t\t}, config.get(\"updateFrequency\"));\n\t\t}\n\t};\n}];\n\n},{}],31:[function(require,module,exports){\nfunction fakeNgModel(initValue){\n\treturn {\n\t\t$setViewValue: function(value){\n\t\t\tthis.$viewValue = value;\n\t\t},\n\t\t$viewValue: initValue\n\t};\n};\n\nmodule.exports = [function() {\n\treturn {\n\t\tpriority: 1,\n\t\trequire: ['?ngModel'],\n\t\trestrict: 'A',\n\t\tlink: function(scope, $el, attrs, ctrls){\n\t\t\tvar el = $el[0],\n\t\t\t\tngModel = ctrls[0] || fakeNgModel(true);\n\n\t\t\tfunction scrollToBottom(){\n\t\t\t\tel.scrollTop = el.scrollHeight;\n\t\t\t}\n\n\t\t\tfunction shouldActivateAutoScroll(){\n\t\t\t\t// + 1 catches off by one errors in chrome\n\t\t\t\treturn el.scrollTop + el.clientHeight + 1 >= el.scrollHeight;\n\t\t\t}\n\n\t\t\tscope.$watch(function(){\n\t\t\t\tif(ngModel.$viewValue){\n\t\t\t\t\tscrollToBottom();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$el.bind('scroll', function(){\n\t\t\t\tscope.$apply(ngModel.$setViewValue.bind(ngModel, shouldActivateAutoScroll()));\n\t\t\t});\n\t\t}\n\t};\n}];\n\n},{}],32:[function(require,module,exports){\nvar Convert = require(\"ansi-to-html\"),\n\tEntities = require(\"html-entities\").XmlEntities;\n\nvar convert = new Convert();\nvar entities = new Entities();\n\nmodule.exports = [\"$sce\", function($sce) {\n\treturn function(text) {\n\t\tvar encoded = entities.encode(text);\n\n\t\treturn $sce.trustAsHtml(convert.toHtml(encoded));\n\t}\n}];\n\n},{\"ansi-to-html\":3,\"html-entities\":16}],33:[function(require,module,exports){\n\nmodule.exports = function() {\n\treturn function(number, decimalPlaces) {\n\t\tif(!number && number !== 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn number.toFixed(decimalPlaces);\n\t}\n};\n\n},{}],34:[function(require,module,exports){\nvar Moment = require(\"moment\");\n\nmodule.exports = function() {\n\treturn function(date) {\n\t\treturn Moment.duration(date, \"seconds\").humanize();\n\t}\n};\n\n},{\"moment\":20}],35:[function(require,module,exports){\n\nmodule.exports = function() {\n\tvar sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\"];\n\n\treturn function(bytes) {\n\t\tif(!bytes && bytes !== 0) {\n\t\t\treturn \"0 B\";\n\t\t}\n\n\t\tfor(var i = sizes.length; i > 0; i--) {\n\t\t\tvar step = Math.pow(1024, i);\n\n\t\t\tif (bytes >= step) {\n\t\t\t\treturn (bytes / step).toFixed(2) + \" \" + sizes[i];\n\t\t\t}\n\t\t}\n\n\t\treturn bytes + \" B\";\n\t}\n};\n\n},{}],36:[function(require,module,exports){\n\"use strict\";\n\nvar WebSocketResponder = require(\"./components/WebSocketResponder\"),\n\tHostList = require(\"./components/UIHostList\"),\n\tConfig = require(\"./components/Config\");\n\nvar pm2Web = angular.module(\"pm2-web\", [\n\t\"ngRoute\",\n\t\"ngSanitize\",\n\t\"ui.bootstrap\",\n\t\"highcharts-ng\"\n]);\n\npm2Web.config(require(\"./routes\"));\npm2Web.factory(\"hostList\", [\"config\", \"webSocketResponder\", function(config, webSocketResponder) {\n\treturn new HostList(config, webSocketResponder);\n}]);\npm2Web.factory(\"webSocketResponder\", [\"$window\", \"$rootScope\", function($window, $rootScope) {\n\treturn new WebSocketResponder($window.location, $rootScope);\n}]);\npm2Web.factory(\"config\", [\"webSocketResponder\", function(webSocketResponder) {\n\treturn new Config(webSocketResponder);\n}]);\n\n// directives\npm2Web.directive(\"resourceusage\", require(\"./directives/resourceUsage\"));\npm2Web.directive(\"scrollglue\", require(\"./directives/scrollGlue\"));\n\n// filters\npm2Web.filter(\"decimalPlaces\", require(\"./filters/decimalPlaces\"));\npm2Web.filter(\"humanise\", require(\"./filters/humanise\"));\npm2Web.filter(\"memory\", require(\"./filters/memory\"));\npm2Web.filter(\"ansiToHtml\", require(\"./filters/ansiToHtml\"));\n\n// controllers\npm2Web.controller(\"ConnectionController\", require(\"./controllers/connection\"));\npm2Web.controller(\"SystemController\", require(\"./controllers/system\"));\npm2Web.controller(\"ProcessListController\", require(\"./controllers/processList\"));\npm2Web.controller(\"HostListController\", require(\"./controllers/hostList\"));\npm2Web.controller(\"FooterController\", require(\"./controllers/footer\"));\n\n},{\"./components/Config\":22,\"./components/UIHostList\":23,\"./components/WebSocketResponder\":24,\"./controllers/connection\":25,\"./controllers/footer\":26,\"./controllers/hostList\":27,\"./controllers/processList\":28,\"./controllers/system\":29,\"./directives/resourceUsage\":30,\"./directives/scrollGlue\":31,\"./filters/ansiToHtml\":32,\"./filters/decimalPlaces\":33,\"./filters/humanise\":34,\"./filters/memory\":35,\"./routes\":37}],37:[function(require,module,exports){\n\nmodule.exports = [\"$routeProvider\",\n\tfunction($routeProvider) {\n\t\t$routeProvider.\n\t\t\twhen(\"/hosts/:host\", {\n\t\t\t\ttemplateUrl: \"/js/partials/host.html\"\n\t\t\t}).\n\t\t\totherwise({\n\t\t\t\ttemplateUrl: \"/js/partials/connecting.html\",\n\t\t\t\tcontroller: \"ConnectionController\"\n\t\t\t});\n\t}\n];\n\n},{}]},{},[36]);"}